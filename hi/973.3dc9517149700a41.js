"use strict";(self.webpackChunkmempool=self.webpackChunkmempool||[]).push([[973],{7973:(Ut,M,b)=>{b.r(M),b.d(M,{DocsModule:()=>$t});var F=b(177),j=b(9267),v=b(8185),e=b(4438),y=b(2083),q=b(6491),A=b(2251),G=b(1954),_=b(1760),N=b(1413),I=b(7786),L=b(7673),B=b(8141),z=b(6977);const d=["","testnet","testnet4","signet"],r=["liquid","liquidtestnet"],h=["","testnet","signet"],k="<code>24h</code>, <code>3d</code>, <code>1w</code>, <code>1m</code>, <code>3m</code>, <code>6m</code>, <code>1y</code>, <code>2y</code>, <code>3y</code>",n={esModule:[],commonJS:[],curl:[],response:""},f={"":!0,testnet:!0,signet:!0,liquid:!0,liquidtestnet:!1},l={"":!1,testnet:!1,signet:!1,liquid:!1,liquidtestnet:!1},$={showJsExamples:f,codeTemplate:{curl:"/api/v1/ws",commonJS:'\n        const { %{0}: { websocket } } = mempoolJS();\n\n        const ws = websocket.initClient({\n          options: [\'blocks\', \'stats\', \'mempool-blocks\', \'live-2h-chart\'],\n        });\n\n        ws.addEventListener(\'message\', function incoming({data}) {\n          const res = JSON.parse(data.toString());\n          if (res.block) {\n            document.getElementById("result-blocks").textContent = JSON.stringify(res.block, undefined, 2);\n          }\n          if (res.mempoolInfo) {\n            document.getElementById("result-mempool-info").textContent = JSON.stringify(res.mempoolInfo, undefined, 2);\n          }\n          if (res.transactions) {\n            document.getElementById("result-transactions").textContent = JSON.stringify(res.transactions, undefined, 2);\n          }\n          if (res["mempool-blocks"]) {\n            document.getElementById("result-mempool-blocks").textContent = JSON.stringify(res["mempool-blocks"], undefined, 2);\n          }\n        });\n  ',esModule:'\n  const { %{0}: { websocket } } = mempoolJS();\n\n  const ws = websocket.initServer({\n    options: ["blocks", "stats", "mempool-blocks", "live-2h-chart"],\n  });\n\n  ws.on("message", function incoming(data) {\n    const res = JSON.parse(data.toString());\n    if (res.block) {\n      console.log(res.block);\n    }\n    if (res.mempoolInfo) {\n      console.log(res.mempoolInfo);\n    }\n    if (res.transactions) {\n      console.log(res.transactions);\n    }\n    if (res["mempool-blocks"]) {\n      console.log(res["mempool-blocks"]);\n    }\n  });\n    ',python:'import websocket\nimport _thread\nimport time\nimport rel\nimport json\n\nrel.safe_read()\n\ndef on_message(ws, message):\n    print(json.loads(message))\n\ndef on_error(ws, error):\n    print(error)\n\ndef on_close(ws, close_status_code, close_msg):\n    print("### closed ###")\n\ndef on_open(ws):\n    message = { "action": "init" }\n    ws.send(json.dumps(message))\n    message = { "action": "want", "data": [\'blocks\', \'stats\', \'mempool-blocks\', \'live-2h-chart\', \'watch-mempool\'] }\n    ws.send(json.dumps(message))\n\nif __name__ == "__main__":\n    ws = websocket.WebSocketApp("wss://mempool.space/api/v1/ws",\n                              on_open=on_open,\n                              on_message=on_message,\n                              on_error=on_error,\n                              on_close=on_close)\n\n    ws.run_forever(dispatcher=rel)  # Set dispatcher to automatic reconnection\n    rel.signal(2, rel.abort)  # Keyboard Interrupt\n    rel.dispatch()\n    '},codeSampleMainnet:n,codeSampleTestnet:n,codeSampleSignet:n,codeSampleLiquid:n},C=[{type:"category",category:"general",fragment:"general",title:"General",showConditions:d},{type:"endpoint",category:"general",httpRequestMethod:"GET",fragment:"get-difficulty-adjustment",title:"GET Difficulty Adjustment",description:{default:"Returns details about difficulty adjustment."},urlString:"/v1/difficulty-adjustment",showConditions:d,showJsExamples:f,codeExample:{default:{codeTemplate:{commonJS:'\n        const { %{0}: { difficulty } } = mempoolJS();\n\n        const difficultyAdjustment = await difficulty.getDifficultyAdjustment();\n\n        document.getElementById("result").textContent = JSON.stringify(difficultyAdjustment, undefined, 2);\n          ',esModule:"\n  const { %{0}: { difficulty } } = mempoolJS();\n\n  const difficultyAdjustment = await difficulty.getDifficultyAdjustment();\n  console.log(difficultyAdjustment);\n          ",curl:"/api/v1/difficulty-adjustment"},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:"{\n  progressPercent: 44.397234501112074,\n  difficultyChange: 98.45932018381687,\n  estimatedRetargetDate: 1627762478,\n  remainingBlocks: 1121,\n  remainingTime: 665977,\n  previousRetarget: -4.807005268478962,\n  nextRetargetHeight: 741888,\n  timeAvg: 302328,\n  adjustedTimeAvg: 302328,\n  timeOffset: 0\n}"},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:"{\n  progressPercent: 44.397234501112074,\n  difficultyChange: 98.45932018381687,\n  estimatedRetargetDate: 1627762478,\n  remainingBlocks: 1121,\n  remainingTime: 665977,\n  previousRetarget: -4.807005268478962,\n  nextRetargetHeight: 741888,\n  timeAvg: 302328,\n  adjustedTimeAvg: 302328,\n  timeOffset: 0\n}"},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:"{\n  progressPercent: 44.397234501112074,\n  difficultyChange: 98.45932018381687,\n  estimatedRetargetDate: 1627762478,\n  remainingBlocks: 1121,\n  remainingTime: 665977,\n  previousRetarget: -4.807005268478962,\n  nextRetargetHeight: 741888,\n  timeAvg: 302328,\n  adjustedTimeAvg: 302328,\n  timeOffset: 0\n}"},codeSampleLiquid:{esModule:[],commonJS:[],curl:[],response:"{\n  progressPercent: 44.397234501112074,\n  difficultyChange: 98.45932018381687,\n  estimatedRetargetDate: 1627762478,\n  remainingBlocks: 1121,\n  remainingTime: 665977,\n  previousRetarget: -4.807005268478962,\n  nextRetargetHeight: 741888,\n  timeAvg: 302328,\n  adjustedTimeAvg: 302328,\n  timeOffset: 0\n}"}}}},{type:"endpoint",category:"general",httpRequestMethod:"GET",fragment:"get-price",title:"GET Price",description:{default:"Returns bitcoin latest price denominated in main currencies."},urlString:"/v1/prices",showConditions:[""],showJsExamples:l,codeExample:{default:{codeTemplate:{commonJS:"",esModule:"",curl:"/api/v1/prices"},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:"{\n  time: 1703252411,\n  USD: 43753,\n  EUR: 40545,\n  GBP: 37528,\n  CAD: 58123,\n  CHF: 37438,\n  AUD: 64499,\n  JPY: 6218915\n}"},codeSampleTestnet:n,codeSampleSignet:n,codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"general",httpRequestMethod:"GET",fragment:"get-historical-price",title:"GET Historical Price",description:{default:"Returns bitcoin historical price denominated in main currencies. Available query parameters: <code>currency</code>, <code>timestamp</code>. If no parameter is provided, the full price history for all currencies is returned."},urlString:"/v1/historical-price?currency=EUR&timestamp=1500000000",showConditions:[""],showJsExamples:l,codeExample:{default:{codeTemplate:{commonJS:"",esModule:"",curl:"/api/v1/historical-price?currency=EUR&timestamp=1500000000"},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'{\n  prices: [\n    {\n      "time": 1499904000,\n      "EUR": 1964,\n      "USD": 2254.9\n    }\n  ],\n  exchangeRates: {\n    "USDEUR": 0.92,\n    "USDGBP": 0.78,\n    "USDCAD": 1.36,\n    "USDCHF": 0.89,\n    "USDAUD": 1.53,\n    "USDJPY": 149.48\n  }\n}\n'},codeSampleTestnet:n,codeSampleSignet:n,codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"category",category:"addresses",fragment:"addresses",title:"Addresses",showConditions:d.concat(r)},{type:"endpoint",category:"addresses",httpRequestMethod:"GET",fragment:"get-address",title:"GET Address",description:{default:"Returns details about an address. Available fields: <code>address</code>, <code>chain_stats</code>, and <code>mempool_stats</code>. <code>chain_stats</code> and <code>mempool_stats</code> each contain an object with <code>tx_count</code>, <code>funded_txo_count</code>, <code>funded_txo_sum</code>, <code>spent_txo_count</code>, and <code>spent_txo_sum</code>."},urlString:"/address/:address",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/address/%{1}",commonJS:"\n        const { %{0}: { addresses } } = mempoolJS();\n\n        const address = '%{1}';\n        const myAddress = await addresses.getAddress({ address });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(myAddress, undefined, 2);\n        ",esModule:"\n  const { %{0}: { addresses } } = mempoolJS();\n\n  const address = '%{1}';\n  const myAddress = await addresses.getAddress({ address });\n  console.log(myAddress);\n          "},codeSampleMainnet:{esModule:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],commonJS:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],curl:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],response:'{\n  address: "1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv",\n  chain_stats: {\n    funded_txo_count: 5,\n    funded_txo_sum: 15007599040,\n    spent_txo_count: 5,\n    spent_txo_sum: 15007599040,\n    tx_count: 7\n  },\n  mempool_stats: {\n    funded_txo_count: 0,\n    funded_txo_sum: 0,\n    spent_txo_count: 0,\n    spent_txo_sum: 0,\n    tx_count: 0\n  }\n}'},codeSampleTestnet:{esModule:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],commonJS:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],curl:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],response:'{\n  address: "tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee",\n  chain_stats: {\n    funded_txo_count: 6747,\n    funded_txo_sum: 84313783821,\n    spent_txo_count: 0,\n    spent_txo_sum: 0,\n    tx_count: 6747\n  },\n  mempool_stats: {\n    funded_txo_count: 0,\n    funded_txo_sum: 0,\n    spent_txo_count: 0,\n    spent_txo_sum: 0,\n    tx_count: 0\n  }\n}'},codeSampleSignet:{esModule:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],commonJS:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],curl:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],response:'{\n  address: "1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv",\n  chain_stats: {\n    funded_txo_count: 5,\n    funded_txo_sum: 15007599040,\n    spent_txo_count: 5,\n    spent_txo_sum: 15007599040,\n    tx_count: 7\n  },\n  mempool_stats: {\n    funded_txo_count: 0,\n    funded_txo_sum: 0,\n    spent_txo_count: 0,\n    spent_txo_sum: 0,\n    tx_count: 0\n  }\n}'},codeSampleLiquid:{esModule:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],commonJS:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],curl:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],response:'{\n  address: "Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48",\n  chain_stats: {\n    funded_txo_count: 1,\n    spent_txo_count: 1,\n    tx_count: 2\n  },\n  mempool_stats: {\n    funded_txo_count: 0,\n    spent_txo_count: 0,\n    tx_count: 0\n  }\n}'},codeSampleLiquidTestnet:{esModule:["vjTwFjtVE7Fy9gjwQSxas9FkrqcnK1SeobPkdD9tghdNmCvxoXhSeCjpgD3ponKJukkD2BNPX25dZL48"],commonJS:["vjTwFjtVE7Fy9gjwQSxas9FkrqcnK1SeobPkdD9tghdNmCvxoXhSeCjpgD3ponKJukkD2BNPX25dZL48"],curl:["vjTwFjtVE7Fy9gjwQSxas9FkrqcnK1SeobPkdD9tghdNmCvxoXhSeCjpgD3ponKJukkD2BNPX25dZL48"],response:'{\n  address: "vjTwFjtVE7Fy9gjwQSxas9FkrqcnK1SeobPkdD9tghdNmCvxoXhSeCjpgD3ponKJukkD2BNPX25dZL48",\n  chain_stats: {\n    funded_txo_count: 1,\n    spent_txo_count: 0,\n    tx_count: 1\n  },\n  mempool_stats: {\n    funded_txo_count: 0,\n    spent_txo_count: 0,\n    tx_count: 0\n  }\n}'}}}},{type:"endpoint",category:"addresses",httpRequestMethod:"GET",fragment:"get-address-transactions",title:"GET Address Transactions",description:{default:"Get transaction history for the specified address/scripthash, sorted with newest first. Returns up to 50 mempool transactions plus the first 25 confirmed transactions. You can request more confirmed transactions using an <code>after_txid</code> query parameter."},urlString:"/address/:address/txs",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/address/%{1}/txs",commonJS:"\n        const { %{0}: { addresses } } = mempoolJS();\n\n        const address = '%{1}';\n        const addressTxs = await addresses.getAddressTxs({ address });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(addressTxs, undefined, 2);\n        ",esModule:"\n  const { %{0}: { addresses } } = mempoolJS();\n\n  const address = '%{1}';\n  const addressTxs = await addresses.getAddressTxs({ address });\n  console.log(addressTxs);\n          "},codeSampleMainnet:{esModule:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],commonJS:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],curl:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],response:'[\n  {\n    txid: "dba43fd04b7ae3df8e5b596f2e7fab247c58629d622e3a5213f03a5a09684430",\n    version: 1,\n    locktime: 0,\n    vin: [ [Object] ],\n    vout: [ [Object], [Object] ],\n    size: 255,\n    weight: 1020,\n    fee: 10000,\n    status: {\n      confirmed: true,\n      block_height: 326148,\n      block_hash: "00000000000000001e4118adcfbb02364bc13c41c210d8811e4f39aeb3687e36",\n      block_time: 1413798020\n    }\n  },\n  ...\n]'},codeSampleTestnet:{esModule:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],commonJS:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],curl:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],response:'[\n    {\n      txid: "3e6afd67862ce9fe3eb55268a3107f495415ff1b5d1933c928507e9bdf7a21e6",\n      version: 2,\n      locktime: 0,\n      vin: [],\n      vout: [],\n      size: 211,\n      weight: 736,\n      fee: 0,\n      status: {\n        confirmed: true,\n        block_height: 2091086,\n        block_hash: "00000000340f3667cce7032d084973ca29bdd0d858ec363ed894ad4c8ed09ebc",\n        block_time: 1630607773\n    }\n  },\n  ...\n]'},codeSampleSignet:{esModule:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],commonJS:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],curl:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],response:'{\n  address: "1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv",\n  chain_stats: {\n    funded_txo_count: 5,\n    funded_txo_sum: 15007599040,\n    spent_txo_count: 5,\n    spent_txo_sum: 15007599040,\n    tx_count: 7\n  },\n  mempool_stats: {\n    funded_txo_count: 0,\n    funded_txo_sum: 0,\n    spent_txo_count: 0,\n    spent_txo_sum: 0,\n    tx_count: 0\n  }\n}'},codeSampleLiquid:{esModule:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],commonJS:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],curl:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],response:'[\n  {\n    txid: "e792f305016fdce71ba4a9c3057279df2b67a7a3e6147b173847a8253ad531ed",\n    version: 2,\n    locktime: 1438076,\n    vin: [Object],\n    vout: [Object],\n    size: 9205,\n    weight: 10492,\n    fee: 262,\n    status: {\n      confirmed: true,\n      block_height: 1438078,\n      block_hash: "1625ce898d2058f4e609af2e81908ce52eba77dde099667bea68360b5679d5df",\n      block_time: 1628564158\n    }\n  },\n  ...\n]'},codeSampleLiquidTestnet:{esModule:["vjTwFjtVE7Fy9gjwQSxas9FkrqcnK1SeobPkdD9tghdNmCvxoXhSeCjpgD3ponKJukkD2BNPX25dZL48"],commonJS:["vjTwFjtVE7Fy9gjwQSxas9FkrqcnK1SeobPkdD9tghdNmCvxoXhSeCjpgD3ponKJukkD2BNPX25dZL48"],curl:["vjTwFjtVE7Fy9gjwQSxas9FkrqcnK1SeobPkdD9tghdNmCvxoXhSeCjpgD3ponKJukkD2BNPX25dZL48"],response:'[\n  {\n    txid: "67108f445ae3a363452cf7f382f1b71e06126ab958673debbeaad6dab4831434",\n    version: 2,\n    locktime: 0,\n    vin: [Object],\n    vout: [Object],\n    size: 8968,\n    weight: 10063,\n    fee: 260,\n    status: {\n      confirmed: true,\n      block_height: 165253,\n      block_hash: "c8b6233c3bc53b76cf3a629328c3e7826a749171a8b39b482daf73e0be266e09",\n      block_time: 1641788900\n    }\n  },\n  ...\n]'}}}},{type:"endpoint",category:"addresses",httpRequestMethod:"GET",fragment:"get-address-transactions-chain",title:"GET Address Transactions Chain",description:{default:"Get confirmed transaction history for the specified address/scripthash, sorted with newest first. Returns 25 transactions per page. More can be requested by specifying the last txid seen by the previous query."},urlString:"/address/:address/txs/chain",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/address/%{1}/txs/chain",commonJS:"\n        const { %{0}: { addresses } } = mempoolJS();\n\n        const address = '%{1}';\n        const addressTxsChain = await addresses.getAddressTxsChain({ address });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(addressTxsChain, undefined, 2);\n        ",esModule:"\n  const { %{0}: { addresses } } = mempoolJS();\n\n  const address = '%{1}';\n  const addressTxsChain = await addresses.getAddressTxsChain({ address });\n  console.log(addressTxsChain);\n          "},codeSampleMainnet:{esModule:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],commonJS:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],curl:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],response:'[\n  {\n    txid: "c4e53c2e37f4fac759fdb0d8380e4d49e6c7211233ae276a44ce7074a1d6d168",\n    version: 2,\n    locktime: 697761,\n    vin: [],\n    vout: [],\n    size: 221,\n    weight: 884,\n    fee: 331,\n    status: {\n      confirmed: true,\n      block_height: 697782,\n      block_hash: "000000000000000000011397e53a5b1442b3dbc5df046c959c11dfe0275a4579",\n      block_time: 1630040570\n    }\n  },\n  ...\n],'},codeSampleTestnet:{esModule:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],commonJS:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],curl:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],response:'[\n  {\n    txid: "3e6afd67862ce9fe3eb55268a3107f495415ff1b5d1933c928507e9bdf7a21e6",\n    version: 2,\n    locktime: 0,\n    vin: [],\n    vout: [],\n    size: 211,\n    weight: 736,\n    fee: 0,\n    status: {\n    confirmed: true,\n      block_height: 2091086,\n      block_hash: "00000000340f3667cce7032d084973ca29bdd0d858ec363ed894ad4c8ed09ebc",\n      block_time: 1630607773\n    }\n  },\n  ...\n],'},codeSampleSignet:{esModule:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],commonJS:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],curl:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],response:'{\n  address: "1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv",\n  chain_stats: {\n    funded_txo_count: 765,\n    funded_txo_sum: 87749875807,\n    spent_txo_count: 765,\n    spent_txo_sum: 87749875807,\n    tx_count: 875\n  },\n  mempool_stats: {\n    funded_txo_count: 0,\n    funded_txo_sum: 0,\n    spent_txo_count: 0,\n    spent_txo_sum: 0,\n    tx_count: 0\n  }\n}'},codeSampleLiquid:{esModule:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],commonJS:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],curl:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],response:'[\n  {\n    txid: "e792f305016fdce71ba4a9c3057279df2b67a7a3e6147b173847a8253ad531ed",\n    version: 2,\n    locktime: 1438076,\n    vin: [],\n    vout: [],\n    size: 9205,\n    weight: 10492,\n    fee: 262,\n    status: {\n      confirmed: true,\n      block_height: 1438078,\n      block_hash: "1625ce898d2058f4e609af2e81908ce52eba77dde099667bea68360b5679d5df",\n      block_time: 1628564158\n    }\n  },\n  ...\n]'},codeSampleLiquidTestnet:{esModule:["vjTwFjtVE7Fy9gjwQSxas9FkrqcnK1SeobPkdD9tghdNmCvxoXhSeCjpgD3ponKJukkD2BNPX25dZL48"],commonJS:["vjTwFjtVE7Fy9gjwQSxas9FkrqcnK1SeobPkdD9tghdNmCvxoXhSeCjpgD3ponKJukkD2BNPX25dZL48"],curl:["vjTwFjtVE7Fy9gjwQSxas9FkrqcnK1SeobPkdD9tghdNmCvxoXhSeCjpgD3ponKJukkD2BNPX25dZL48"],response:'[\n  {\n    txid: "67108f445ae3a363452cf7f382f1b71e06126ab958673debbeaad6dab4831434",\n    version: 2,\n    locktime: 0,\n    vin: [],\n    vout: [],\n    size: 8968,\n    weight: 10063,\n    fee: 260,\n    status: {\n      confirmed: true,\n      block_height: 165253,\n      block_hash: "c8b6233c3bc53b76cf3a629328c3e7826a749171a8b39b482daf73e0be266e09",\n      block_time: 1641788900\n    }\n  },\n  ...\n]'}}}},{type:"endpoint",category:"addresses",httpRequestMethod:"GET",fragment:"get-address-transactions-mempool",title:"GET Address Transactions Mempool",description:{default:"Get unconfirmed transaction history for the specified address/scripthash. Returns up to 50 transactions (no paging)."},urlString:"/address/:address/txs/mempool",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/address/%{1}/txs/mempool",commonJS:"\n        const { %{0}: { addresses } } = mempoolJS();\n\n        const address = '%{1}';\n        const addressTxsMempool = await addresses.getAddressTxsMempool({ address });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(addressTxsMempool, undefined, 2);\n        ",esModule:"\n  const { %{0}: { addresses } } = mempoolJS();\n\n  const address = '%{1}';\n  const addressTxsMempool = await addresses.getAddressTxsMempool({ address });\n  console.log(addressTxsMempool);\n          "},codeSampleMainnet:{esModule:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],commonJS:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],curl:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],response:'[\n  {\n    txid: "16cd9bbc6b62313a22d16671fa559aec6bf581df8b5853d37775c84b0fddfa90",\n    version: 2,\n    locktime: 0,\n    vin: [ [Object] ],\n    vout: [ [Object], [Object] ],\n    size: 226,\n    weight: 904,\n    fee: 6720,\n    status: { confirmed: false }\n  }\n]'},codeSampleTestnet:{esModule:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],commonJS:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],curl:["tb1qp0we5epypgj4acd2c4au58045ruud2pd6heuee"],response:'[\n  {\n    txid: "16cd9bbc6b62313a22d16671fa559aec6bf581df8b5853d37775c84b0fddfa90",\n    version: 2,\n    locktime: 0,\n    vin: [ [Object] ],\n    vout: [ [Object], [Object] ],\n    size: 226,\n    weight: 904,\n    fee: 6720,\n    status: { confirmed: false }\n  }\n]'},codeSampleSignet:{esModule:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],commonJS:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],curl:["1wiz18xYmhRX6xStj2b9t1rwWX4GKUgpv"],response:'[\n  {\n    txid: "16cd9bbc6b62313a22d16671fa559aec6bf581df8b5853d37775c84b0fddfa90",\n    version: 2,\n    locktime: 0,\n    vin: [ [Object] ],\n    vout: [ [Object], [Object] ],\n    size: 226,\n    weight: 904,\n    fee: 6720,\n    status: { confirmed: false }\n  }\n]'},codeSampleLiquid:{esModule:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],commonJS:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],curl:["Go65t19hP2FuhBMYtgbdMDgdmEzNwh1i48"],response:'[\n  {\n    txid: "16cd9bbc6b62313a22d16671fa559aec6bf581df8b5853d37775c84b0fddfa90",\n    version: 2,\n    locktime: 0,\n    vin: [ [Object] ],\n    vout: [ [Object], [Object] ],\n    size: 226,\n    weight: 904,\n    fee: 6720,\n    status: { confirmed: false }\n  }\n]'},codeSampleLiquidTestnet:{esModule:["928jXZPDqQAt5vzGvBXKWMKCS9vfCa9Rfu"],commonJS:["928jXZPDqQAt5vzGvBXKWMKCS9vfCa9Rfu"],curl:["928jXZPDqQAt5vzGvBXKWMKCS9vfCa9Rfu"],response:'[\n  {\n    txid: "3ab8bc068ee05c1114647dc5196b3b954b00e5af3b03d470d1ef8a8953737357",\n    version: 2,\n    locktime: 0,\n    vin: [ [Object] ],\n    vout: [ [Object], [Object] ],\n    size: 14720,\n    weight: 58880,\n    fee: 1496,\n    status: { confirmed: false }\n  }\n]'}}}},{type:"endpoint",category:"addresses",httpRequestMethod:"GET",fragment:"get-address-utxo",title:"GET Address UTXO",description:{default:"Get the list of unspent transaction outputs associated with the address/scripthash. Available fields: <code>txid</code>, <code>vout</code>, <code>value</code>, and <code>status</code> (with the status of the funding tx).",liquid:"Get the list of unspent transaction outputs associated with the address/scripthash. Available fields: <code>txid</code>, <code>vout</code>, <code>value</code>, and <code>status</code> (with the status of the funding tx). There is also a <code>valuecommitment</code> field that may appear in place of <code>value</code>, plus the following additional fields: <code>asset</code>/<code>assetcommitment</code>, <code>nonce</code>/<code>noncecommitment</code>, <code>surjection_proof</code>, and <code>range_proof</code>."},urlString:"/address/:address/utxo",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/address/%{1}/utxo",commonJS:"\n        const { %{0}: { addresses } } = mempoolJS();\n\n        const address = '%{1}';\n        const addressTxsUtxo = await addresses.getAddressTxsUtxo({ address });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(addressTxsUtxo, undefined, 2);\n        ",esModule:"\n  const { %{0}: { addresses } } = mempoolJS();\n\n  const address = '%{1}';\n  const addressTxsUtxo = await addresses.getAddressTxsUtxo({ address });\n  console.log(addressTxsUtxo);\n          "},codeSampleMainnet:{esModule:["1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY"],commonJS:["1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY"],curl:["1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY"],response:'[\n  {\n    txid: "12f96289f8f9cd51ccfe390879a46d7eeb0435d9e0af9297776e6bdf249414ff",\n    vout: 0,\n    status: {\n      confirmed: true,\n      block_height: 698642,\n      block_hash: "00000000000000000007839f42e0e86fd53c797b64b7135fcad385158c9cafb8",\n      block_time: 1630561459\n    },\n    value: 644951084\n  },\n  ...\n]'},codeSampleTestnet:{esModule:["tb1q4kgratttzjvkxfmgd95z54qcq7y6hekdm3w56u"],commonJS:["tb1q4kgratttzjvkxfmgd95z54qcq7y6hekdm3w56u"],curl:["tb1q4kgratttzjvkxfmgd95z54qcq7y6hekdm3w56u"],response:'[\n  {\n    txid: "c404bc4ba89e9423ff772cb45268ba6fba8b713f809484c1216f1a657aafa088",\n    vout: 1,\n    status: {\n      confirmed: true,\n      block_height: 2086944,\n      block_hash: "000000000000039a27007892b0f3ac646afa4eb3ef3d4a4e75e8bdf636b4d006",\n      block_time: 1630159123\n    },\n    value: 1973787\n  },\n  ...\n]'},codeSampleSignet:{esModule:["tb1pu8ysre22dcl6qy5m5w7mjwutw73w4u24slcdh4myq06uhr6q29dqwc3ckt"],commonJS:["tb1pu8ysre22dcl6qy5m5w7mjwutw73w4u24slcdh4myq06uhr6q29dqwc3ckt"],curl:["tb1pu8ysre22dcl6qy5m5w7mjwutw73w4u24slcdh4myq06uhr6q29dqwc3ckt"],response:'[\n  {\n    txid: "c56a054302df8f8f80c5ac6b86b24ed52bf41d64de640659837c56bc33d10c9e",\n    vout: 0,\n    status: {\n      confirmed: true,\n      block_height: 174923,\n      block_hash: "000000750e335ff355be2e3754fdada30d107d7d916aef07e2f5d014bec845e5",\n      block_time: 1703321003\n    },\n    value: 546\n  },\n  ...\n]'},codeSampleLiquid:{esModule:["GhkYnB1g6oNSqALtcHgpirYM65EuLZdaNg"],commonJS:["GhkYnB1g6oNSqALtcHgpirYM65EuLZdaNg"],curl:["GhkYnB1g6oNSqALtcHgpirYM65EuLZdaNg"],response:'[\n  {\n    txid: "067bac619cc67de7654bb3ee01ebcadf1e582980b3873478bac7d3931f06045f",\n    vout: 1,\n    status: {\n      confirmed: true,\n      block_height: 1471900,\n      block_hash: "9408b32d41225cea32bace82aac1789a218e6592ab24de5793ca2138b876f536",\n      block_time: 1630621258\n    },\n    valuecommitment: "0805015e56cbbf6cc494cb200615b7f8b781f0d640e4c96b4abdad356068f6346f",\n    assetcommitment: "0a6bb828996381a61cb9f24610bea8a0c35efe388d39a993d369e08a6fc358e7dc",\n    noncecommitment: "0282f3f01f06e43fb88bcd28e7e83c9c0d9cefc92c104a6e814810c100ec66b33d"\n  }\n]'},codeSampleLiquidTestnet:{esModule:["tex1q9f8nat57n93e8q0p6vddw9phew6u348uff8hqz"],commonJS:["tex1q9f8nat57n93e8q0p6vddw9phew6u348uff8hqz"],curl:["tex1q9f8nat57n93e8q0p6vddw9phew6u348uff8hqz"],response:'[\n  {\n    "txid": "b010ce1accf781234e9736243a33c5367ce76e3a12609cf70a80ad15679c57dd",\n    "vout": 0,\n    "status": {\n      "confirmed": false\n    },\n    "valuecommitment": "087851b6faa9b97d3c87dba24d69456b4084c36529ca0bda8aebea3fca787ec298",\n    "assetcommitment": "0b16b09f9987d7f7aaa8b6bd61f00e50b448ecb8b4ecf3623338b80e2533637848",\n    "noncecommitment": "03ba8cf651bd77791ea6a208a9f7ab8482b1ea207e4e4b2e6e964ebd163f81afb7",\n    "surjection_proof": "010001398a7d5ac645e45b27898ee4548b111c64cdf1850cf283dbdea89c3163d168d8...",\n    "range_proof": "6033000000000000000116898801858209e1386655e803472959b95e706d47fca2bfad..."\n  }\n]'}}}},{type:"endpoint",category:"addresses",httpRequestMethod:"GET",fragment:"get-address-validate",title:"GET Address Validation",description:{default:"Returns whether an address is valid or not. Available fields: <code>isvalid</code> (boolean), <code>address</code> (string), <code>scriptPubKey</code> (string), <code>isscript</code> (boolean), <code>iswitness</code> (boolean), <code>witness_version</code> (numeric, optional), and <code>witness_program</code> (string, optional)."},urlString:"/v1/validate-address/:address",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/validate-address/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{curl:["1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY"],response:'{\n  isvalid: true,\n  address: "1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY",\n  scriptPubKey: "76a914c825a1ecf2a6830c4401620c3a16f1995057c2ab88ac",\n  isscript: false,\n  iswitness: false\n}'},codeSampleTestnet:{curl:["tb1q4kgratttzjvkxfmgd95z54qcq7y6hekdm3w56u"],response:'{\n  isvalid: true,\n  address: "tb1q4kgratttzjvkxfmgd95z54qcq7y6hekdm3w56u",\n  scriptPubKey: "0014ad903ead6b149963276869682a54180789abe6cd",\n  isscript: false,\n  iswitness: true,\n  witness_version: 0,\n  witness_program: "ad903ead6b149963276869682a54180789abe6cd"\n}'},codeSampleSignet:{curl:["tb1pu8ysre22dcl6qy5m5w7mjwutw73w4u24slcdh4myq06uhr6q29dqwc3ckt"],response:'{\n  isvalid: true,\n  address: "tb1pu8ysre22dcl6qy5m5w7mjwutw73w4u24slcdh4myq06uhr6q29dqwc3ckt",\n  scriptPubKey: "5120e1c901e54a6e3fa0129ba3bdb93b8b77a2eaf15587f0dbd76403f5cb8f40515a",\n  isscript: true,\n  iswitness: true,\n  witness_version: 1,\n  witness_program: "e1c901e54a6e3fa0129ba3bdb93b8b77a2eaf15587f0dbd76403f5cb8f40515a"\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"category",category:"assets",fragment:"assets",title:"Assets",showConditions:r},{type:"endpoint",category:"assets",httpRequestMethod:"GET",fragment:"get-asset",title:"GET Asset",description:{default:"Returns information about a Liquid asset."},urlString:"/asset/:asset_id",showConditions:r,showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/asset/%{1}",commonJS:"\n        const { %{0}: { assets } } = mempoolJS();\n\n        const asset_id = '%{1}';\n        const asset = await assets.getAsset({ asset_id });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(asset, undefined, 2);\n        ",esModule:"\n  const { %{0}: { assets } } = mempoolJS();\n\n  const asset_id = '%{1}';\n  const asset = await assets.getAsset({ asset_id });\n  console.log(asset);\n          "},codeSampleMainnet:n,codeSampleTestnet:n,codeSampleSignet:n,codeSampleLiquid:{esModule:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],commonJS:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],curl:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],response:'{\n  asset_id: "6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d",\n  chain_stats: {\n    tx_count: 3887,\n    peg_in_count: 2557,\n    peg_in_amount: 328822657766,\n    peg_out_count: 1131,\n    peg_out_amount: 7427922560,\n    burn_count: 199,\n    burned_amount: 516003151\n  },\n  mempool_stats: {\n    tx_count: 0,\n    peg_in_count: 0,\n    peg_in_amount: 0,\n    peg_out_count: 0,\n    peg_out_amount: 0,\n    burn_count: 0,\n    burned_amount: 0\n  }\n}'},codeSampleLiquidTestnet:{esModule:["ac3e0ff248c5051ffd61e00155b7122e5ebc04fd397a0ecbdd4f4e4a56232926"],commonJS:["ac3e0ff248c5051ffd61e00155b7122e5ebc04fd397a0ecbdd4f4e4a56232926"],curl:["ac3e0ff248c5051ffd61e00155b7122e5ebc04fd397a0ecbdd4f4e4a56232926"],response:'{\n  "asset_id": "ac3e0ff248c5051ffd61e00155b7122e5ebc04fd397a0ecbdd4f4e4a56232926",\n  "issuance_txin": {...},\n  "issuance_prevout": {...},\n  "reissuance_token": "55fdb86a988b07242a7edbddb53f40b3742c0e863a769937018b31621708b14b",\n  "contract_hash": "b3619fb6ebd502ba57c4c026e73d7ae430c32431ffe833a4867faa9dd89abd5b",\n  "status": {...},\n  "chain_stats": {\n    "tx_count": 2,\n    "issuance_count": 2,\n    "issued_amount": 0,\n    "burned_amount": 0,\n    "has_blinded_issuances": true,\n    "reissuance_tokens": null,\n    "burned_reissuance_tokens": 0\n  },\n  "mempool_stats": {\n    "tx_count": 0,\n    "issuance_count": 0,\n    "issued_amount": 0,\n    "burned_amount": 0,\n    "has_blinded_issuances": false,\n    "reissuance_tokens": null,\n    "burned_reissuance_tokens": 0\n  },\n  "contract": {...},\n  "entity": {...},\n  "precision": 8,\n  "name": "Liquid CAD",\n  "ticker": "LCAD"\n}'}}}},{type:"endpoint",category:"assets",httpRequestMethod:"GET",fragment:"get-asset-transactions",title:"GET Asset Transactions",description:{default:"Returns transactions associated with the specified Liquid asset. For the network's native asset, returns a list of peg in, peg out, and burn transactions. For user-issued assets, returns a list of issuance, reissuance, and burn transactions. Does not include regular transactions transferring this asset."},urlString:"/asset/:asset_id/txs[/mempool|/chain]",showConditions:r,showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/asset/%{1}/txs",commonJS:"\n        const { %{0}: { assets } } = mempoolJS();\n\n        const asset_id = '%{1}';\n        const assetTxs = await assets.getAssetTxs({ asset_id, is_mempool: false });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(assetTxs, undefined, 2);\n        ",esModule:"\n  const { %{0}: { assets } } = mempoolJS();\n\n  const asset_id = '%{1}';\n  const assetTxs = await assets.getAssetTxs({ asset_id, is_mempool: false });\n  console.log(assetTxs);\n          "},codeSampleMainnet:n,codeSampleTestnet:n,codeSampleSignet:n,codeSampleLiquid:{esModule:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],commonJS:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],curl:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],response:'[\n  {\n    txid: "93fedcc996df43c94f9f12e24b4040b60d47d84ef7a9a66ef05c2e6f4059b685",\n    version: 2,\n    locktime: 0,\n    vin: [],\n    vout: [],\n    size: 998,\n    weight: 1484,\n    fee: 42,\n    status: {\n      confirmed: true,\n      block_height: 1471854,\n      block_hash: "f113b64f6bc937fda6891fd9f1833d207312f986767aff91aea9649d87533250",\n      block_time: 1630618498\n    }\n  },\n  ...\n]'},codeSampleLiquidTestnet:{esModule:["ac3e0ff248c5051ffd61e00155b7122e5ebc04fd397a0ecbdd4f4e4a56232926"],commonJS:["ac3e0ff248c5051ffd61e00155b7122e5ebc04fd397a0ecbdd4f4e4a56232926"],curl:["ac3e0ff248c5051ffd61e00155b7122e5ebc04fd397a0ecbdd4f4e4a56232926"],response:'[\n  {\n    txid: "34b9cd013ddf4d4b5e9d09502ca953034fd52a0679845ac8b9d54c63d857a488",\n    version: 2,\n    locktime: 140139,\n    vin: [],\n    vout: [],\n    size: 17918,\n    weight: 19721,\n    fee: 493,\n    status: {\n      confirmed: true,\n      block_height: 140140,\n      block_hash: "c3a08178acf2bbafabda120930a0b270e762550d8a46e3e093de779ef459d29d",\n      block_time: 1640279893\n    }\n  },\n  ...\n]'}}}},{type:"endpoint",category:"assets",httpRequestMethod:"GET",fragment:"get-asset-supply",title:"GET Asset Supply",description:{default:"Get the current total supply of the specified asset. For the native asset (L-EAC), this is calculated as [chain,mempool]_stats.peg_in_amount - [chain,mempool]_stats.peg_out_amount - [chain,mempool]_stats.burned_amount. For issued assets, this is calculated as [chain,mempool]_stats.issued_amount - [chain,mempool]_stats.burned_amount. Not available for assets with blinded issuances. If /decimal is specified, returns the supply as a decimal according to the asset's divisibility. Otherwise, returned in base units."},urlString:"/asset/:asset_id/supply[/decimal]",showConditions:r,showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/asset/%{1}/supply",commonJS:"\n        const { %{0}: { assets } } = mempoolJS();\n\n        const asset_id = '%{1}';\n        const assetSupply = await assets.getAssetSupply({ asset_id, decimal: false });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(assetSupply, undefined, 2);\n        ",esModule:"\n  const { %{0}: { assets } } = mempoolJS();\n\n  const asset_id = '%{1}';\n  const assetSupply = await assets.getAssetSupply({ asset_id, decimal: false });\n  console.log(assetSupply);\n          "},codeSampleMainnet:n,codeSampleTestnet:n,codeSampleSignet:n,codeSampleLiquid:{esModule:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],commonJS:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],curl:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],response:"320878732055"},codeSampleLiquidTestnet:{esModule:["05aa9f02a06da37f2a0a572c49ac381499a16a643ad7c70c51ac94560778c92e"],commonJS:["05aa9f02a06da37f2a0a572c49ac381499a16a643ad7c70c51ac94560778c92e"],curl:["05aa9f02a06da37f2a0a572c49ac381499a16a643ad7c70c51ac94560778c92e"],response:"1000"}}}},{type:"endpoint",category:"assets",httpRequestMethod:"GET",fragment:"get-asset-icons",title:"GET Asset Icons",description:{default:"Get all the Asset IDs that have icons."},urlString:"/v1/assets/icons",showConditions:r,showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/v1/assets/icons",commonJS:'\n        const { %{0}: { assets } } = mempoolJS();\n        const assetsIcons = await assets.getAssetsIcons();\n        document.getElementById("result").textContent = JSON.stringify(assetsIcons, undefined, 2);\n        ',esModule:"\n  const { %{0}: { assets } } = mempoolJS();\n  const assetsIcons = await assets.getAssetsIcons();\n  console.log(assetsIcons);\n          "},codeSampleLiquid:{esModule:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],commonJS:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],curl:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],response:'[\n  "6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d",\n  "ce091c998b83c78bb71a632313ba3760f1763d9cfcffae02258ffa9865a37bd2"\n  ...\n]'},codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"assets",httpRequestMethod:"GET",fragment:"get-asset-icon",title:"GET Asset Icon",description:{default:"Get the icon of the specified asset."},urlString:"/v1/asset/:asset_id/icon",showConditions:r,showJsExamples:f,codeExample:{default:{noWrap:!0,codeTemplate:{curl:"/api/v1/asset/%{1}/icon",commonJS:'<img src="https://liquid.place/api/v1/asset/%{1}/icon">'},codeSampleLiquid:{esModule:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],commonJS:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],curl:["6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d"],response:"PNG"},codeSampleLiquidTestnet:{esModule:["ac3e0ff248c5051ffd61e00155b7122e5ebc04fd397a0ecbdd4f4e4a56232926"],commonJS:["ac3e0ff248c5051ffd61e00155b7122e5ebc04fd397a0ecbdd4f4e4a56232926"],curl:["ac3e0ff248c5051ffd61e00155b7122e5ebc04fd397a0ecbdd4f4e4a56232926"],response:"PNG"}}}},{type:"category",category:"blocks",fragment:"blocks",title:"Blocks",showConditions:d.concat(r)},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block",title:"GET Block",description:{default:"Returns details about a block.",liquid:"Returns details about a block. Available fields: <code>id</code>, <code>height</code>, <code>version</code>, <code>timestamp</code>, <code>bits</code>, <code>nonce</code>, <code>merkle_root</code>, <code>tx_count</code>, <code>size</code>, <code>weight</code>,<code>proof</code>, and <code>previousblockhash</code>."},urlString:"/block/:hash",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/block/%{1}",commonJS:"\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const hash = '%{1}';\n        const block = await blocks.getBlock({ hash });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(block, undefined, 2);\n        ",esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const hash = '%{1}';\n  const block = await blocks.getBlock({ hash });\n  console.log(block);\n          "},codeSampleMainnet:{esModule:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce"],commonJS:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce"],curl:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce"],response:'{\n  "extras": {\n    "reward": 638307429,\n    "coinbaseTx": {\n      "vin": [\n        {\n          "scriptsig": "03ad3e0b2cfabe6d6df8fb5429a5de5fc2bd1bafffbc90d33c77eb73307d51931d247f21d7bccde51710000000f09f909f092f4632506f6f6c2f6b0000000000000000000000000000000000000000000000000000000000000000000000050086411100"\n        }\n      ],\n      "vout": [\n        {\n          "scriptpubkey_address": "1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY",\n          "value": 638307429\n        }\n      ]\n    },\n    "coinbaseRaw": "03ad3e0b2cfabe6d6df8fb5429a5de5fc2bd1bafffbc90d33c77eb73307d51931d247f21d7bccde51710000000f09f909f092f4632506f6f6c2f6b0000000000000000000000000000000000000000000000000000000000000000000000050086411100",\n    "medianFee": 10,\n    "feeRange": [\n      1,\n      8,\n      9,\n      10,\n      15,\n      21,\n      348\n    ],\n    "totalFees": 13307429,\n    "avgFee": 5591,\n    "avgFeeRate": 13,\n    "pool": {\n      "id": 36,\n      "name": "F2Pool",\n      "slug": "f2pool"\n    },\n    "matchRate": 93\n  },\n  "id": "00000000000000000007566f8f035a1dc38b351e6f54778b311fe6dbabd79b46",\n  "height": 736941,\n  "version": 536870916,\n  "timestamp": 1652891466,\n  "bits": 386466234,\n  "nonce": 3514220842,\n  "difficulty": 31251101365711.12,\n  "merkle_root": "4a3072f98f60cbb639bb7f46180b8843d17c7502627ffb633db0ed86610cdd71",\n  "tx_count": 2381,\n  "size": 1709571,\n  "weight": 3997770,\n  "previousblockhash": "00000000000000000005ef14db0b4befcbbe1e9b8676eec67fcf810a899c4d5e"\n}'},codeSampleTestnet:{esModule:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],commonJS:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],curl:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],response:'{\n  id: "000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81",\n  height: 2091140,\n  version: 543162372,\n  timestamp: 1630625150,\n  tx_count: 2,\n  size: 575,\n  weight: 1865,\n  merkle_root: "5d10d8d158bb8eb217d01fecc435bd10eda028043a913dc2bfe0ccf536a51cc9",\n  previousblockhash: "0000000000000073f95d1fc0a93d449f82a754410c635e46264ec6c7c4d5741e",\n  mediantime: 1630621997,\n  nonce: 1600805744,\n  bits: 436273151,\n  difficulty: 16777216\n}'},codeSampleSignet:{esModule:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],commonJS:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],curl:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],response:'{\n  id: "000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152",\n  height: 53745,\n  version: 536870912,\n  timestamp: 1630624390,\n  tx_count: 1,\n  size: 343,\n  weight: 1264,\n  merkle_root: "2c1984132841b9f98270274012b22beb7d4ade778cf058e9a44d38de5a111362",\n  previousblockhash: "000001497bffdc2347656847647f343afc0eee441a849259335b8a1d79b6aa4a",\n  mediantime: 1630621400,\n  nonce: 19642021,\n  bits: 503404179,\n  difficulty: 0\n}'},codeSampleLiquid:{esModule:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],commonJS:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],curl:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],response:'{\n  id: "86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78",\n  height: 1471971,\n  version: 570425344,\n  timestamp: 1630625518,\n  tx_count: 2,\n  size: 10841,\n  weight: 16913,\n  merkle_root: "7e40735e103d6015c90d285d09b535498c0a26df9ca8118b1b4d68aaf80ccf48",\n  previousblockhash: "944fa8ffd906b3531af95f3d9b052dfdef0b60657c3c8def2c3591384f083424",\n  mediantime: 1630625218,\n  ext: {\n    challenge: "5b21026a2a106ec32c8a1e8052e5d02a7b0a150423dbd9b116fc48d46630ff6e6a05b92102791646a8b49c2740352b4495c118d876347bf47d0551c01c4332fdc2df526f1a2102888bda53a424466b0451627df22090143bbf7c060e9eacb1e38426f6b07f2ae12102aee8967150dee220f613de3b239320355a498808084a93eaf39a34dcd62024852102d46e9259d0a0bb2bcbc461a3e68f34adca27b8d08fbe985853992b4b104e27412102e9944e35e5750ab621e098145b8e6cf373c273b7c04747d1aa020be0af40ccd62102f9a9d4b10a6d6c56d8c955c547330c589bb45e774551d46d415e51cd9ad5116321033b421566c124dfde4db9defe4084b7aa4e7f36744758d92806b8f72c2e943309210353dcc6b4cf6ad28aceb7f7b2db92a4bf07ac42d357adf756f3eca790664314b621037f55980af0455e4fb55aad9b85a55068bb6dc4740ea87276dc693f4598db45fa210384001daa88dabd23db878dbb1ce5b4c2a5fa72c3113e3514bf602325d0c37b8e21039056d089f2fe72dbc0a14780b4635b0dc8a1b40b7a59106325dd1bc45cc70493210397ab8ea7b0bf85bc7fc56bb27bf85e75502e94e76a6781c409f3f2ec3d1122192103b00e3b5b77884bf3cae204c4b4eac003601da75f96982ffcb3dcb29c5ee419b92103c1f3c0874cfe34b8131af34699589aacec4093399739ae352e8a46f80a6f68375fae",\n    solution: "00473045022100b572ef7e8a1c5a795d4ca46ab0221f0296ae081870ec25b3eb3f7db4a9e48d6102207863cfcae9776d3fee8fb2f05f06c879cf16c319b633f09cfac9bf041e662f31463044022056e41068e5448c897f80ef864fbbd71690af375afc33d9a52a12efd399a75c0202203f61333e193e0ff3da1ef15fa5c84c3852bd3b4f701e4bf4ebc0dcb68138d227473045022100af50aae198402aa45764a771d3ec23cf86037ea1e3bd682d09f262d057de1a2c02202f46b42ff1062117001af9689fce666bc50cfd479f63969e28670e26b747610f46304402201bb90d72cd58e5198b135828354e8fcc3e73238e412c6e2474f9d67676b12ceb022053f3a6cbeb85abc5e0bc18a83eeffe7785c382746f50c98a29743eb00d474f9e473045022100954d79ddb28c5682a3600cb4f76433f31606064717c700e5ea626807cfb169cf0220365e42d1d07bd8a65b5cb6e449a6bbd3684bf31f0f31ffe9aa13a1f145f28de2473045022100e8a6566fbd8e2829ac24c02ff78794f0122d828e9c1989ed8c077013a2834c6d022016b6833665bbe9ca930247600694f90d40aeb9880fdf95ef62b553efb516997f473045022100c0dca22bfc3a3f64f1ac221796ecd052c153e03732e696ce891be4998c6ae34a0220650ff2e1af0cf3318e249e358738d69de91ebdc81535234a30bdbc4361edc08246304402205f0db67365c3667b93cbcfaa2e5a26a4dbab15a5e39196008fd84b61de358f89022035d5bca676b62028e17f962ef7a33b9f34534f02f3d1ac57b65a666f6d33b3fa473045022100ae711c250c7e4a9d7795e96a4209d05f2b4866473aa2a35b8478b9e3eec883800220514db41ba950cf089cce8fd71cfc41454c80005c2c57401da0e2fb3ce96097bc473045022100bfc416e16fb246cc21a3729359bcf9a752643f4c57190493418dab5df33ff8190220289600af6dc32bffb000f984c8c37f137841e1738c701e05c0a08be53e5eb62b473045022100accf30feb32423e20ddaae3c12584b33ad4eb6492deed1393175a0443832faa0022045b17184460ece57857fe74143166c3692348758054d3d7852fee833cb66e9c4"\n  }\n}'},codeSampleLiquidTestnet:{esModule:["8f7cb70f32e2069724212c986f34462fc40180eabf189b44486faf6989824f9a"],commonJS:["8f7cb70f32e2069724212c986f34462fc40180eabf189b44486faf6989824f9a"],curl:["8f7cb70f32e2069724212c986f34462fc40180eabf189b44486faf6989824f9a"],response:'{\n  id: "8f7cb70f32e2069724212c986f34462fc40180eabf189b44486faf6989824f9a",\n  height: 154705,\n  version: 536870912,\n  timestamp: 1641154264,\n  tx_count: 2,\n  size: 5137,\n  weight: 7348,\n  merkle_root: "e7cc1145b3b074be73a84119485a504de77967aabe415240caca0e2c41a8b9b4",\n  previousblockhash: "2745fd72a5bd2b256c9d2044631032d2cd872f1f0001c3db52e26604a6423526",\n  mediantime: 1641153964,\n  ext: {...}\n}'}}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block-header",title:"GET Block Header",description:{default:"Returns the hex-encoded block header."},urlString:"/block/:hash/header",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/block/%{1}/header",commonJS:"\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const hash = '%{1}';\n        const blockHeader = await blocks.getBlockHeader({ height: 0 });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(blockHeight, undefined, 2);\n        ",esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const hash = '%{1}';\n  const blockHeader = await blocks.getBlockHeader({ height: 0 });\n  console.log(blockHeight);\n          "},codeSampleMainnet:{esModule:["0000000000000000000065bda8f8a88f2e1e00d9a6887a43d640e52a4c7660f2"],commonJS:["0000000000000000000065bda8f8a88f2e1e00d9a6887a43d640e52a4c7660f2"],curl:["0000000000000000000065bda8f8a88f2e1e00d9a6887a43d640e52a4c7660f2"],response:"040000202c04d4c450187d1da9b1bc23ba47d67fe028d22486fd0c00000000000000000059a3a33d4642c799af9f54a4dd351fff9130e6a89d4e251130c60064878616e906b5ea60ce9813173a25caf3"},codeSampleTestnet:{esModule:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],commonJS:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],curl:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],response:"040060201e74d5c4c7c64e26465e630c4154a7829f443da9c01f5df97300000000000000c91ca536f5cce0bfc23d913a0428a0ed10bd35c4ec1fd017b28ebb58d1d8105d7e5d3161ffff001a705b6a5f"},codeSampleSignet:{esModule:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],commonJS:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],curl:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],response:"000000204aaab6791d8a5b335992841a44ee0efc3a347f644768654723dcff7b490100006213115ade384da4e958f08c77de4a7deb2bb21240277082f9b941281384192c865a31619356011ea5b62b01"},codeSampleLiquid:{esModule:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],commonJS:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],curl:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],response:"000000222434084f3891352cef8d3c7c65600beffd2d059b3d5ff91a53b306d9ffa84f9448cf0cf8aa684d1b8b11a89cdf260a8c4935b5095d280dc915603d105e73407eee5e3161e3751600fd01025b21026a2a106ec32c8a1e8052e5d02a7b0a150423dbd9b116fc48d46630ff6e6a05b92102791646a8b49c2740352b4495c118d876347bf47d0551c01c4332fdc2df526f1a2102888bda53a424466b0451627df22090143bbf7c060e9eacb1e38426f6b07f2ae12102aee8967150dee220f613de3b239320355a498808084a93eaf39a34dcd62024852102d46e9259d0a0bb2bcbc461a3e68f34adca27b8d08fbe985853992b4b104e27412102e9944e35e5750ab621e098145b8e6cf373c273b7c04747d1aa020be0af40ccd62102f9a9d4b10a6d6c56d8c955c547330c589bb45e774551d46d415e51cd9ad5116321033b421566c124dfde4db9defe4084b7aa4e7f36744758d92806b8f72c2e943309210353dcc6b4cf6ad28aceb7f7b2db92a4bf07ac42d357adf756f3eca790664314b621037f55980af0455e4fb55aad9b85a55068bb6dc4740ea87276dc693f4598db45fa210384001daa88dabd23db878dbb1ce5b4c2a5fa72c3113e3514bf602325d0c37b8e21039056d089f2fe72dbc0a14780b4635b0dc8a1b40b7a59106325dd1bc45cc70493210397ab8ea7b0bf85bc7fc56bb27bf85e75502e94e76a6781c409f3f2ec3d1122192103b00e3b5b77884bf3cae204c4b4eac003601da75f96982ffcb3dcb29c5ee419b92103c1f3c0874cfe34b8131af34699589aacec4093399739ae352e8a46f80a6f68375faefd160300473045022100b572ef7e8a1c5a795d4ca46ab0221f0296ae081870ec25b3eb3f7db4a9e48d6102207863cfcae9776d3fee8fb2f05f06c879cf16c319b633f09cfac9bf041e662f31463044022056e41068e5448c897f80ef864fbbd71690af375afc33d9a52a12efd399a75c0202203f61333e193e0ff3da1ef15fa5c84c3852bd3b4f701e4bf4ebc0dcb68138d227473045022100af50aae198402aa45764a771d3ec23cf86037ea1e3bd682d09f262d057de1a2c02202f46b42ff1062117001af9689fce666bc50cfd479f63969e28670e26b747610f46304402201bb90d72cd58e5198b135828354e8fcc3e73238e412c6e2474f9d67676b12ceb022053f3a6cbeb85abc5e0bc18a83eeffe7785c382746f50c98a29743eb00d474f9e473045022100954d79ddb28c5682a3600cb4f76433f31606064717c700e5ea626807cfb169cf0220365e42d1d07bd8a65b5cb6e449a6bbd3684bf31f0f31ffe9aa13a1f145f28de2473045022100e8a6566fbd8e2829ac24c02ff78794f0122d828e9c1989ed8c077013a2834c6d022016b6833665bbe9ca930247600694f90d40aeb9880fdf95ef62b553efb516997f473045022100c0dca22bfc3a3f64f1ac221796ecd052c153e03732e696ce891be4998c6ae34a0220650ff2e1af0cf3318e249e358738d69de91ebdc81535234a30bdbc4361edc08246304402205f0db67365c3667b93cbcfaa2e5a26a4dbab15a5e39196008fd84b61de358f89022035d5bca676b62028e17f962ef7a33b9f34534f02f3d1ac57b65a666f6d33b3fa473045022100ae711c250c7e4a9d7795e96a4209d05f2b4866473aa2a35b8478b9e3eec883800220514db41ba950cf089cce8fd71cfc41454c80005c2c57401da0e2fb3ce96097bc473045022100bfc416e16fb246cc21a3729359bcf9a752643f4c57190493418dab5df33ff8190220289600af6dc32bffb000f984c8c37f137841e1738c701e05c0a08be53e5eb62b473045022100accf30feb32423e20ddaae3c12584b33ad4eb6492deed1393175a0443832faa0022045b17184460ece57857fe74143166c3692348758054d3d7852fee833cb66e9c4"},codeSampleLiquidTestnet:{esModule:["8f7cb70f32e2069724212c986f34462fc40180eabf189b44486faf6989824f9a"],commonJS:["8f7cb70f32e2069724212c986f34462fc40180eabf189b44486faf6989824f9a"],curl:["8f7cb70f32e2069724212c986f34462fc40180eabf189b44486faf6989824f9a"],response:"000000a0263542a60466e252dbc301001f2f87cdd232106344209d6c252bbda572fd4527b4b9a8412c0ecaca405241beaa6779e74d505a481941a873be74b0b34511cce7d806d261515c020001220020e9e4117540f7f23b3edd7c2cad660a17fb33c7959b8c37cf61d92b189133929a96000000fbee9cea00d8efdc49cfbec328537e0d7032194de6ebf3cf42e5c05bb89a08b10003004730440220303a6fc365e016422bd5d714e403db237964c9e53c244310a4a03f432583290202206951e82c2ffa028f88d64d9bb4ec7789ced137046bb38a02816617b554efd42b012551210217e403ddb181872c32a0cd468c710040b2f53d8cac69f18dad07985ee37e9a7151ae"}}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block-height",title:"GET Block Height",description:{default:"Returns the hash of the block currently at <code>:height</code>."},urlString:"/block-height/:height",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/block-height/%{1}",commonJS:"\n        const { %{0}: { blocks } } = mempoolJS();\n        const hash = '%{1}';\n        const blockHeight = await blocks.getBlockHeight({ height: 0 });\n        document.getElementById(\"result\").textContent = JSON.stringify(blockHeight, undefined, 2);\n        ",esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n  const hash = '%{1}';\n  const blockHeight = await blocks.getBlockHeight({ height: 0 });\n  console.log(blockHeight);\n          "},codeSampleMainnet:{esModule:["615615"],commonJS:["615615"],curl:["615615"],response:"000000000000000000067bea442af50a91377ac796e63b8d284354feff4042b3"},codeSampleTestnet:{esModule:["2100100"],commonJS:["2100100"],curl:["2100100"],response:"000000000000001be62f15637e813e1d8ecdf26ee95d1820ef16db9bd8685985"},codeSampleSignet:{esModule:["48000"],commonJS:["48000"],curl:["48000"],response:"00000009e8322d4b8f74c8bbd04df1dd5a4abce236ae5907cc87f8364fa5e645"},codeSampleLiquid:{esModule:["1234567"],commonJS:["1234567"],curl:["1234567"],response:"ec2e2bf982bca68c4b09634ba2e48fbe9de3d14744a8e8382971991ff8c6cfd1"},codeSampleLiquidTestnet:{esModule:["150000"],commonJS:["150000"],curl:["150000"],response:"67d5eb1aee63c6c2058a088985503ff0626fd3f7f8022bdc74fab36a359164db"}}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block-timestamp",title:"GET Block Timestamp",description:{default:"Returns the height and the hash of the block closest to the given <code>:timestamp</code>."},urlString:"/v1/mining/blocks/timestamp/:timestamp",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/blocks/timestamp/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["1672531200"],response:'{\n  height: 769786,\n  hash: "000000000000000000017f6405c2382de84944eb21be9cec0379a735813f137b",\n  timestamp: "2022-12-31T23:30:31.000Z"\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["1672531200"],response:'{\n  height: 2413838,\n  hash: "00000000000000082888e2353ea4baaea04d2e0e88f2ee054ad2bbcc1d6a5469",\n  timestamp: "2022-12-31T23:57:26.000Z"\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["1672531200"],response:'{\n  height: 123713,\n  hash: "0000010c6df8ffe1684ab9d7cfac69836a4538c057fab4571b809120fe486c96",\n  timestamp: "2022-12-31T23:55:56.000Z"\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block-raw",title:"GET Block Raw",description:{default:"Returns the raw block representation in binary."},urlString:"/block/:hash/raw",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/block/%{1}/raw",commonJS:"\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const hash = '%{1}';\n        const blockRaw = await blocks.getBlockRaw({ hash });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(blockRaw, undefined, 2);\n        ",esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const hash = '%{1}';\n  const blockRaw = await blocks.getBlockRaw({ hash });\n  console.log(blockRaw);\n          "},codeSampleMainnet:{esModule:["0000000000000000000065bda8f8a88f2e1e00d9a6887a43d640e52a4c7660f2"],commonJS:["0000000000000000000065bda8f8a88f2e1e00d9a6887a43d640e52a4c7660f2"],curl:["0000000000000000000065bda8f8a88f2e1e00d9a6887a43d640e52a4c7660f2"],response:""},codeSampleTestnet:{esModule:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],commonJS:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],curl:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],response:""},codeSampleSignet:{esModule:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],commonJS:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],curl:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],response:""},codeSampleLiquid:{esModule:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],commonJS:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],curl:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],response:""},codeSampleLiquidTestnet:{esModule:["67d5eb1aee63c6c2058a088985503ff0626fd3f7f8022bdc74fab36a359164db"],commonJS:["67d5eb1aee63c6c2058a088985503ff0626fd3f7f8022bdc74fab36a359164db"],curl:["67d5eb1aee63c6c2058a088985503ff0626fd3f7f8022bdc74fab36a359164db"],response:""}}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block-status",title:"GET Block Status",description:{default:"Returns the confirmation status of a block. Available fields: <code>in_best_chain</code> (boolean, false for orphaned blocks), <code>next_best</code> (the hash of the next block, only available for blocks in the best chain)."},urlString:"/block/:hash/status",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/block/%{1}/status",commonJS:"\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const hash = '%{1}';\n        const blockStatus = await blocks.getBlockStatus({ hash });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(blockStatus, undefined, 2);\n        ",esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const hash = '%{1}';\n  const blockStatus = await blocks.getBlockStatus({ hash });\n  console.log(blockStatus);\n          "},codeSampleMainnet:{esModule:["0000000000000000000065bda8f8a88f2e1e00d9a6887a43d640e52a4c7660f2"],commonJS:["0000000000000000000065bda8f8a88f2e1e00d9a6887a43d640e52a4c7660f2"],curl:["0000000000000000000065bda8f8a88f2e1e00d9a6887a43d640e52a4c7660f2"],response:'{\n  in_best_chain: true,\n  height: 690557,\n  next_best: "00000000000000000003a59a34c93e39e636c8cd23ead726fdc467fbed0b7c5a"\n}'},codeSampleTestnet:{esModule:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],commonJS:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],curl:["000000000000009c08dc77c3f224d9f5bbe335a78b996ec1e0701e065537ca81"],response:'{\n  in_best_chain: true,\n  height: 2091140,\n  next_best: "0000000000000064152f2dc1e13bd70811fbcfa9c1660557233668b98b7b1c2b"\n}'},codeSampleSignet:{esModule:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],commonJS:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],curl:["000000ca66fab8083d4f0370d499c3d602e78af5fa69b2427cda15a3f0d96152"],response:'{\n  in_best_chain: true,\n  height: 53745,\n  next_best: "000000e9c2a969f6a3425ab70851328e878ebdeb90b73f9cfb16241b97c44640"\n}'},codeSampleLiquid:{esModule:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],commonJS:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],curl:["86aefdd3cf7be8e5781f783fe5d80513e8b3f52f2f1ef61e8e056b7faffc4b78"],response:'{\n  in_best_chain: true,\n  height: 1471971,\n  next_best: "1ce5b14c5fbc05be73d8833839e049fd34212da902a78118cd8502a95bf9c134"\n}'},codeSampleLiquidTestnet:{esModule:["67d5eb1aee63c6c2058a088985503ff0626fd3f7f8022bdc74fab36a359164db"],commonJS:["67d5eb1aee63c6c2058a088985503ff0626fd3f7f8022bdc74fab36a359164db"],curl:["67d5eb1aee63c6c2058a088985503ff0626fd3f7f8022bdc74fab36a359164db"],response:'{\n  in_best_chain: true,\n  height: 150000,\n  next_best: "2f24f3d94c006971b86fe2c9cdc92a7ed0aa7ec3b0643a836b8d8b5a54103bab"\n}'}}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block-tip-height",title:"GET Block Tip Height",description:{default:"Returns the height of the last block."},urlString:"/blocks/tip/height",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/blocks/tip/height",commonJS:'\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const blocksTipHeight = await blocks.getBlocksTipHeight();\n\n        document.getElementById("result").textContent = JSON.stringify(blocksTipHeight, undefined, 2);\n        ',esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const blocksTipHeight = await blocks.getBlocksTipHeight();\n  console.log(blocksTipHeight);\n          "},codeSampleMainnet:{esModule:[""],commonJS:[""],curl:[""],response:"698767"},codeSampleTestnet:{esModule:[""],commonJS:[""],curl:[""],response:"2091168"},codeSampleSignet:{esModule:[""],commonJS:[""],curl:[""],response:"53763"},codeSampleLiquid:{esModule:[""],commonJS:[""],curl:[""],response:"1472119"},codeSampleLiquidTestnet:{esModule:[""],commonJS:[""],curl:[""],response:"162495"}}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block-tip-hash",title:"GET Block Tip Hash",description:{default:"Returns the hash of the last block."},urlString:"/blocks/tip/hash",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/blocks/tip/hash",commonJS:'\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const blocksTipHash = await blocks.getBlocksTipHash();\n\n        document.getElementById("result").textContent = JSON.stringify(blocksTipHash, undefined, 2);\n        ',esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const blocksTipHash = await blocks.getBlocksTipHash();\n  console.log(blocksTipHash);\n          "},codeSampleMainnet:{esModule:[""],commonJS:[""],curl:[""],response:"0000000000000000000624d76f52661d0f35a0da8b93a87cb93cf08fd9140209"},codeSampleTestnet:{esModule:[""],commonJS:[""],curl:[""],response:"00000000000000a7a5227bb493ffb90d1e63e1c7e8cab2c9a2b98e9f2599a9a9"},codeSampleSignet:{esModule:[""],commonJS:[""],curl:[""],response:"000000c09517efadf7425f7c19543b69768aaa9871a817d192d2c33cebebf3f9"},codeSampleLiquid:{esModule:[""],commonJS:[""],curl:[""],response:"ec8fed6f33cba86f99b39ae65af948bfc2fdb95cceaa7331bbfd88f5daa823a2"},codeSampleLiquidTestnet:{esModule:[""],commonJS:[""],curl:[""],response:"ff643a1e102b555103d8feb20b296ee5cf3b4a202fa284e5d6ce82945b738ae7"}}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block-transaction-id",title:"GET Block Transaction ID",description:{default:"Returns the transaction at index <code>:index</code> within the specified block."},urlString:"/block/:hash/txid/:index",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/block/%{1}/txid/%{2}",commonJS:"\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const hash = '%{1}';\n        const blockTxid = await blocks.getBlockTxid({ hash, index: %{2} });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(blockTxid, undefined, 2);\n        ",esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const hash = '%{1}';\n  const blockTxid = await blocks.getBlockTxid({ hash, index: %{2} });\n  console.log(blockTxid);\n          "},codeSampleMainnet:{esModule:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce","218"],commonJS:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce","218"],curl:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce","218"],response:"0fa6da60e484941f255cbb025c3d6440e5a7e970119e899b4065c7999360e406"},codeSampleTestnet:{esModule:["000000000000004a3ff1faff12c446f711c650454ff8af7f41d1e8b2564dd74b","1"],commonJS:["000000000000004a3ff1faff12c446f711c650454ff8af7f41d1e8b2564dd74b","1"],curl:["000000000000004a3ff1faff12c446f711c650454ff8af7f41d1e8b2564dd74b","1"],response:"7aede67cd9f48c2f77ca9112c27da2583ea41fbb391652777c44ef21d5b1656e"},codeSampleSignet:{esModule:["0000014b62b53d2550c310208af9d792ab7a9a2487a67d82c06b17b201ee602f","1"],commonJS:["0000014b62b53d2550c310208af9d792ab7a9a2487a67d82c06b17b201ee602f","1"],curl:["0000014b62b53d2550c310208af9d792ab7a9a2487a67d82c06b17b201ee602f","1"],response:"b72a9a7cfbb0685e393f86fa1fa1c43c2888b9ad01c9ac48a28b98e2c8721a89"},codeSampleLiquid:{esModule:["dbbf73007879859f2c55b8605751498ad0d2848db0fdedeadcbdc0cf4f02ee13","1"],commonJS:["dbbf73007879859f2c55b8605751498ad0d2848db0fdedeadcbdc0cf4f02ee13","1"],curl:["dbbf73007879859f2c55b8605751498ad0d2848db0fdedeadcbdc0cf4f02ee13","1"],response:"36e47770c306ae5d4ddcc2ce50f6ce6e23d6bdc692b9a9a347fb68d19255f598"},codeSampleLiquidTestnet:{esModule:["b6b4aeefa220c6a17da116bda666e869b3146967d2479656448a8bce1e799b8f","1"],commonJS:["b6b4aeefa220c6a17da116bda666e869b3146967d2479656448a8bce1e799b8f","1"],curl:["b6b4aeefa220c6a17da116bda666e869b3146967d2479656448a8bce1e799b8f","1"],response:"41493aa0eec8b6d359c2defc90e2fafb42fb5b8633456648553467a4d3a16c4a"}}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block-transaction-ids",title:"GET Block Transaction IDs",description:{default:"Returns a list of all txids in the block."},urlString:"/block/:hash/txids",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/block/%{1}/txids",commonJS:"\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const hash = '%{1}';\n        const blockTxids = await blocks.getBlockTxids({ hash });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(blockTxids, undefined, 2);\n        ",esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const hash = '%{1}';\n  const blockTxids = await blocks.getBlockTxids({ hash });\n  console.log(blockTxids);\n          "},codeSampleMainnet:{esModule:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce","218"],commonJS:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce","218"],curl:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce","218"],response:'[\n  "cfe624ccdd8010cf78dbedd1b25e1ff601b470c4d7d90fa9fc8c1bcc5cdc6e0e",\n  "a5ef89881bd5103f223a0fa285dfc75f4718974cb792cf85e623a7de05801bc9",\n  ...,\n]'},codeSampleTestnet:{esModule:["000000000000004a3ff1faff12c446f711c650454ff8af7f41d1e8b2564dd74b","1"],commonJS:["000000000000004a3ff1faff12c446f711c650454ff8af7f41d1e8b2564dd74b","1"],curl:["000000000000004a3ff1faff12c446f711c650454ff8af7f41d1e8b2564dd74b","1"],response:'[\n  "b5d033f57045b76f2f29df0c2469be0153ecf2514717bccd8d52250b3e7ba781",\n  "7aede67cd9f48c2f77ca9112c27da2583ea41fbb391652777c44ef21d5b1656e",\n  "20827f9a8fb5ec5fa55ce5389b1d7520d7961272492dc3424874887daeea21dc"\n]'},codeSampleSignet:{esModule:["0000014b62b53d2550c310208af9d792ab7a9a2487a67d82c06b17b201ee602f","1"],commonJS:["0000014b62b53d2550c310208af9d792ab7a9a2487a67d82c06b17b201ee602f","1"],curl:["0000014b62b53d2550c310208af9d792ab7a9a2487a67d82c06b17b201ee602f","1"],response:'[\n  "4220d4fe0ec4beb9313e15fa225fb0bbdf2c17d74b56615e07263aed32d4fdb2",\n  "b72a9a7cfbb0685e393f86fa1fa1c43c2888b9ad01c9ac48a28b98e2c8721a89",\n  "0597e9355e868f98560b0e30d0c6b9f5e7c0f004c376ef26850f61096fabb692",\n  "857ff0a341b14aae2e45122d458f13d0d744cc1081ef0ae2aaec32c01587d1c0",\n  "6062ac26ef4b0c9b5343bdf46c1677297f85705f523472a96383af276a20b0da",\n  "a469bed29a54ef3ed5d00c472f10603ed3ee7c4972fc3cb623e738d628064d19",\n  "ca1a3d14d88dc72a5cb6da198c7151f1f71718ee4b4ba70d6bc597a260b0ab20",\n  "7516b5aaeaab70a735f47b4e100421363cef535378d522a3244ac8741b9d6740",\n  "ee428b6be6df6655ddcbfd64bb3a8fa8de513c4f50d94c1ef91df1254cf45172",\n  "7cf09ecd458613cd3817754286d356fd91efa8456cc9fdc744b65dd6e01ca6ab",\n  "43082dda77028f2ccab3639c919aea6049fd3917a5f3f413f0ee12ca4daf4ad6",\n  "13e4c56fdc40928e8639d19aefff23270ea5555c6e8887fd95b609c50297cbe0",\n  "99bcab11aab1ccb4b2881e5fb0e9b788b8ee0064caa0915e3de62ff8ea65adf5"\n]'},codeSampleLiquid:{esModule:["dbbf73007879859f2c55b8605751498ad0d2848db0fdedeadcbdc0cf4f02ee13","1"],commonJS:["dbbf73007879859f2c55b8605751498ad0d2848db0fdedeadcbdc0cf4f02ee13","1"],curl:["dbbf73007879859f2c55b8605751498ad0d2848db0fdedeadcbdc0cf4f02ee13","1"],response:'[\n  "45abcc4572f519155cd65686c3be9cc744d79d6f36c928b0aa3c989f8ee094be",\n  "36e47770c306ae5d4ddcc2ce50f6ce6e23d6bdc692b9a9a347fb68d19255f598"\n]'},codeSampleLiquidTestnet:{esModule:["b6b4aeefa220c6a17da116bda666e869b3146967d2479656448a8bce1e799b8f","1"],commonJS:["b6b4aeefa220c6a17da116bda666e869b3146967d2479656448a8bce1e799b8f","1"],curl:["b6b4aeefa220c6a17da116bda666e869b3146967d2479656448a8bce1e799b8f","1"],response:'[\n  "95422f140e3d88e6ddaf0625ee523dbf9d38934d67ce32baf6c162d83a08f89f",\n  "41493aa0eec8b6d359c2defc90e2fafb42fb5b8633456648553467a4d3a16c4a",\n  "fa6b8dda9037f8284a659627005ad32dbb81e22b102c1d3d8a9bab0893ce2ab7"\n]'}}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-block-transactions",title:"GET Block Transactions",description:{default:"Returns a list of transactions in the block (up to 25 transactions beginning at <code>start_index</code>). Transactions returned here do not have the <code>status</code> field, since all the transactions share the same block and confirmation status."},urlString:"/block/:hash/txs[/:start_index]",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/block/%{1}/txs",commonJS:"\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const hash = '%{1}';\n        const blockTxs = await blocks.getBlockTxs({ hash });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(blockTxs, undefined, 2);\n        ",esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const hash = '%{1}';\n  const blockTxs = await blocks.getBlockTxs({ hash });\n  console.log(blockTxs);\n          "},codeSampleMainnet:{esModule:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce"],commonJS:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce"],curl:["000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce"],response:'[\n  {\n    txid: "cfe624ccdd8010cf78dbedd1b25e1ff601b470c4d7d90fa9fc8c1bcc5cdc6e0e",\n    version: 1,\n    locktime: 0,\n    vin: [],\n    vout: [],\n    size: 102,\n    weight: 408,\n    fee: 0,\n    status: {\n      confirmed: true,\n      block_height: 363366,\n      block_hash: "000000000000000015dc777b3ff2611091336355d3f0ee9766a2cf3be8e4b1ce",\n      block_time: 1435766771\n    }\n  },\n  ...\n]'},codeSampleTestnet:{esModule:["000000000000004a3ff1faff12c446f711c650454ff8af7f41d1e8b2564dd74b"],commonJS:["000000000000004a3ff1faff12c446f711c650454ff8af7f41d1e8b2564dd74b"],curl:["000000000000004a3ff1faff12c446f711c650454ff8af7f41d1e8b2564dd74b"],response:'[\n  {\n    txid: "b5d033f57045b76f2f29df0c2469be0153ecf2514717bccd8d52250b3e7ba781",\n    version: 2,\n    locktime: 0,\n    vin: [],\n    vout: [],\n    size: 238,\n    weight: 844,\n    fee: 0,\n    status: {\n      confirmed: true,\n      block_height: 2091173,\n      block_hash: "000000000000004a3ff1faff12c446f711c650454ff8af7f41d1e8b2564dd74b",\n      block_time: 1630635771\n    }\n  },\n  ...\n],'},codeSampleSignet:{esModule:["0000014b62b53d2550c310208af9d792ab7a9a2487a67d82c06b17b201ee602f"],commonJS:["0000004b62b53d2550c300208af9d792ab7a9a2487a67d82c06b17b201ee602f"],curl:["0000014b60b53d2550c310200af9d792ab7a9a2487a67d82c06b17b201ee602f"],response:'[\n  {\n    txid: "4220d4fe0ec4beb9313e15fa225fb0bbdf2c17d74b56615e07263aed32d4fdb2",\n    version: 1,\n    locktime: 0,\n    vin: [],\n    vout: [],\n    size: 250,\n    weight: 892,\n    fee: 0,\n    status: {\n      confirmed: true,\n      block_height: 53770,\n      block_hash: "0000014b62b53d2550c310208af9d792ab7a9a2487a67d82c06b17b201ee602f",\n      block_time: 1630635847\n    }\n  },\n  ...\n]'},codeSampleLiquid:{esModule:["dbbf73007879859f2c55b8605751498ad0d2848db0fdedeadcbdc0cf4f02ee13","1"],commonJS:["dbbf73007879859f2c55b8605751498ad0d2848db0fdedeadcbdc0cf4f02ee13","1"],curl:["dbbf73007879859f2c55b8605751498ad0d2848db0fdedeadcbdc0cf4f02ee13","1"],response:'[\n  {\n    txid: "45abcc4572f519155cd65686c3be9cc744d79d6f36c928b0aa3c989f8ee094be",\n    version: 2,\n    locktime: 0,\n    vin: [],\n    vout: [],\n    size: 250,\n    weight: 877,\n    fee: 0,\n    status: {\n      confirmed: true,\n      block_height: 1472142,\n      block_hash: "dbbf73007879859f2c55b8605751498ad0d2848db0fdedeadcbdc0cf4f02ee13",\n      block_time: 1630635778\n    }\n  },\n  ...\n]'},codeSampleLiquidTestnet:{esModule:["b6b4aeefa220c6a17da116bda666e869b3146967d2479656448a8bce1e799b8f","1"],commonJS:["b6b4aeefa220c6a17da116bda666e869b3146967d2479656448a8bce1e799b8f","1"],curl:["b6b4aeefa220c6a17da116bda666e869b3146967d2479656448a8bce1e799b8f","1"],response:'[\n  {\n    txid: "95422f140e3d88e6ddaf0625ee523dbf9d38934d67ce32baf6c162d83a08f89f",\n    version: 2,\n    locktime: 0,\n    vin: [],\n    vout: [],\n    size: 226,\n    weight: 781,\n    fee: 0,\n    status: {\n      confirmed: true,\n      block_height: 142834,\n      block_hash: "b6b4aeefa220c6a17da116bda666e869b3146967d2479656448a8bce1e799b8f",\n      block_time: 1640441533\n    }\n  },\n  ...\n]'}}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-blocks",title:"GET Blocks",description:{default:"Returns details on the past 15 blocks with fee and mining details in an <code>extras</code> field. If <code>:startHeight</code> is specified, the past 15 blocks before (and including) <code>:startHeight</code> are returned."},urlString:"/v1/blocks[/:startHeight]",showConditions:d,showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/v1/blocks/%{1}",commonJS:'\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const getBlocks = await blocks.getBlocks({ startHeight: %{1} });\n\n        document.getElementById("result").textContent = JSON.stringify(getBlocks, undefined, 2);\n        ',esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const getBlocks = await blocks.getBlocks({ startHeight: %{1} });\n  console.log(getBlocks);\n          "},codeSampleMainnet:{esModule:["730000"],commonJS:["730000"],curl:["730000"],response:'[\n  {\n    "id": "0000000000000000000384f28cb3b9cf4377a39cfd6c29ae9466951de38c0529",\n    "timestamp": 1648829449,\n    "height": 730000,\n    "version": 536870912,\n    "bits": 386521239,\n    "nonce": 3580664066,\n    "difficulty": 28587155782195.14,\n    "merkle_root": "efa344bcd6c0607f93b709515dd6dc5496178112d680338ebea459e3de7b4fbc",\n    "tx_count": 1627,\n    "size": 1210916,\n    "weight": 3993515,\n    "previousblockhash": "00000000000000000008b6f6fb83f8d74512ef1e0af29e642dd20daddd7d318f",\n    "extras": {\n      "coinbaseRaw": "0390230b1362696e616e63652f383038e0006f02cd583765fabe6d6d686355577affaad03015e732428a927a5d2d842471b350394139616bcb4401d804000000000000001a750000c9ad0000",\n      "medianFee": 11,\n      "feeRange": [\n        1,\n        11,\n        11,\n        11,\n        18,\n        21,\n        660\n      ],\n      "reward": 641321983,\n      "totalFees": 16321983,\n      "avgFee": 10038,\n      "avgFeeRate": 16,\n      "pool": {\n        "id": 105,\n        "name": "Binance Pool",\n        "slug": "binancepool"\n      }\n    }\n  },\n  {\n    "id": "00000000000000000008b6f6fb83f8d74512ef1e0af29e642dd20daddd7d318f",\n    "timestamp": 1648828946,\n    "height": 729999,\n    "version": 793796608,\n    "bits": 386521239,\n    "nonce": 3477019455,\n    "difficulty": 28587155782195.14,\n    "merkle_root": "d84f9cc1823bd069c505061b1f6faabd809d67ab5354e9f6234312dc4bdb1ecf",\n    "tx_count": 2574,\n    "size": 1481957,\n    "weight": 3993485,\n    "previousblockhash": "000000000000000000071e6c86c2175aa86817cae2a77acd95372b55c1103d89",\n    "extras": {\n      "coinbaseRaw": "038f230b1362696e616e63652f373739d8002900ca5de7a9fabe6d6dda31112c36c10a523154eae76847579755cd4ae558ee2e6f9f200b05dd32a0bf04000000000000006372000000020000",\n      "medianFee": 17,\n      "feeRange": [\n        2,\n        11,\n        14,\n        17,\n        19,\n        28,\n        502\n      ],\n      "reward": 649090210,\n      "totalFees": 24090210,\n      "avgFee": 9362,\n      "avgFeeRate": 24,\n      "pool": {\n        "id": 105,\n        "name": "Binance Pool",\n        "slug": "binancepool"\n      }\n    }\n  },\n  ...\n]'},codeSampleTestnet:{esModule:["2091187"],commonJS:["2091187"],curl:["2091187"],response:'[\n   {\n    "id": "00000000000000533f63df886281a9fd74da163e84a21445153ff480e5f57970",\n    "timestamp": 1630641890,\n    "height": 2091187,\n    "version": 545259520,\n    "bits": 436273151,\n    "nonce": 309403673,\n    "difficulty": 16777216,\n    "merkle_root": "4d6df12a4af11bb928c7b2930e0a4d2c3e268c6dc6a07462943ad1c4b6b96468",\n    "tx_count": 26,\n    "size": 8390,\n    "weight": 22985,\n    "previousblockhash": "0000000000000079103da7d296e1480295df795b7379e7dffd27743e214b0b32",\n    "extras": {\n      "coinbaseRaw": "03b3e81f3a205468697320626c6f636b20776173206d696e65642077697468206120636172626f6e206e6567617469766520706f77657220736f75726365201209687a2009092009020de601d7986a040000",\n      "medianFee": 1,\n      "feeRange": [\n        1,\n        1,\n        1,\n        1,\n        5,\n        56,\n        5053\n      ],\n      "reward": 10547567,\n      "totalFees": 781942,\n      "avgFee": 31277,\n      "avgFeeRate": 143,\n      "pool": {\n        "id": 137,\n        "name": "Unknown",\n        "slug": "unknown"\n      }\n    }\n  },\n  ...\n]'},codeSampleSignet:{esModule:["53783"],commonJS:["53783"],curl:["53783"],response:'[\n  {\n    "id": "0000010eeacb878340bae34af4e13551413d76a172ec302f7e50b62cb45374f2",\n    "timestamp": 1630641504,\n    "height": 53783,\n    "version": 536870912,\n    "bits": 503404179,\n    "nonce": 11753379,\n    "difficulty": 0.002919030932507782,\n    "merkle_root": "3063ff3802c920eea68bdc9303957f3e7bfd0a03c93547fd7dad14b77a07d4e8",\n    "tx_count": 1,\n    "size": 343,\n    "weight": 1264,\n    "previousblockhash": "00000109a7ea774fcc2d173f9a1da9595a47ff401dac67ca9edea149954210fa",\n    "extras": {\n      "coinbaseRaw": "0317d200",\n      "medianFee": 0,\n      "feeRange": [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ],\n      "reward": 5000000000,\n      "totalFees": 0,\n      "avgFee": 0,\n      "avgFeeRate": 0,\n      "pool": {\n        "id": 137,\n        "name": "Unknown",\n        "slug": "unknown"\n      }\n    }\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-blocks-bulk",title:"GET Blocks (Bulk)",description:{default:"<p>Returns details on the range of blocks between <code>:minHeight</code> and <code>:maxHeight</code>, inclusive, up to 10 blocks. If <code>:maxHeight</code> is not specified, it defaults to the current tip.</p><p>To return data for more than 10 blocks, consider becoming an <a href='https://mempool.space/enterprise'>enterprise sponsor</a>.</p>"},urlString:"/v1/blocks-bulk/:minHeight[/:maxHeight]",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/blocks-bulk/%{1}/%{2}",commonJS:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[1e5,1e5],response:'[\n  {\n    "height": 100000,\n    "hash": "000000000003ba27aa200b1cecaad478d2b00432346c3f1f3986da1afd33e506",\n    "timestamp": 1293623863,\n    "median_timestamp": 1293622620,\n    "previous_block_hash": "000000000002d01c1fccc21636b607dfd930d31d01c3a62104612a1719011250",\n    "difficulty": 14484.1623612254,\n    "header": "0100000050120119172a610421a6c3011dd330d9df07b63616c2cc1f1cd00200000000006657a9252aacd5c0b2940996ecff952228c3067cc38d4885efb5a4ac4247e9f337221b4d4c86041b0f2b5710",\n    "version": 1,\n    "bits": 453281356,\n    "nonce": 274148111,\n    "size": 957,\n    "weight": 3828,\n    "tx_count": 4,\n    "merkle_root": "f3e94742aca4b5ef85488dc37c06c3282295ffec960994b2c0d5ac2a25a95766",\n    "reward": 5000000000,\n    "total_fee_amt": 0,\n    "avg_fee_amt": 0,\n    "median_fee_amt": 0,\n    "fee_amt_percentiles": {\n      "min": 0,\n      "perc_10": 0,\n      "perc_25": 0,\n      "perc_50": 0,\n      "perc_75": 0,\n      "perc_90": 0,\n      "max": 0\n    },\n    "avg_fee_rate": 0,\n    "median_fee_rate": 0,\n    "fee_rate_percentiles": {\n      "min": 0,\n      "perc_10": 0,\n      "perc_25": 0,\n      "perc_50": 0,\n      "perc_75": 0,\n      "perc_90": 0,\n      "max": 0\n    },\n    "total_inputs": 3,\n    "total_input_amt": 5301000000,\n    "total_outputs": 6,\n    "total_output_amt": 5301000000,\n    "segwit_total_txs": 0,\n    "segwit_total_size": 0,\n    "segwit_total_weight": 0,\n    "avg_tx_size": 185.25,\n    "utxoset_change": 3,\n    "utxoset_size": 71888,\n    "coinbase_raw": "044c86041b020602",\n    "coinbase_address": null,\n    "coinbase_signature": "OP_PUSHBYTES_65 041b0e8c2567c12536aa13357b79a073dc4444acb83c4ec7a0e2f99dd7457516c5817242da796924ca4e99947d087fedf9ce467cb9f7c6287078f801df276fdf84 OP_CHECKSIG",\n    "coinbase_signature_ascii": "\x04L\ufffd\x04\x1b\x02\x06\x02",\n    "pool_slug": "unknown",\n    "orphans": []\n  }\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:[1e5,1e5],response:'[\n  {\n    "height": 100000,\n    "hash": "00000000009e2958c15ff9290d571bf9459e93b19765c6801ddeccadbb160a1e",\n    "timestamp": 1376123972,\n    "median_timestamp": 1677396660,\n    "previous_block_hash": "000000004956cc2edd1a8caa05eacfa3c69f4c490bfc9ace820257834115ab35",\n    "difficulty": 271.7576739288896,\n    "header": "0200000035ab154183570282ce9afc0b494c9fc6a3cfea05aa8c1add2ecc56490000000038ba3d78e4500a5a7570dbe61960398add4410d278b21cd9708e6d9743f374d544fc055227f1001c29c1ea3b",\n    "version": 2,\n    "bits": 469823783,\n    "nonce": 1005240617,\n    "size": 221,\n    "weight": 884,\n    "tx_count": 1,\n    "merkle_root": "d574f343976d8e70d91cb278d21044dd8a396019e6db70755a0a50e4783dba38",\n    "reward": 5000000000,\n    "total_fee_amt": 0,\n    "avg_fee_amt": 0,\n    "median_fee_amt": 0,\n    "fee_amt_percentiles": {\n      "min": 0,\n      "perc_10": 0,\n      "perc_25": 0,\n      "perc_50": 0,\n      "perc_75": 0,\n      "perc_90": 0,\n      "max": 0\n    },\n    "avg_fee_rate": 0,\n    "median_fee_rate": 0,\n    "fee_rate_percentiles": {\n      "min": 0,\n      "perc_10": 0,\n      "perc_25": 0,\n      "perc_50": 0,\n      "perc_75": 0,\n      "perc_90": 0,\n      "max": 0\n    },\n    "total_inputs": 0,\n    "total_input_amt": null,\n    "total_outputs": 1,\n    "total_output_amt": 0,\n    "segwit_total_txs": 0,\n    "segwit_total_size": 0,\n    "segwit_total_weight": 0,\n    "avg_tx_size": 0,\n    "utxoset_change": 1,\n    "utxoset_size": null,\n    "coinbase_raw": "03a08601000427f1001c046a510100522cfabe6d6d0000000000000000000068692066726f6d20706f6f6c7365727665726aac1eeeed88",\n    "coinbase_address": "mtkbaiLiUH3fvGJeSzuN3kUgmJzqinLejJ",\n    "coinbase_signature": "OP_DUP OP_HASH160 OP_PUSHBYTES_20 912e2b234f941f30b18afbb4fa46171214bf66c8 OP_EQUALVERIFY OP_CHECKSIG",\n    "coinbase_signature_ascii": "\x03 \ufffd\x01\0\x04\'\xf1\0\x1c\x04jQ\x01\0R,\xfa\xbemm\0\0\0\0\0\0\0\0\0\0hi from poolserverj\xac\x1e\xee\xed\ufffd",\n    "pool_slug": "unknown",\n    "orphans": []\n  }\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:[1e5,1e5],response:'[\n  {\n    "height": 100000,\n    "hash": "0000008753108390007b3f5c26e5d924191567e147876b84489b0c0cf133a0bf",\n    "timestamp": 1658421183,\n    "median_timestamp": 1658418056,\n    "previous_block_hash": "000000b962a13c3dd3f81917bc8646a0c98224adcd5124026d4fdfcb76a76d30",\n    "difficulty": 0.002781447610743506,\n    "header": "00000020306da776cbdf4f6d022451cdad2482c9a04686bc1719f8d33d3ca162b90000001367fb15320ebb1932fd589f8f38866b692ca8a4ad6100a4bc732d212916d0efbf7fd9628567011e47662d00",\n    "version": 536870912,\n    "bits": 503408517,\n    "nonce": 2975303,\n    "size": 343,\n    "weight": 1264,\n    "tx_count": 1,\n    "merkle_root": "efd01629212d73bca40061ada4a82c696b86388f9f58fd3219bb0e3215fb6713",\n    "reward": 5000000000,\n    "total_fee_amt": 0,\n    "avg_fee_amt": 0,\n    "median_fee_amt": 0,\n    "fee_amt_percentiles": {\n      "min": 0,\n      "perc_10": 0,\n      "perc_25": 0,\n      "perc_50": 0,\n      "perc_75": 0,\n      "perc_90": 0,\n      "max": 0\n    },\n    "avg_fee_rate": 0,\n    "median_fee_rate": 0,\n    "fee_rate_percentiles": {\n      "min": 0,\n      "perc_10": 0,\n      "perc_25": 0,\n      "perc_50": 0,\n      "perc_75": 0,\n      "perc_90": 0,\n      "max": 0\n    },\n    "total_inputs": 0,\n    "total_input_amt": null,\n    "total_outputs": 2,\n    "total_output_amt": 0,\n    "segwit_total_txs": 0,\n    "segwit_total_size": 0,\n    "segwit_total_weight": 0,\n    "avg_tx_size": 0,\n    "utxoset_change": 2,\n    "utxoset_size": null,\n    "coinbase_raw": "03a08601",\n    "coinbase_address": "tb1psfjl80vk0yp3agcq6ylueas29rau00mfq90mhejerpgccg33xhasd9gjyd",\n    "coinbase_signature": "OP_PUSHNUM_1 OP_PUSHBYTES_32 8265f3bd9679031ea300d13fccf60a28fbc7bf69015fbbe65918518c223135fb",\n    "coinbase_signature_ascii": "\x03 \ufffd\x01",\n    "pool_slug": "unknown",\n    "orphans": []\n  }\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"blocks",httpRequestMethod:"GET",fragment:"get-blocks",title:"GET Blocks",description:{default:"Returns details on the past 10 blocks with fee and mining details in an <code>extras</code> field. If <code>:startHeight</code> is specified, the past 10 blocks before (and including) <code>:startHeight</code> are returned."},urlString:"/blocks[/:startHeight]",showConditions:r,showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/blocks/%{1}",commonJS:'\n        const { %{0}: { blocks } } = mempoolJS();\n\n        const getBlocks = await blocks.getBlocks({ startHeight: %{1} });\n\n        document.getElementById("result").textContent = JSON.stringify(getBlocks, undefined, 2);\n        ',esModule:"\n  const { %{0}: { blocks } } = mempoolJS();\n\n  const getBlocks = await blocks.getBlocks({ startHeight: %{1} });\n  console.log(getBlocks);\n          "},codeSampleMainnet:n,codeSampleTestnet:n,codeSampleSignet:n,codeSampleLiquid:{esModule:["1472246"],commonJS:["1472246"],curl:["1472246"],response:'[\n  {\n    id: "0bd348c08101fef863b7263b2b44b2f6575f707f1e397da95cfe2afdd5e9ccdb",\n    height: 1472246,\n    version: 570425344,\n    timestamp: 1630642018,\n    tx_count: 2,\n    size: 10838,\n    weight: 16901,\n    merkle_root: "a8cdc1ba96d1f862ca7c9aec4133a6efd14138f54c17efdbc968632a6b9cb8c8",\n    previousblockhash: "a06c327cdd76301de57ba0cf86c5ae8b1fd8a785945065ac9e2128322bd01f31",\n    mediantime: 1630641718\n  },\n  ...\n]'},codeSampleLiquidTestnet:{esModule:["150000"],commonJS:["150000"],curl:["150000"],response:'[\n  {\n    id: "67d5eb1aee63c6c2058a088985503ff0626fd3f7f8022bdc74fab36a359164db",\n    height: 150000,\n    version: 536870912,\n    timestamp: 1640871913,\n    tx_count: 2,\n    size: 3527,\n    weight: 7430,\n    merkle_root: "40538ff1fcac07c65e36fcc230fc60f58e3a885ce9898e41bc27bcf28227e5ff",\n    previousblockhash: "2d8c28042b03219e7e9bc6853cc3ae536e36be5639869c545a0f3dbd1309e2a5",\n    mediantime: 1640871614\n  },\n  ...\n]'}}}},{type:"category",category:"mining",fragment:"mining",title:"Mining",showConditions:d},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-mining-pools",title:"GET Mining Pools",description:{default:"Returns a list of all known mining pools ordered by blocks found over the specified trailing <code>:timePeriod</code>.</p><p>Leave <code>:timePeriod</code> unspecified to get all available data, or specify one of the following values: "+k+"."},urlString:"/v1/mining/pools[/:timePeriod]",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/pools/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["1w"],response:'{\n  "pools": [\n  {\n    "poolId": 111,\n    "name": "Foundry USA",\n    "link": "https://foundrydigital.com/",\n    "blockCount": 194,\n    "rank": 1,\n    "emptyBlocks": 0,\n    "slug": "foundryusa"\n  },\n  {\n    "poolId": 36,\n    "name": "F2Pool",\n    "link": "https://www.f2pool.com/",\n    "blockCount": 154,\n    "rank": 2,\n    "emptyBlocks": 0,\n    "slug": "f2pool"\n  },\n  {\n    "poolId": 44,\n    "name": "AntPool",\n    "link": "https://www.antpool.com/",\n    "blockCount": 138,\n    "rank": 3,\n    "emptyBlocks": 0,\n    "slug": "antpool"\n  },\n  ...\n  "blockCount": 1005,\n  "lastEstimatedHashrate": 230086716765559200000\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["3y"],response:'{\n  "pools": [\n    {\n      "poolId": 112,\n      "name": "SBI Crypto",\n      "link": "https://sbicrypto.com",\n      "blockCount": 26243,\n      "rank": 2,\n      "emptyBlocks": 11272,\n      "slug": "sbicrypto"\n    },\n    {\n      "poolId": 8,\n      "name": "Huobi.pool",\n      "link": "https://www.hpt.com/",\n      "blockCount": 12134,\n      "rank": 3,\n      "emptyBlocks": 6096,\n      "slug": "huobipool"\n    },\n    ...\n  ],\n  "blockCount": 2226180,\n  "lastEstimatedHashrate": 602244182177430.8\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["3y"],response:"{}"},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-mining-pool",title:"GET Mining Pool",description:{default:"<p>Returns details about the mining pool specified by <code>:slug</code>.</p>"},urlString:"/v1/mining/pool/:slug",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/pool/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["slushpool"],response:'{\n  "pool": {\n    "id": 43,\n    "name": "SlushPool",\n    "link": "https://slushpool.com/",\n    "addresses": [\n      "1CK6KHY6MHgYvmRQ4PAafKYDrg1ejbH1cE",\n      "1AqTMY7kmHZxBuLUR5wJjPFUvqGs23sesr"\n    ],\n    "regexes": [\n      "/slush/"\n    ],\n    "slug": "slushpool"\n  },\n  "blockCount": {\n    "all": 679,\n    "24h": 8,\n    "1w": 56\n  },\n  "blockShare": {\n    "all": 0.06015770355275981,\n    "24h": 0.05333333333333334,\n    "1w": 0.055666003976143144\n  },\n  "estimatedHashrate": 12448077385930390000,\n  "reportedHashrate": null\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["binancepool"],response:'{\n  "pool": {\n    "id": 105,\n    "name": "Binance Pool",\n    "link": "https://pool.binance.com/",\n    "addresses": [],\n    "regexes": [\n      "/Binance/",\n      "binance"\n    ],\n    "slug": "binancepool"\n  },\n  "blockCount": {\n    "all": 2,\n    "24h": 1,\n    "1w": 1\n  },\n  "blockShare": {\n    "all": 8.984160924290476e-7,\n    "24h": 0.004524886877828055,\n    "1w": 0.0005089058524173028\n  },\n  "estimatedHashrate": 2617854550633.5283,\n  "reportedHashrate": null\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["unknown"],response:"{}"},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-mining-pool-hashrates",title:"GET Mining Pool Hashrates",description:{default:"<p>Returns average hashrates (and share of total hashrate) of mining pools active in the specified trailing <code>:timePeriod</code>, in descending order of hashrate.</p><p>Leave <code>:timePeriod</code> unspecified to get all available data, or specify any of the following time periods: "+k.substr(52)+".</p>"},urlString:"/v1/mining/hashrate/pools/[:timePeriod]",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/hashrate/pools/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["1m"],response:'[\n  {\n    "timestamp": 1650240000,\n    "avgHashrate": 38258816322322470000,\n    "share": 0.185366,\n    "poolName": "Foundry USA"\n  },\n  {\n    "timestamp": 1650240000,\n    "avgHashrate": 28996155528497033000,\n    "share": 0.140488,\n    "poolName": "F2Pool"\n  },\n  {\n    "timestamp": 1650240000,\n    "avgHashrate": 29801604293177496000,\n    "share": 0.14439,\n    "poolName": "AntPool"\n  },\n  {\n    "timestamp": 1650240000,\n    "avgHashrate": 21747116646372770000,\n    "share": 0.105366,\n    "poolName": "Poolin"\n  },\n  {\n    "timestamp": 1650240000,\n    "avgHashrate": 26579809234455600000,\n    "share": 0.12878,\n    "poolName": "Binance Pool"\n  },\n  {\n    "timestamp": 1650240000,\n    "avgHashrate": 19934856925841707000,\n    "share": 0.0965854,\n    "poolName": "ViaEAC"\n  },\n  {\n    "timestamp": 1650240000,\n    "avgHashrate": 11679007087866855000,\n    "share": 0.0565854,\n    "poolName": "SlushPool"\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["1y"],response:'[\n  {\n    "timestamp": 1621814400,\n    "avgHashrate": 395655036336662.7,\n    "share": 1,\n    "poolName": "Unknown"\n  },\n  {\n    "timestamp": 1621814400,\n    "avgHashrate": 0,\n    "share": 0,\n    "poolName": "Binance Pool"\n  }\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["1w"],response:'[\n  {\n    "timestamp": 1600041600,\n    "avgHashrate": 21621.70283633912,\n    "share": 1,\n    "poolName": "Unknown"\n  }\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-mining-pool-hashrate",title:"GET Mining Pool Hashrate",description:{default:"Returns all known hashrate data for the mining pool specified by <code>:slug</code>. Hashrate values are weekly averages."},urlString:"/v1/mining/pool/:slug/hashrate",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/pool/%{1}/hashrate",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["foundryusa"],response:'[\n  {\n    "timestamp": 1647216000,\n    "avgHashrate": 39126788325841880000,\n    "share": 0.195312,\n    "poolName": "Foundry USA"\n  },\n  {\n    "timestamp": 1647302400,\n    "avgHashrate": 42038778612166990000,\n    "share": 0.208941,\n    "poolName": "Foundry USA"\n  },\n  {\n    "timestamp": 1647820800,\n    "avgHashrate": 40677922193000910000,\n    "share": 0.196597,\n    "poolName": "Foundry USA"\n  },\n  {\n    "timestamp": 1647907200,\n    "avgHashrate": 40210989932016525000,\n    "share": 0.194707,\n    "poolName": "Foundry USA"\n  },\n  {\n    "timestamp": 1648425600,\n    "avgHashrate": 39336856807414260000,\n    "share": 0.194605,\n    "poolName": "Foundry USA"\n  },\n  {\n    "timestamp": 1648512000,\n    "avgHashrate": 39391244745360090000,\n    "share": 0.193487,\n    "poolName": "Foundry USA"\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["kncminer"],response:'[\n  {\n    "timestamp": 1400457600,\n    "avgHashrate": 23504290056.20675,\n    "share": 0.21875,\n    "poolName": "KnCMiner"\n  },\n  {\n    "timestamp": 1401062400,\n    "avgHashrate": 22880315827.385838,\n    "share": 0.301661,\n    "poolName": "KnCMiner"\n  },\n  {\n    "timestamp": 1401667200,\n    "avgHashrate": 65314000516.18979,\n    "share": 0.774853,\n    "poolName": "KnCMiner"\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["unknown"],response:'[\n  {\n    "timestamp": 1600041600,\n    "avgHashrate": 21621.70283633912,\n    "share": 1,\n    "poolName": "Unknown"\n  },\n  {\n    "timestamp": 1600646400,\n    "avgHashrate": 23490.65374463165,\n    "share": 1,\n    "poolName": "Unknown"\n  },\n  {\n    "timestamp": 1601251200,\n    "avgHashrate": 22660.62333333333,\n    "share": 1,\n    "poolName": "Unknown"\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-mining-pool-blocks",title:"GET Mining Pool Blocks",description:{default:"Returns past 10 blocks mined by the specified mining pool (<code>:slug</code>) before the specified <code>:blockHeight</code>. If no <code>:blockHeight</code> is specified, the mining pool's 10 most recent blocks are returned."},urlString:"/v1/mining/pool/:slug/blocks/[:blockHeight]",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/pool/%{1}/blocks/%{2}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["luxor","730000"],response:'[\n  {\n    "id": "0000000000000000000572c6eb693c51b728593139079c613c8ea0bc6384e362",\n    "timestamp": 1648778242,\n    "height": 729910,\n    "version": 536895488,\n    "bits": 386521239,\n    "nonce": 1708647181,\n    "difficulty": 28587155782195.14,\n    "merkle_root": "729be37fb4b1bff0ca2e4b572e5dc3fb57e5aa57a8a400f8c89d4993d05c204f",\n    "tx_count": 1808,\n    "size": 1595444,\n    "weight": 3992846,\n    "previousblockhash": "00000000000000000000034e117bb9922da36adc6393fabfe9ed97c7bb38998c",\n    "extras": {\n      "coinbaseRaw": "0336230b315c20506f7765726564206279204c75786f722054656368205c000000002103a960b06341e200000e744596150000000000",\n      "medianFee": 1,\n      "reward": 628988802,\n      "totalFees": 3988802,\n      "pool": {\n        "id": 4\n      }\n    }\n  },\n  {\n    "id": "00000000000000000009b6d122d9e2299d2f9cda13274a9f024bebe52ef96a59",\n    "timestamp": 1648717740,\n    "height": 729820,\n    "version": 536870912,\n    "bits": 386521239,\n    "nonce": 1608169168,\n    "difficulty": 28587155782195.14,\n    "merkle_root": "4f67e65e8e5e554cd4a8d0f91aa63b5e8686817984eb8188af5fb39958263f5d",\n    "tx_count": 1425,\n    "size": 729585,\n    "weight": 1954155,\n    "previousblockhash": "000000000000000000006441657fa1eea37d68784ebd86dc1cd7f89251130f56",\n    "extras": {\n      "coinbaseRaw": "03dc220b315c20506f7765726564206279204c75786f722054656368205c00000000e5ae4908ac1f20df00000410c830000000000000",\n      "medianFee": 8,\n      "reward": 630138805,\n      "totalFees": 5138805,\n      "pool": {\n        "id": 4\n      }\n    }\n  },\n  {\n    "id": "0000000000000000000796834c03bd3be474bfa895146a58015f5ff325ef50c0",\n    "timestamp": 1648653948,\n    "height": 729714,\n    "version": 549453824,\n    "bits": 386547904,\n    "nonce": 883606929,\n    "difficulty": 27452707696466.39,\n    "merkle_root": "45593907e5fa0dee743d2f9194b0923a800cb6313e66221a86bf51df388e012c",\n    "tx_count": 1709,\n    "size": 1434271,\n    "weight": 3993013,\n    "previousblockhash": "000000000000000000000fbfac1a91cdeaf64d689f7673d02613da9d10bfb284",\n    "extras": {\n      "coinbaseRaw": "0372220b315c20506f7765726564206279204c75786f722054656368205c0000000063349a9b3d185fed000007e7092a000000000000",\n      "medianFee": 3,\n      "reward": 632350743,\n      "totalFees": 7350743,\n      "pool": {\n        "id": 4\n      }\n    }\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["bitcoincom","2226000"],response:'[\n  {\n    "id": "00000000000000ed428cdb70dfdeb0f3927912131cb96e7b1fe274b1bb1181b2",\n    "timestamp": 1582018014,\n    "height": 1666150,\n    "version": 541065216,\n    "bits": 436312585,\n    "nonce": 21973352,\n    "difficulty": 10474471.99230249,\n    "merkle_root": "541456efe41e5730a563475e0c5e2007ee660f1d86d9778bfc164d73c59fd605",\n    "tx_count": 382,\n    "size": 126201,\n    "weight": 331851,\n    "previousblockhash": "00000000005a0843cc88b09cf6def15e4dc8fe38ab5cf3ad890f34a2df497004",\n    "extras": {\n      "coinbaseRaw": "03666c19706f6f6c2e626974636f696e2e636f6d010000022583010000000000",\n      "medianFee": 1,\n      "reward": 39726335,\n      "totalFees": 663835,\n      "pool": {\n        "id": 12\n      }\n    }\n  },\n  {\n    "id": "00000000000000af90f51e48cb29fdecc62e9961c5e27aca1a4ae8213aae1954",\n    "timestamp": 1579793108,\n    "height": 1663620,\n    "version": 541065216,\n    "bits": 436295134,\n    "nonce": 1762790676,\n    "difficulty": 12563071.03178775,\n    "merkle_root": "02d02afea666f08bab5851de541d0570c71a6cd8be358c28952c52d57b7afad4",\n    "tx_count": 24,\n    "size": 9562,\n    "weight": 23848,\n    "previousblockhash": "000000000000013bbdbc0fef53a5b4b2af02880a6f56f7945de071b71d51123a",\n    "extras": {\n      "coinbaseRaw": "03846219706f6f6c2e626974636f696e2e636f6d01000065f224020000000000",\n      "medianFee": 1,\n      "reward": 39547121,\n      "totalFees": 484621,\n      "pool": {\n        "id": 12\n      }\n    }\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["unknown","45000"],response:'[\n  {\n    "id": "00000002440c34e403b2b4e10f390ab105c825dd6285cd6f4050db23cf7e3e46",\n    "timestamp": 1625317548,\n    "height": 44999,\n    "version": 536870912,\n    "bits": 503405326,\n    "nonce": 14354169,\n    "difficulty": 0.002881346304279315,\n    "merkle_root": "3324dc134dec1b57cfea574ce2db6e40e51469417b6381a1389e7969386ab42e",\n    "tx_count": 14,\n    "size": 2971,\n    "weight": 8149,\n    "previousblockhash": "000000d7998f5cf0fb144a400566221574f5f35ebd5d7d9fa803460b6942e237",\n    "extras": {\n      "coinbaseRaw": "03c7af00",\n      "medianFee": 1,\n      "reward": 5000002252,\n      "totalFees": 2252,\n      "pool": {\n        "id": 137\n      }\n    }\n  },\n  {\n    "id": "000000d7998f5cf0fb144a400566221574f5f35ebd5d7d9fa803460b6942e237",\n    "timestamp": 1625317223,\n    "height": 44998,\n    "version": 536870912,\n    "bits": 503405326,\n    "nonce": 4729165,\n    "difficulty": 0.002881346304279315,\n    "merkle_root": "55869f5a52d7709fb2c6df91d64841f4551d659948b7537b6cd8f19c68d27115",\n    "tx_count": 32,\n    "size": 6967,\n    "weight": 18247,\n    "previousblockhash": "000000d6de5b925642a7afed41994947db8612955fbdfd9d1b48f99fc0187385",\n    "extras": {\n      "coinbaseRaw": "03c6af00",\n      "medianFee": 1,\n      "reward": 5000005528,\n      "totalFees": 5528,\n      "pool": {\n        "id": 137\n      }\n    }\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-hashrate",title:"GET Hashrate",description:{default:"<p>Returns network-wide hashrate and difficulty figures over the specified trailing <code>:timePeriod</code>:</p><ul><li>Current (real-time) hashrate</li><li>Current (real-time) difficulty</li><li>Historical daily average hashrates</li><li>Historical difficulty</li></ul><p>Valid values for <code>:timePeriod</code> are "+k.substr(52)+". If no time interval is specified, all available data is returned.</p><p>Be sure that <code>INDEXING_BLOCKS_AMOUNT</code> is set properly in your backend config so that enough blocks are indexed to properly serve your request.</p>"},urlString:"/v1/mining/hashrate/[:timePeriod]",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/hashrate/3d",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'{\n  "hashrates": [\n    {\n      "timestamp": 1652486400,\n      "avgHashrate": 236499762108771800000\n    },\n    {\n      "timestamp": 1652572800,\n      "avgHashrate": 217473276787331300000\n    },\n    {\n      "timestamp": 1652659200,\n      "avgHashrate": 189877203506913000000\n    }\n  ],\n  "difficulty": [\n    {\n      "timestamp": 1652468330,\n      "difficulty": 31251101365711.12,\n      "height": 736249\n    }\n  ],\n  "currentHashrate": 252033247355212300000,\n  "currentDifficulty": 31251101365711.12\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["3d"],response:'{\n  "hashrates": [\n    {\n      "timestamp": 1652745600,\n      "avgHashrate": 385829751259101.6\n    },\n    {\n      "timestamp": 1652832000,\n      "avgHashrate": 657984995406460.8\n    },\n    {\n      "timestamp": 1652918400,\n      "avgHashrate": 510731129917436.6\n    }\n  ],\n  "difficulty": [\n    {\n      "timestamp": 1652691434,\n      "difficulty": 26119369.29706616,\n      "height": 2225402\n    }\n  ],\n  "currentHashrate": 781149965464814.4,\n  "currentDifficulty": 55580658.55098472\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["3d"],response:'{\n  "hashrates": [\n    {\n      "timestamp": 1652745600,\n      "avgHashrate": 21304.18163251096\n    },\n    {\n      "timestamp": 1652832000,\n      "avgHashrate": 22034.51091213679\n    },\n    {\n      "timestamp": 1652918400,\n      "avgHashrate": 20312.75493978447\n    }\n  ],\n  "difficulty": [\n    {\n      "timestamp": 1652692199,\n      "difficulty": 0.002868721424409158,\n      "height": 90533\n    },\n    {\n      "timestamp": 1652796655,\n      "difficulty": 0.00286032350920122,\n      "height": 90720\n    }\n  ],\n  "currentHashrate": 23490.95654668005,\n  "currentDifficulty": 0.00286032350920122\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-difficulty-adjustments",title:"GET Difficulty Adjustments",description:{default:"<p>Returns the record of difficulty adjustments over the specified trailing <code>:interval</code>:</p><ul><li>Block timestamp</li><li>Block height</li><li>Difficulty</li><li>Difficulty change</li></ul><p>If no time interval is specified, all available data is returned."},urlString:"/v1/mining/difficulty-adjustments/[:interval]",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/difficulty-adjustments/1m",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:"[\n  [\n    1703311464,\n    822528,\n    72006146478567.1,\n    1.06983\n  ],\n  [\n    1702180644,\n    820512,\n    67305906902031.39,\n    0.990408\n  ],\n  [\n    1700957763,\n    818496,\n    67957790298897.88,\n    1.0507\n  ]\n]"},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:"[\n  [\n    1703429523,\n    2544008,\n    105074715.9955905,\n    105075000\n  ],\n  [\n    1703426009,\n    2544005,\n    1,\n    0\n  ],\n  [\n    1703422944,\n    2544000,\n    105074715.9955905,\n    105075000\n  ],\n  ...\n]"},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:"[\n  [\n    1702402252,\n    173376,\n    0.002967416960321784,\n    1.01893\n  ],\n  [\n    1701214807,\n    171360,\n    0.002912289751655253,\n    0.9652\n  ]\n]"},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-reward-stats",title:"GET Reward Stats",description:{default:"Returns block reward and total transactions confirmed for the past <code>:blockCount</code> blocks."},urlString:"/v1/mining/reward-stats/:blockCount",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/reward-stats/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["100"],response:'{\n  "startBlock": 736556,\n  "endBlock": 736655,\n  "totalReward": "63811748254",\n  "totalFee": "1311748254",\n  "totalTx": "164216"\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["100"],response:'{\n  "startBlock": 2226086,\n  "endBlock": 2226185,\n  "totalReward": "513462793",\n  "totalFee": "25181593",\n  "totalTx": "2366"\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["100"],response:'{\n  "startBlock": 90899,\n  "endBlock": 90998,\n  "totalReward": "500001245259",\n  "totalFee": "1245259",\n  "totalTx": "1112"\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-block-fees",title:"GET Block Fees",description:{default:"<p>Returns average total fees for blocks in the specified <code>:timePeriod</code>, ordered oldest to newest. <code>:timePeriod</code> can be any of the following: "+k+".</p><p>For <code>24h</code> and <code>3d</code> time periods, every block is included and fee amounts are exact (not averages). For the <code>1w</code> time period, fees may be averages depending on how fast blocks were found around a particular timestamp. For other time periods, fees are averages.</p>"},urlString:"/v1/mining/blocks/fees/:timePeriod",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/blocks/fees/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["1w"],response:'[\n  {\n    "avgHeight": 735644,\n    "timestamp": 1652119111,\n    "avgFees": 24212890\n  },\n  {\n    "avgHeight": 735646,\n    "timestamp": 1652120252,\n    "avgFees": 21655996\n  },\n  {\n    "avgHeight": 735648,\n    "timestamp": 1652121214,\n    "avgFees": 20678859\n  },\n  {\n    "avgHeight": 735649,\n    "timestamp": 1652121757,\n    "avgFees": 21020140\n  },\n  {\n    "avgHeight": 735650,\n    "timestamp": 1652122367,\n    "avgFees": 23064200\n  },\n  {\n    "avgHeight": 735652,\n    "timestamp": 1652122893,\n    "avgFees": 17620723\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["1w"],response:'[\n  {\n    "avgHeight": 2224253,\n    "timestamp": 1652346420,\n    "avgFees": 211686\n  },\n  {\n    "avgHeight": 2224254,\n    "timestamp": 1652346850,\n    "avgFees": 2565952\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["1w"],response:'[\n  {\n    "avgHeight": 89978,\n    "timestamp": 1652346573,\n    "avgFees": 1071\n  },\n  {\n    "avgHeight": 89979,\n    "timestamp": 1652346970,\n    "avgFees": 1224\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-block-rewards",title:"GET Block Rewards",description:{default:"<p>Returns average block rewards for blocks in the specified <code>:timePeriod</code>, ordered oldest to newest. <code>:timePeriod</code> can be any of the following: "+k+".</p><p>For <code>24h</code> and <code>3d</code> time periods, every block is included and block rewards are exact (not averages). For the <code>1w</code> time period, block rewards may be averages depending on how fast blocks were found around a particular timestamp. For other time periods, block rewards are averages.</p>"},urlString:"/v1/mining/blocks/rewards/:timePeriod",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/blocks/rewards/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["1d"],response:'[\n  {\n    "avgHeight": 599992,\n    "timestamp": 1571438412,\n    "avgRewards": 1260530933\n  },\n  {\n    "avgHeight": 600000,\n    "timestamp": 1571443398,\n    "avgRewards": 1264314538\n  },\n  {\n    "avgHeight": 725441,\n    "timestamp": 1646139035,\n    "avgRewards": 637067563\n  },\n  {\n    "avgHeight": 725585,\n    "timestamp": 1646222444,\n    "avgRewards": 646519104\n  },\n  {\n    "avgHeight": 725727,\n    "timestamp": 1646308374,\n    "avgRewards": 638709605\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["1d"],response:'[\n  {\n    "avgHeight": 12,\n    "timestamp": 1296689648,\n    "avgRewards": 5000000000\n  },\n  {\n    "avgHeight": 269,\n    "timestamp": 1296717674,\n    "avgRewards": 5000091820\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["1d"],response:'[\n  {\n    "avgHeight": 183,\n    "timestamp": 1598962247,\n    "avgRewards": 5000000000\n  },\n  {\n    "avgHeight": 576,\n    "timestamp": 1599047892,\n    "avgRewards": 5000000000\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-block-feerates",title:"GET Block Feerates",description:{default:"Returns average feerate percentiles for blocks in the specified <code>:timePeriod</code>, ordered oldest to newest. <code>:timePeriod</code> can be any of the following: "+k+".</p><p>For <code>24h</code> and <code>3d</code> time periods, every block is included and percentiles are exact (not averages). For the <code>1w</code> time period, percentiles may be averages depending on how fast blocks were found around a particular timestamp. For other time periods, percentiles are averages."},urlString:"/v1/mining/blocks/fee-rates/:timePeriod",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/blocks/fee-rates/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["1m"],response:'[\n  {\n    "avgHeight": 732152,\n    "timestamp": 1650132959,\n    "avgFee_0": 1,\n    "avgFee_10": 2,\n    "avgFee_25": 2,\n    "avgFee_50": 3,\n    "avgFee_75": 4,\n    "avgFee_90": 8,\n    "avgFee_100": 393\n  },\n  {\n    "avgHeight": 732158,\n    "timestamp": 1650134432,\n    "avgFee_0": 1,\n    "avgFee_10": 1,\n    "avgFee_25": 2,\n    "avgFee_50": 4,\n    "avgFee_75": 6,\n    "avgFee_90": 10,\n    "avgFee_100": 240\n  },\n  {\n    "avgHeight": 732161,\n    "timestamp": 1650135818,\n    "avgFee_0": 1,\n    "avgFee_10": 1,\n    "avgFee_25": 1,\n    "avgFee_50": 2,\n    "avgFee_75": 5,\n    "avgFee_90": 8,\n    "avgFee_100": 251\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["1m"],response:'[\n  {\n    "avgHeight": 2196306,\n    "timestamp": 1650360168,\n    "avgFee_0": 1,\n    "avgFee_10": 1,\n    "avgFee_25": 1,\n    "avgFee_50": 1,\n    "avgFee_75": 2,\n    "avgFee_90": 28,\n    "avgFee_100": 2644\n  },\n  {\n    "avgHeight": 2196308,\n    "timestamp": 1650361209,\n    "avgFee_0": 1,\n    "avgFee_10": 1,\n    "avgFee_25": 1,\n    "avgFee_50": 4,\n    "avgFee_75": 12,\n    "avgFee_90": 65,\n    "avgFee_100": 102\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["1m"],response:'{\n"blockFeeRates": [\n  {\n    "avgHeight": 86620,\n    "timestamp": 1650360010,\n    "avgFee_0": 1,\n    "avgFee_10": 1,\n    "avgFee_25": 1,\n    "avgFee_50": 1,\n    "avgFee_75": 1,\n    "avgFee_90": 1,\n    "avgFee_100": 1\n  },\n  {\n    "avgHeight": 86623,\n    "timestamp": 1650361330,\n    "avgFee_0": 1,\n    "avgFee_10": 1,\n    "avgFee_25": 1,\n    "avgFee_50": 1,\n    "avgFee_75": 1,\n    "avgFee_90": 1,\n    "avgFee_100": 1\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-sizes-weights",title:"GET Block Sizes and Weights",description:{default:"<p>Returns average size (bytes) and average weight (weight units) for blocks in the specified <code>:timePeriod</code>, ordered oldest to newest. <code>:timePeriod</code> can be any of the following: "+k+".</p><p>For <code>24h</code> and <code>3d</code> time periods, every block is included and figures are exact (not averages). For the <code>1w</code> time period, figures may be averages depending on how fast blocks were found around a particular timestamp. For other time periods, figures are averages.</p>"},urlString:"/v1/mining/blocks/sizes-weights/:timePeriod",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/blocks/sizes-weights/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["3y"],response:'{\n  "sizes": [\n    {\n      "avgHeight": 576650,\n      "timestamp": 1558212081,\n      "avgSize": 1271404\n    },\n    {\n      "avgHeight": 576715,\n      "timestamp": 1558246272,\n      "avgSize": 1105893\n    },\n    {\n      "avgHeight": 576797,\n      "timestamp": 1558289379,\n      "avgSize": 1141071\n    },\n    {\n      "avgHeight": 576885,\n      "timestamp": 1558330184,\n      "avgSize": 1108166\n    },\n    ...\n  ],\n  "weights": [\n    {\n      "avgHeight": 576650,\n      "timestamp": 1558212081,\n      "avgWeight": 3994002\n    },\n    {\n      "avgHeight": 576715,\n      "timestamp": 1558246272,\n      "avgWeight": 3756312\n    },\n    {\n      "avgHeight": 576797,\n      "timestamp": 1558289379,\n      "avgWeight": 3719625\n    },\n    {\n      "avgHeight": 576885,\n      "timestamp": 1558330184,\n      "avgWeight": 3631381\n    },\n    ...\n  ]\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["3y"],response:'{\n  "sizes": [\n    {\n      "avgHeight": 1517188,\n      "timestamp": 1558262730,\n      "avgSize": 25089\n    },\n    {\n      "avgHeight": 1517275,\n      "timestamp": 1558290933,\n      "avgSize": 21679\n    },\n    ...\n  ],\n  "weights": [\n    {\n      "avgHeight": 1517188,\n      "timestamp": 1558262730,\n      "avgWeight": 74921\n    },\n    {\n      "avgHeight": 1517275,\n      "timestamp": 1558290933,\n      "avgWeight": 65164\n    },\n    ...\n  ]\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["3y"],response:'{\n  "sizes": [\n    {\n      "avgHeight": 83,\n      "timestamp": 1598937527,\n      "avgSize": 329\n    },\n    {\n      "avgHeight": 266,\n      "timestamp": 1598982991,\n      "avgSize": 330\n    },\n    ...\n  ],\n  "weights": [\n    {\n      "avgHeight": 83,\n      "timestamp": 1598937527,\n      "avgWeight": 1209\n    },\n    {\n      "avgHeight": 266,\n      "timestamp": 1598982991,\n      "avgWeight": 1212\n    },\n    ...\n  ]\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-block-predictions",title:"GET Block Predictions",description:{default:"<p>Returns average block health in the specified <code>:timePeriod</code>, ordered oldest to newest. <code>:timePeriod</code> can be any of the following: "+k+".</p><p>For <code>24h</code> and <code>3d</code> time periods, every block is included and figures are exact (not averages). For the <code>1w</code> time period, figures may be averages depending on how fast blocks were found around a particular timestamp. For other time periods, figures are averages.</p>"},urlString:["/v1/mining/blocks/predictions/:timePeriod"],showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/blocks/predictions/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["3y"],response:"[\n  [\n    1687247274,\n    777625,\n    100\n  ],\n  [\n    1687066238,\n    788621,\n    99.85\n  ],\n  [\n    1687263518,\n    795182,\n    99.46\n  ],\n  [\n    1687312271,\n    795260,\n    100\n  ],\n  ...\n]"},codeSampleTestnet:{esModule:[],commonJS:[],curl:["3y"],response:"[\n  [\n    1687246773,\n    2429248,\n    100\n  ],\n  [\n    1687285500,\n    2438380,\n    100\n  ],\n  [\n    1687342820,\n    2438467,\n    100\n  ],\n  [\n    1687372143,\n    2438522,\n    100\n  ],\n  ...\n]"},codeSampleSignet:{esModule:[],commonJS:[],curl:["3y"],response:"[\n  [\n    1687246696,\n    129639,\n    0\n  ],\n  [\n    1687303289,\n    148191,\n    0\n  ],\n  [\n    1687315093,\n    148218,\n    0\n  ],\n  [\n    1687368211,\n    148312,\n    0\n  ],\n  ...\n]"},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-block-audit-score",title:"GET Block Audit Score",description:{default:"Returns the block audit score for the specified <code>:blockHash</code>. Available fields: <code>hash</code>, <code>matchRate</code>, <code>expectedFees</code>, and <code>expectedWeight</code>."},urlString:["/v1/mining/blocks/audit/score/:blockHash"],showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/blocks/audit/score/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["000000000000000000032535698c5b0c48283b792cf86c1c6e36ff84464de785"],response:'{\n  hash: "000000000000000000032535698c5b0c48283b792cf86c1c6e36ff84464de785",\n  matchRate: 99.66,\n  expectedFees: 12090955,\n  expectedWeight: 3991988\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["000000000000025a66f30a181e438b9f65ef33cec3014b7a4ff4c7578289cd6e"],response:'{\n  hash: "000000000000025a66f30a181e438b9f65ef33cec3014b7a4ff4c7578289cd6e",\n  matchRate: 100,\n  expectedFees: 579169,\n  expectedWeight: 12997\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["000000c1491d7d4229d4bf07e0dcaa7e396767b45be388e1174c7439a9490121"],response:'{\n  hash: "000000c1491d7d4229d4bf07e0dcaa7e396767b45be388e1174c7439a9490121",\n  matchRate: 100,\n  expectedFees: 80520,\n  expectedWeight: 16487\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-blocks-audit-scores",title:"GET Blocks Audit Scores",description:{default:"Returns blocks audit score for the past 16 blocks. If <code>:startHeight</code> is specified, the past 15 blocks before (and including) <code>:startHeight</code> are returned. Available fields: <code>hash</code>, <code>matchRate</code>, <code>expectedFees</code>, and <code>expectedWeight</code>."},urlString:["/v1/mining/blocks/audit/scores/:startHeight"],showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/mining/blocks/audit/scores/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["820000"],response:'[\n  {\n    hash: "000000000000000000034cd3689507da0386d3d1790dd56f2e6945e650e02c74",\n    matchRate: 100,\n    expectedFees: 225828975,\n    expectedWeight: 3991756\n  },\n  {\n    hash: "00000000000000000000b3ad97907e99c54e6b9145a8f77842e59d9c0c8377cf",\n    matchRate: 100,\n    expectedFees: 295107022,\n    expectedWeight: 3991752\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["2566570"],response:'[\n  {\n    hash: "00000000000002e7e96e7b5ee04a5fbb3ef9575a9f4a99effb32a8a89d9d2f19",\n    matchRate: 100,\n    expectedFees: 964677,\n    expectedWeight: 24959\n  },\n  {\n    hash: "00000000000003bd3962806d0e06d9982eb2e06aeba912687b2bac3668db32aa",\n    matchRate: 100,\n    expectedFees: 631200,\n    expectedWeight: 15516\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["175504"],response:'[\n  {\n    hash: "00000012d54289925efc151f2e111e0775e80c3b6bb4b0dcd3ff01dec4bbc5d0",\n    matchRate: 100,\n    expectedFees: 4767,\n    expectedWeight: 2524\n  },\n  {\n    hash: "00000031e269cf0b567260b01ae11453175f4598fdb4f1908c5e2f4265b9d93a",\n    matchRate: 100,\n    expectedFees: 9090,\n    expectedWeight: 1851\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mining",httpRequestMethod:"GET",fragment:"get-block-audit-summary",title:"GET Block Audit Summary",description:{default:"Returns the block audit summary for the specified <code>:blockHash</code>. Available fields: <code>height</code>, <code>id</code>, <code>timestamp</code>, <code>template</code>, <code>missingTxs</code>, <code>addedTxs</code>, <code>freshTxs</code>, <code>sigopTxs</code>, <code>fullrbfTxs</code>, <code>acceleratedTxs</code>, <code>matchRate</code>, <code>expectedFees</code>, and <code>expectedWeight</code>."},urlString:["/v1/block/:blockHash/audit-summary"],showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/block/%{1}/audit-summary",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["00000000000000000000f218ceda7a5d9c289040b9c3f05ef9f7c2f4930e0123"],response:'{\n  height: 822418,\n  id: "00000000000000000000f218ceda7a5d9c289040b9c3f05ef9f7c2f4930e0123",\n  timestamp: 1703262962,\n  template: [\n    {\n      txid: "1de119e4fe0fb92378de74a59fec337c39d505bbc0d04d20d151cc3fb7a91bf0",\n      fee: 92000,\n      vsize: 140.25,\n      value: 354245800,\n      rate: 655.9714795008913,\n      flags: 1099511631881\n    },\n    ...\n  ],\n  missingTxs: [],\n  addedTxs: [\n    "3036565d1af6c5b14876a255cdf06214aa350e62154d1ce8619c8e933d0526f8",\n    "aaa9d8e8f1de712574182a618b4d608f96f39bfc55e296d2e5904561cdef2e77",\n    ...\n  ],\n  freshTxs: [\n    "8ede292d8f0319cbe79fff9fd47564cd7f78fad74d7c506d2b157399ff41d904"\n  ],\n  sigopTxs: [],\n  fullrbfTxs: [\n    "271e7792910a4ea134c02c03c9d7477b32a8531a5dd92fbc4dbf3ca70614fcce",\n    "634a5b2de393f0f5b4eeb335bee75c1779b1f2308a07e86cafb95894aa4734d0",\n    ...\n  ],\n  acceleratedTxs: [],\n  matchRate: 100,\n  expectedFees: 169464627,\n  expectedWeight: 3991702\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["000000000000007cfba94e051326b3546c968a188a7e12e340a78cefc586bfe3"],response:'{\n  height: 2566708,\n  id: "000000000000007cfba94e051326b3546c968a188a7e12e340a78cefc586bfe3",\n  timestamp: 1703684826,\n  template: [\n    {\n      txid: "6556caa3c6bff537f04837a6f7182dd7a253f31a46de4f21dec9584720156d35",\n      fee: 109707,\n      vsize: 264.75,\n      value: 456855,\n      rate: 414.37960339943345,\n      flags: 9895621445642\n    },\n    {\n      txid: "53b7743b8cfa0108dbcdc7c2f5e661b9d8f56216845a439449d7f9dfc466b147",\n      fee: 74640,\n      vsize: 215.5,\n      value: 19063915,\n      rate: 348.5338491295938,\n      flags: 1099528491017\n    },\n    ...\n  ],\n  missingTxs: [\n    "8f2eae756119e43054ce1014a06e81d612113794d8b519e6ff393d7e0023396a",\n    "012b44b0fc0fddc549a056c85850f03a83446c843504c588cd5829873b30f5a9",\n    ...\n  ],\n  addedTxs: [],\n  freshTxs: [\n    "af36a8b88f6c19f997614dfc8a41395190eaf496a49e8db393dacb770999abd5",\n    "fdfa272c8fe069573b964ddad605d748d8c737e94dfcd09bddaae0ee0a2445df",\n    ...\n  ],\n  sigopTxs: [],\n  fullrbfTxs: [],\n  acceleratedTxs: [],\n  matchRate: 86.96,\n  expectedFees: 1541639,\n  expectedWeight: 26425\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["0000008acf5177d07f1d648f4d54f26095936a5d29a0a6145dd75a0415e63c0f"],response:'{\n  height: 175519,\n  id: "0000008acf5177d07f1d648f4d54f26095936a5d29a0a6145dd75a0415e63c0f",\n  timestamp: 1703682844,\n  template: [\n    {\n      txid: "f95b38742c483b81dc4ff49a803bae7625f1596ec5756c944d7586dfe8b38250",\n      fee: 3766,\n      vsize: 172.25,\n      value: 115117171776,\n      rate: 21.86357039187228,\n      flags: 1099528425481\n    },\n    {\n      txid: "8665c4d05732c930c2037bc0220e4ab9b1b64ce3302363ff7d118827c7347b52",\n      fee: 3766,\n      vsize: 172.25,\n      value: 115116509429,\n      rate: 21.86357039187228,\n      flags: 1099528425481\n    },\n    ...\n  ],\n  missingTxs: [],\n  addedTxs: [],\n  freshTxs: [],\n  sigopTxs: [],\n  fullrbfTxs: [],\n  acceleratedTxs: [],\n  matchRate: 100,\n  expectedFees: 10494,\n  expectedWeight: 6582\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"category",category:"fees",fragment:"fees",title:"Fees",showConditions:d.concat(r)},{type:"endpoint",category:"fees",httpRequestMethod:"GET",fragment:"get-mempool-blocks-fees",title:"GET Mempool Blocks Fees",description:{default:"Returns current mempool as projected blocks."},urlString:"/v1/fees/mempool-blocks",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/v1/fees/mempool-blocks",commonJS:'\n        const { %{0}: { fees } } = mempoolJS();\n\n        const feesMempoolBlocks = await fees.getFeesMempoolBlocks();\n\n        document.getElementById("result").textContent = JSON.stringify(feesMempoolBlocks, undefined, 2);\n        ',esModule:"\n  const { %{0}: { fees } } = mempoolJS();\n\n  const feesMempoolBlocks = await fees.getFeesMempoolBlocks();\n  console.log(feesMempoolBlocks);\n          "},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:"[\n  {\n    blockSize: 873046,\n    blockVSize: 746096.5,\n    nTx: 863,\n    totalFees: 8875608,\n    medianFee: 10.79646017699115,\n    feeRange: [\n      1,\n      2.4242424242424243,\n      8.107816711590296,\n      10.148014440433213,\n      11.053311793214863,\n      12.041811846689896,\n      14.930957683741648,\n      302.11480362537765\n    ]\n  }\n]"},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:"[\n  {\n    blockSize: 2871,\n    blockVSize: 2377.5,\n    nTx: 11,\n    totalFees: 3499,\n    medianFee: 1.1799410029498525,\n    feeRange: [\n      1.00374531835206,\n      1.00374531835206,\n      1.0046860356138707,\n      1.1799410029498525,\n      1.183431952662722,\n      1.3274336283185841,\n      1.3995037220843674,\n      5.0271041369472185\n    ]\n  }\n]"},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:"[\n  {\n    blockSize: 16157,\n    blockVSize: 10338.5,\n    nTx: 75,\n    totalFees: 13493,\n    medianFee: 1.304812834224599,\n    feeRange: [\n      1.304812834224599,\n      1.304812834224599,\n      1.304812834224599,\n      1.304812834224599,\n      1.304812834224599,\n      1.304812834224599,\n      1.304812834224599,\n      1.3123359580052494\n    ]\n  }\n]"},codeSampleLiquid:{esModule:[],commonJS:[],curl:[],response:"[\n  {\n    blockSize: 5011,\n    blockVSize: 1530.25,\n    nTx: 1,\n    totalFees: 288,\n    medianFee: 0.1882045417415455,\n    feeRange: [\n      0.1882045417415455,\n      0.1882045417415455,\n      0.1882045417415455,\n      0.1882045417415455,\n      0.1882045417415455,\n      0.1882045417415455,\n      0.1882045417415455,\n      0.1882045417415455\n    ]\n  }\n]"},codeSampleLiquidTestnet:{esModule:[],commonJS:[],curl:[],response:"[\n  {\n    blockSize: 23782,\n    blockVSize: 20457.25,\n    nTx: 3,\n    totalFees: 2089,\n    medianFee: 0.10163043478260869,\n    feeRange: [\n      0.1,\n      0.1,\n      0.1,\n      0.10163043478260869,\n      0.10163043478260869,\n      0.11385199240986717,\n      0.11385199240986717,\n      0.11385199240986717\n    ]\n  }\n]"}}}},{type:"endpoint",category:"fees",httpRequestMethod:"GET",fragment:"get-recommended-fees",title:"GET Recommended Fees",description:{default:"Returns our currently suggested fees for new transactions."},urlString:"/v1/fees/recommended",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/v1/fees/recommended",commonJS:'\n        const { %{0}: { fees } } = mempoolJS();\n\n        const feesRecommended = await fees.getFeesRecommended();\n\n        document.getElementById("result").textContent = JSON.stringify(feesRecommended, undefined, 2);\n        ',esModule:"\n  const { %{0}: { fees } } = mempoolJS();\n\n  const feesRecommended = await fees.getFeesRecommended();\n  console.log(feesRecommended);\n          "},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:"{\n  fastestFee: 1,\n  halfHourFee: 1,\n  hourFee: 1,\n  economyFee: 1,\n  minimumFee: 1\n}"},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:"{\n  fastestFee: 1,\n  halfHourFee: 1,\n  hourFee: 1,\n  economyFee: 1,\n  minimumFee: 1\n}"},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:"{\n  fastestFee: 1,\n  halfHourFee: 1,\n  hourFee: 1,\n  economyFee: 1,\n  minimumFee: 1\n}"},codeSampleLiquid:{esModule:[],commonJS:[],curl:[],response:"{\n  fastestFee: 0.1,\n  halfHourFee: 0.1,\n  hourFee: 0.1,\n  economyFee: 0.1,\n  minimumFee: 0.1\n}"},codeSampleLiquidTestnet:{esModule:[],commonJS:[],curl:[],response:"{\n  fastestFee: 0.1,\n  halfHourFee: 0.1,\n  hourFee: 0.1,\n  economyFee: 0.1,\n  minimumFee: 0.1\n}"}}}},{type:"category",category:"mempool",fragment:"mempool",title:"Mempool",showConditions:d.concat(r)},{type:"endpoint",category:"mempool",httpRequestMethod:"GET",fragment:"get-mempool",title:"GET Mempool",description:{default:"Returns current mempool backlog statistics."},urlString:"/mempool",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/mempool",commonJS:'\n        const { %{0}: { mempool } } = mempoolJS();\n\n        const getMempool = await mempool.getMempool();\n\n        document.getElementById("result").textContent = JSON.stringify(getMempool, undefined, 2);\n        ',esModule:"\n  const { %{0}: { mempool } } = mempoolJS();\n\n  const getMempool = await mempool.getMempool();\n  console.log(getMempool);\n          "},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:"{\n  count: 3169,\n  vsize: 1891542,\n  total_fee: 20317481,\n  fee_histogram: []\n}"},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:"{\n  count: 16,\n  vsize: 2692,\n  total_fee: 46318,\n  fee_histogram: [\n    [\n      1.0071429,\n      2692\n    ]\n  ]\n}"},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:"{\n  count: 58,\n  vsize: 8008,\n  total_fee: 10407,\n  fee_histogram: [\n    [\n      1,\n      8008\n    ]\n  ]\n}"},codeSampleLiquid:{esModule:[],commonJS:[],curl:[],response:"{\n  count: 0,\n  vsize: 0,\n  total_fee: 0,\n  fee_histogram: [ ]\n}"},codeSampleLiquidTestnet:{esModule:[],commonJS:[],curl:[],response:"{\n  count: 3,\n  vsize: 20457,\n  total_fee: 2089,\n  fee_histogram: [\n    [\n      0.09981343,\n      20457\n    ]\n  ]\n}"}}}},{type:"endpoint",category:"mempool",httpRequestMethod:"GET",fragment:"get-mempool-transaction-ids",title:"GET Mempool Transaction IDs",description:{default:"Get the full list of txids in the mempool as an array. The order of the txids is arbitrary and does not match bitcoind."},urlString:"/mempool/txids",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/mempool/txids",commonJS:'\n        const { %{0}: { mempool } } = mempoolJS();\n\n        const getMempoolTxids = await mempool.getMempoolTxids();\n\n        document.getElementById("result").textContent = JSON.stringify(getMempoolTxids, undefined, 2);\n        ',esModule:"\n  const { %{0}: { mempool } } = mempoolJS();\n\n  const getMempoolTxids = await mempool.getMempoolTxids();\n  console.log(getMempoolTxids);\n          "},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'[\n  "65b04c4618999a221e8b66943a17c216172a9c865f49c88b76de81212b24bf01",\n  "4a3ebe804f273b4c7a96e63f6b963e812ef7e6e0e8381c2d662715bcf5bfa846",\n  "1ef9df26fab649183b591d148011ce809756f9cd9e6be3d383e80808b1929724",\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:'[\n  "af04a3e8b7bd49217165435e2717b6ed977cde9c0f6f2a5813c4c39eb53748af",\n  "d4c4989617e9af40518f7846f98e98e4a187bc29fb95542c9aa469af159c61e4",\n  "c4c0630b18e910be0a70ebd5d4897b379168b0f357a6536188a28e38d2cf8b43",\n  "c6c9c44ca17ff8c1ebfe27978e57277be6098f0fb5129840370c013fe503db24",\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:'[\n  "ddd40341cfa1268801407e9ff43da020cab03f8bf1b422239da0652a4496367e",\n  "7fe571957cf61c41598e2acb54211be32cd13df2b71b1612af1d860bbfb5ee9f",\n  "b7cd3be4de533db392bb5bd8aaedd8b25607514502c60c0c6d54358931a6d95f",\n  "7786de8ee4fe0b11410658866800b90e5a798e3721dd6031c6b5094474bd80c1",\n  ...\n]'},codeSampleLiquid:{esModule:[],commonJS:[],curl:[],response:'[\n  "f3f3acdaa6a823efcbbbbcc607ec4d1c2c40d618135ec09d8ed96e4d9b37db38"\n]'},codeSampleLiquidTestnet:{esModule:[],commonJS:[],curl:[],response:'[\n  "b644716cb1aeb3e6e9fb4258b0b95dfad8b8e4cd1ec8649bf1116a500cc870e5",\n  "3ab8bc068ee05c1114647dc5196b3b954b00e5af3b03d470d1ef8a8953737357",\n  "dfbe66e6e71e775c9529a822c14286de0ee1066c2760a53552615d05e17006f3"\n]'}}}},{type:"endpoint",category:"mempool",httpRequestMethod:"GET",fragment:"get-mempool-recent",title:"GET Mempool Recent",description:{default:"Get a list of the last 10 transactions to enter the mempool. Each transaction object contains simplified overview data, with the following fields: <code>txid</code>, <code>fee</code>, <code>vsize</code>, and <code>value</code>."},urlString:"/mempool/recent",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/mempool/recent",commonJS:'\n        const { %{0}: { mempool } } = mempoolJS();\n\n        const getMempoolRecent = await mempool.getMempoolRecent();\n\n        document.getElementById("result").textContent = JSON.stringify(getMempoolRecent, undefined, 2);\n        ',esModule:"\n  const { %{0}: { mempool } } = mempoolJS();\n\n  const getMempoolRecent = await mempool.getMempoolRecent();\n  console.log(getMempoolRecent);\n          "},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    txid: "4b93c138293a7e3dfea6f0a63d944890b5ba571b03cc22d8c66995535e90dce8",\n    fee: 18277,\n    vsize: 2585,\n    value: 4972029\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    txid: "1fc5098fe3378828a890fa5144883cdd1411d9cdbb1af365c20e72503b11dc81",\n    fee: 221,\n    vsize: 201,\n    value: 944960\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    txid: "18dcbd5405f65f583ed32db2f86f84510c07c59ac5321bb90cbd3a3f2963c224",\n    fee: 183,\n    vsize: 140,\n    value: 4369990908\n  },\n  ...\n]'},codeSampleLiquid:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    txid: "06428bf0f6dc6a55e1d800afcd4697d1cdee4debbfaa7fd782d747a80d051c25",\n    fee: 251,\n    vsize: 2515\n  },\n  ...\n]'},codeSampleLiquidTestnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    txid: "814d9d285970dd55ea5b2f06f5d11fb895a2b78d61defbcd489477441e544f95",\n    fee: 376,\n    vsize: 3767\n  },\n  {\n    txid: "e09a8b6bc950458bc77183acf4fd566d1cfd8e7373c4869f877b52e3b02ad9b1",\n    fee: 138,\n    vsize: 1379\n  },\n  ...\n]'}}}},{type:"endpoint",category:"mempool",httpRequestMethod:"GET",fragment:"get-mempool-rbf",title:"GET Mempool RBF Transactions",description:{default:"Returns the list of mempool transactions that are part of a RBF chain."},urlString:"/v1/replacements",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/replacements",commonJS:"",esModule:""},codeSampleMainnet:{curl:[],response:'[\n  {\n    tx: {\n      txid: "1ca4b22006e57b1b13f5cc89a41cf7c9e99fe225aabf407251e4fe0268f22d93",\n      fee: 14983,\n      vsize: 141.5,\n      value: 343934,\n      rate: 105.886925795053,\n      rbf: true,\n      fullRbf: false\n    },\n    time: 1703331467,\n    fullRbf: false,\n    replaces: [\n      {\n        tx: {\n          txid: "9f8e30674af641bb153a35254d539468e1d847b16bbdc13ce23b5a970b0b11cf",\n          fee: 13664,\n          vsize: 141.25,\n          value: 345253,\n          rate: 96.7362831858407,\n          rbf: true\n        },\n        time: 1703331398,\n        interval: 69,\n        fullRbf: false,\n        replaces: []\n      }\n    ]\n  },\n  ...\n]'},codeSampleTestnet:{curl:[],response:'[\n  {\n    tx: {\n      txid: "7766e3f008011b776905f96fcad9d4a7b75d1b368d1e77db2901254f1fa8357d",\n      fee: 9101,\n      vsize: 317,\n      value: 147706698,\n      rate: 28.709779179810724,\n      rbf: true,\n      fullRbf: false\n    },\n    time: 1703331325,\n    fullRbf: false,\n    replaces: [\n      {\n        tx: {\n          txid: "43055f6e5750c6aa0c2214e59e99f367398d96bde935e7666c3e648d249a4e40",\n          fee: 7000,\n          vsize: 317,\n          value: 147708799,\n          rate: 22.082018927444796,\n          rbf: true\n        },\n        time: 1703331154,\n        interval: 171,\n        fullRbf: false,\n        replaces: []\n      }\n    ]\n  },\n  ...\n]'},codeSampleSignet:{curl:[],response:'[\n  {\n    tx: {\n      txid: "13985a5717a1ea54ce720cd6b70421b1667061be491a6799acf6dea01c551248",\n      fee: 5040,\n      vsize: 215.5,\n      value: 762745,\n      rate: 23.387470997679813,\n      rbf: true,\n      fullRbf: false,\n      mined: true\n    },\n    time: 1703316271,\n    fullRbf: false,\n    replaces: [\n      {\n        tx: {\n          txid: "eac5ec8487414c955f4a5d3b2e516c351aec5299f1335f9019a00907962386ce",\n          fee: 4560,\n          vsize: 215.25,\n          value: 763225,\n          rate: 21.18466898954704,\n          rbf: true\n        },\n        time: 1703316270,\n        interval: 1,\n        fullRbf: false,\n        replaces: []\n      }\n    ],\n    mined: true\n  }\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"mempool",httpRequestMethod:"GET",fragment:"get-mempool-fullrbf",title:"GET Mempool Full RBF Transactions",description:{default:"Returns the list of mempool transactions that are part of a Full-RBF chain."},urlString:"/v1/fullrbf/replacements",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/fullrbf/replacements",commonJS:"",esModule:""},codeSampleMainnet:{curl:[],response:'[\n  {\n    tx: {\n      txid: "25e2bfaf0e0821e5cb71f11e460b2f71e1d5a3755015de42544afa5fbad6d443",\n      fee: 24436,\n      vsize: 297.75,\n      value: 273418,\n      rate: 82.0688497061293,\n      rbf: false,\n      fullRbf: true\n    },\n    time: 1703409882,\n    fullRbf: true,\n    replaces: [\n      {\n        tx: {\n          txid: "07d501e8ad4a25f07f3ced0a6102741720f710765e6fdb2eb966ba0df657997a",\n          fee: 24138,\n          vsize: 297.75,\n          value: 273716,\n          rate: 81.06801007556675,\n          rbf: false\n        },\n        time: 1703409853,\n        interval: 29,\n        fullRbf: true,\n        replaces: []\n      }\n    ]\n  },\n  ...\n]'},codeSampleTestnet:{curl:[],response:'[\n  {\n    tx: {\n      txid: "25e2bfaf0e0821e5cb71f11e460b2f71e1d5a3755015de42544afa5fbad6d443",\n      fee: 24436,\n      vsize: 297.75,\n      value: 273418,\n      rate: 82.0688497061293,\n      rbf: false,\n      fullRbf: true\n    },\n    time: 1703409882,\n    fullRbf: true,\n    replaces: [\n      {\n        tx: {\n          txid: "07d501e8ad4a25f07f3ced0a6102741720f710765e6fdb2eb966ba0df657997a",\n          fee: 24138,\n          vsize: 297.75,\n          value: 273716,\n          rate: 81.06801007556675,\n          rbf: false\n        },\n        time: 1703409853,\n        interval: 29,\n        fullRbf: true,\n        replaces: []\n      }\n    ]\n  },\n  ...\n]'},codeSampleSignet:{curl:[],response:'[\n  {\n    tx: {\n      txid: "25e2bfaf0e0821e5cb71f11e460b2f71e1d5a3755015de42544afa5fbad6d443",\n      fee: 24436,\n      vsize: 297.75,\n      value: 273418,\n      rate: 82.0688497061293,\n      rbf: false,\n      fullRbf: true\n    },\n    time: 1703409882,\n    fullRbf: true,\n    replaces: [\n      {\n        tx: {\n          txid: "07d501e8ad4a25f07f3ced0a6102741720f710765e6fdb2eb966ba0df657997a",\n          fee: 24138,\n          vsize: 297.75,\n          value: 273716,\n          rate: 81.06801007556675,\n          rbf: false\n        },\n        time: 1703409853,\n        interval: 29,\n        fullRbf: true,\n        replaces: []\n      }\n    ]\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"category",category:"transactions",fragment:"transactions",title:"Transactions",showConditions:d.concat(r)},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-cpfp",title:"GET Children Pay for Parent",description:{default:"Returns the ancestors and the best descendant fees for a transaction."},urlString:"/v1/cpfp",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/v1/cpfp/%{1}",commonJS:"\n        const { %{0}: { fees } } = mempoolJS();\n\n        const txid = 'txid';\n        const feesCPFP = await fees.getCPFP({ txid });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(feesCPFP, undefined, 2);\n        ",esModule:"\n  const { %{0}: { fees } } = mempoolJS();\n\n  const txid = 'txid';\n  const feesCPFP = await fees.getCPFP({ txid });\n  console.log(feesCPFP);\n          "},codeSampleMainnet:{esModule:["txid"],commonJS:["txid"],curl:["txid"],response:""},codeSampleTestnet:{esModule:["txid"],commonJS:["txid"],curl:["txid"],response:""},codeSampleSignet:{esModule:["txid"],commonJS:["txid"],curl:["txid"],response:""},codeSampleLiquid:{esModule:["txid"],commonJS:["txid"],curl:["txid"],response:""},codeSampleLiquidTestnet:{esModule:["txid"],commonJS:["txid"],curl:["txid"],response:""}}}},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-transaction",title:"GET Transaction",description:{default:"Returns details about a transaction. Available fields: <code>txid</code>, <code>version</code>, <code>locktime</code>, <code>size</code>, <code>weight</code>, <code>fee</code>, <code>vin</code>, <code>vout</code>, and <code>status</code>."},urlString:"/tx/:txid",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/tx/%{1}",commonJS:"\n        const { %{0}: { transactions } } = mempoolJS();\n\n        const txid = '%{1}';\n        const tx = await transactions.getTx({ txid });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(tx, undefined, 2);\n        ",esModule:"\n  const { %{0}: { transactions } } = mempoolJS();\n\n  const txid = '%{1}';\n  const tx = await transactions.getTx({ txid });\n  console.log(tx);\n          "},codeSampleMainnet:{esModule:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],commonJS:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],curl:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],response:'{\n  txid: "15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521",\n  version: 1,\n  locktime: 0,\n  vin: [],\n  vout: [],\n  size: 884,\n  weight: 3536,\n  fee: 20000,\n  status: {\n    confirmed: true,\n    block_height: 363348,\n    block_hash: "0000000000000000139385d7aa78ffb45469e0c715b8d6ea6cb2ffa98acc7171",\n    block_time: 1435754650\n  }\n}'},codeSampleTestnet:{esModule:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],commonJS:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],curl:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],response:'{\n  txid: "eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d",\n  version: 2,\n  locktime: 2091198,\n  vin: [],\n  vout: [],\n  size: 222,\n  weight: 561,\n  fee: 16332,\n  status: {\n    confirmed: true,\n    block_height: 2091199,\n    block_hash: "000000000000004d36632fda8180ff16855d606e5515aab0750d9d4fe55fe7d6",\n    block_time: 1630648992\n  }\n}'},codeSampleSignet:{esModule:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],commonJS:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],curl:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],response:'{\n  txid: "fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025",\n  version: 2,\n  locktime: 0,\n  vin: [],\n  vout: [],\n  size: 99,\n  weight: 381,\n  fee: 125,\n  status: {\n    confirmed: true,\n    block_height: 53788,\n    block_hash: "0000012a49f15fdbec49f647800d26dabc4027ade9739f398f618d167128b225",\n    block_time: 1630648988\n  }\n}'},codeSampleLiquid:{esModule:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],commonJS:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],curl:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],response:'{\n  txid: "801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a",\n  version: 2,\n  locktime: 1472364,\n  vin: [],\n  vout: [],\n  size: 4599,\n  weight: 5325,\n  fee: 529,\n  status: {\n    confirmed: true,\n    block_height: 1472366,\n    block_hash: "8422f44e62d7349f8c54c3d353290a8edea1532898e6dc832902bf7ef396e7c1",\n    block_time: 1630649218\n  }\n}'},codeSampleLiquidTestnet:{esModule:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],commonJS:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],curl:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],response:'{\n  txid: "59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4",\n  version: 2,\n  locktime: 168763,\n  vin: [],\n  vout: [],\n  size: 13557,\n  weight: 15069,\n  fee: 376,\n  status: {\n    confirmed: true,\n    block_height: 168765,\n    block_hash: "05a51089255650a16c17b4b3f3977376bc7ebe90a35584578f12916c3eaba59e",\n    block_time: 1642000444\n  }\n}'}}}},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-transaction-hex",title:"GET Transaction Hex",description:{default:"Returns a transaction serialized as hex."},urlString:"/tx/:txid/hex",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/tx/%{1}/hex",commonJS:"\n        const { %{0}: { transactions } } = mempoolJS();\n\n        const txid = '%{1}';\n        const txHex = await transactions.getTxHex({ txid });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(txHex, undefined, 2);\n        ",esModule:"\n  const { %{0}: { transactions } } = mempoolJS();\n\n  const txid = '%{1}';\n  const txHex = await transactions.getTxHex({ txid });\n  console.log(txHex);\n          "},codeSampleMainnet:{esModule:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],commonJS:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],curl:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],response:"010000000536a007284bd52ee826680a7f43536472f1bcce1e76cd76b826b88c5884eddf1f0c0000006b483045022100bcdf40fb3b5ebfa2c158ac8d1a41c03eb3dba4e180b00e81836bafd56d946efd022005cc40e35022b614275c1e485c409599667cbd41f6e5d78f421cb260a020a24f01210255ea3f53ce3ed1ad2c08dfc23b211b15b852afb819492a9a0f3f99e5747cb5f0ffffffffee08cb90c4e84dd7952b2cfad81ed3b088f5b..."},codeSampleTestnet:{esModule:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],commonJS:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],curl:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],response:"0200000000010146c398e70cceaf9d8f734e603bc53e4c4c0605ab46cb1b5807a62c90f5aed50d0100000000feffffff023c0fc10c010000001600145033f65b590f2065fe55414213f1d25ab20b6c4f487d1700000000001600144b812d5ef41fc433654d186463d41b458821ff740247304402202438dc18801919baa64eb18f7e925a..."},codeSampleSignet:{esModule:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],commonJS:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],curl:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],response:"02000000000101b7913f140f19850975352064a7ccfd7e96e1ed9a847c463309839a37c9d01e530000000000ffffffff017d65a61d000000002200204ae81572f06e1b88fd5ced7a1a000945432e83e1551e6f721ee9c00b8cc3326001015100000000"},codeSampleLiquid:{esModule:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],commonJS:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],curl:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],response:"020000000101730fb6b65e115f4ec15690b3539311becd3ef8d1ed4c2b7e53ec3934b4254f65010000001716001436b178e63ed841263f7b82a97d2e783791394432feffffff020b5ff1f5c8059fc270bdeb196c5f38e3da2de8fd9034c34427b70fa66d2f388efe083745b65e4c6e029b020d74df709c5842737c4d50873ef4ec8e0579a3c41f09130274bf768af8b1c462b1e5b7ffb1bb496a019a0ed090e4ce26283a946542280c6f17a..."},codeSampleLiquidTestnet:{esModule:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],commonJS:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],curl:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],response:"020000000102fa567669f73a314138aa6dbe74e3935612895df273d20ccbbedbecd44a04d3ce0000000000fdffffff8412fed07b8316dd4304df90af6f20292d3b2950133711c0ee43eb94fe12cc4f0100000000fdffffff040b801035010192095b8d9316f28450e98a85c915994c3f80ecc493adf505d73e9609a51e48bc0f35e34f88c482654d659fa779dcbf0457dc71053f3edcf76bd3667f03821ffcc4fc4ae5c2668685fec678e4..."}}}},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-transaction-merkleblock-proof",title:"GET Transaction Merkleblock Proof",description:{default:"Returns a merkle inclusion proof for the transaction using <a href='https://bitcoin.org/en/glossary/merkle-block'>bitcoind's merkleblock</a> format."},urlString:"/tx/:txid/merkleblock-proof",showConditions:d,showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/tx/%{1}/merkleblock-proof",commonJS:"\n        const { %{0}: { transactions } } = mempoolJS();\n\n        const txid = '%{1}';\n        const txMerkleBlockProof = await transactions.getTxMerkleBlockProof({ txid });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(txMerkleBlockProof, undefined, 2);\n        ",esModule:"\n  const { %{0}: { transactions } } = mempoolJS();\n\n  const txid = '%{1}';\n  const txMerkleBlockProof = await transactions.getTxMerkleBlockProof({ txid });\n  console.log(txMerkleBlockProof);\n          "},codeSampleMainnet:{esModule:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],commonJS:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],curl:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],response:"0300000058f6dd09ac5aea942c01d12e75b351e73f4304cc442741000000000000000000ef0c2fa8517414b742094a020da7eba891b47d660ef66f126ad01e5be99a2fd09ae093558e411618c14240df820700000ce4d15e17594f257b22d1ddf47d07b3b88779a8374fcd515ad883d79726c6027da6abfcbc1341a049b30277d3bf14e4663..."},codeSampleTestnet:{esModule:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],commonJS:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],curl:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],response:"0000602002bf77bbb098f90f149430c314e71ef4e2671ea5e04a2503e0000000000000000406ffb54f2925360aae81bd3199f456928bbe6ae83a877902da9d9ffb08215da0ba3161ffff001a545a850bb80000000906e0c62f68fdf4865a46889e2e12d66f03cc537225d612aa77b08a38936b4d435d73544598d93174314d75e5833..."},codeSampleSignet:{esModule:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],commonJS:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],curl:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],response:"00000020d356e0a14120d45653120a7bd53280ffce2aa2ced301682a1f2867687f000000298ef149a1675866dbdde315b22c24c63fd7670fdc5b86b588007fa187fa85089cba31619356011eaedd8800180000000656e9b938241cb350316cd9155167f3bce7370aa1095143c304ef7a44da4984e02550c48f3e01648dd65f5e3e290432c..."},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-transaction-merkle-proof",title:"GET Transaction Merkle Proof",description:{default:"Returns a merkle inclusion proof for the transaction using <a href='https://electrumx.readthedocs.io/en/latest/protocol-methods.html#blockchain-transaction-get-merkle'>Electrum's blockchain.transaction.get_merkle format."},urlString:"/tx/:txid/merkle-proof",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/tx/%{1}/merkle-proof",commonJS:"\n        const { %{0}: { transactions } } = mempoolJS();\n\n        const txid = '%{1}';\n        const txMerkleProof = await transactions.getTxMerkleProof({ txid });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(txMerkleProof, undefined, 2);\n        ",esModule:"\n  const { %{0}: { transactions } } = mempoolJS();\n\n  const txid = '%{1}';\n  const txMerkleProof = await transactions.getTxMerkleProof({ txid });\n  console.log(txMerkleProof);\n          "},codeSampleMainnet:{esModule:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],commonJS:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],curl:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],response:'{\n  block_height: 363348,\n  merkle: [\n    "acf931fe8980c6165b32fe7a8d25f779af7870a638599db1977d5309e24d2478",\n    "ee25997c2520236892c6a67402650e6b721899869dcf6715294e98c0b45623f9",\n    "790889ac7c0f7727715a7c1f1e8b05b407c4be3bd304f88c8b5b05ed4c0c24b7",\n    "facfd99cc4cfe45e66601b37a9637e17fb2a69947b1f8dc3118ed7a50ba7c901",\n    "8c871dd0b7915a114f274c354d8b6c12c689b99851edc55d29811449a6792ab7",\n    "eb4d9605966b26cfa3bf69b1afebe375d3d6aadaa7f2899d48899b6bd2fd6a43",\n    "daa1dc59f22a8601b489fc8a89da78bc35415291c62c185e711b8eef341e6e70",\n    "102907c1b95874e2893c6f7f06b45a3d52455d3bb17796e761df75aeda6aa065",\n    "baeede9b8e022bb98b63cb765ba5ca3e66e414bfd37702b349a04113bcfcaba6",\n    "b6f07be94b55144588b33ff39fb8a08004baa03eb7ff121e1847d715d0da6590",\n    "7d02c62697d783d85a51cd4f37a87987b8b3077df4ddd1227b254f59175ed1e4"\n  ],\n  pos: 1465\n}'},codeSampleTestnet:{esModule:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],commonJS:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],curl:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],response:'{\n  block_height: 2091199,\n  merkle: [\n    "434d6b93388ab077aa12d6257253cc036fd6122e9e88465a86f4fd682fc6e006",\n    "bd9af28e56cf6731e78ee1503a65d9cc9b15c148daa474e71e085176f48996ac",\n    "605f6f83423ef3b86623927ef2d9dcb0f8d9e40a8132217c2fa0910b84488ec7",\n    "10b7ef06ef0756823dbf39dea717be397e7ccb49bbefc5cfc45e6f9d58793baf",\n    "19183ceae11796a9b1d0893e0561870bbce4d060c9547b1e91ad8b34eb3d5001",\n    "1b16723739522955422b4286b4d8620d2a704b6997e6bbd809d151b8d8d64611",\n    "6f8496469b19dd35871684332dfd3fc0205d83d2c58c44ebdae068542bc951f6",\n    "e0d2733bd7bce4e5690b71bc8f7cedb1edbc49a5ff85c3678ecdec894ea1c023"\n  ],\n  pos: 1\n}'},codeSampleSignet:{esModule:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],commonJS:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],curl:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],response:'{\n  block_height: 53788,\n  merkle: [\n    "e08449da447aef04c3435109a10a37e7bcf3675115d96c3150b31c2438b9e956",\n    "027699486d6cc71669bbc8168632101ed95266dcd02fa8b757830d570ef54d15",\n    "62458b115b3db7e9dafecb37de1fcb985891bc77a323018811b6d0392e3705a6",\n    "3a32287eccca335a3dac6aede77855a78faed4060d16bb89517da9816a763cb4",\n    "76a86eb801f1884b99389af3cd41a7994679c3f93c53f9fcf0505ab1340b329f"\n  ],\n  pos: 1\n}'},codeSampleLiquid:{esModule:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],commonJS:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],curl:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],response:'{\n  block_height: 1472366,\n  merkle: [\n    "ce1903e0a8a5e17c6267cf3397d42011611eb26aa7b65fd73b9851b71da3fc66",\n    "377158243ad98ae874cc624e39f7da10d7072e2cbb5229c33cc0bee0bfb6eb4e"\n  ],\n  pos: 1\n}'},codeSampleLiquidTestnet:{esModule:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],commonJS:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],curl:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],response:'{\n  block_height: 168765,\n  merkle: [\n    "1dbe7041197b78f73c0d4a3810c47080c252bc928f041b787acaad3fa76ba7a0"\n  ],\n  pos: 1\n}'}}}},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-transaction-outspend",title:"GET Transaction Outspend",description:{default:"Returns the spending status of a transaction output. Available fields: <code>spent</code> (boolean), <code>txid</code> (optional), <code>vin</code> (optional), and <code>status</code> (optional, the status of the spending tx)."},urlString:"/tx/:txid/outspend/:vout",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/tx/%{1}/outspend/%{2}",commonJS:"\n        const { %{0}: { transactions } } = mempoolJS();\n\n        const txid = '%{1}';\n        const txOutspend = await transactions.getTxOutspend({\n          txid,\n          vout: %{2},\n        });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(txOutspend, undefined, 2);\n        ",esModule:"\n  const { %{0}: { transactions } } = mempoolJS();\n\n  const txid = '%{1}';\n  const txOutspend = await transactions.getTxOutspend({\n    txid,\n    vout: %{2},\n  });\n  console.log(txOutspend);\n          "},codeSampleMainnet:{esModule:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521","3"],commonJS:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521","3"],curl:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521","3"],response:'{\n  spent: true,\n  txid: "2a1b8ec06d68096911da82b02806c3848c415b0044a0046850c4a97cbffac7b1",\n  vin: 1,\n  status: {\n    confirmed: true,\n    block_height: 363354,\n    block_hash: "000000000000000012e6130dec174ca877bf39ead6e3d04a8ba3b0cd683c1661",\n    block_time: 1435758032\n  }\n}'},codeSampleTestnet:{esModule:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d","0"],commonJS:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d","0"],curl:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d","0"],response:'{\n  spent: true,\n  txid: "37e867526abb7cde3f64f86f60b42bee1f989aa8514730ae2e741dd05bbc286b",\n  vin: 0,\n  status: {\n    confirmed: true,\n    block_height: 2091199,\n    block_hash: "000000000000004d36632fda8180ff16855d606e5515aab0750d9d4fe55fe7d6",\n    block_time: 1630648992\n  }\n}'},codeSampleSignet:{esModule:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025","0"],commonJS:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025","0"],curl:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025","0"],response:'{\n  spent: true,\n  txid: "ad9cb0f6770219f0a2325d77466d30ff2ddd18b0f7f68b1deb547c4b3b972623",\n  vin: 0,\n  status: {\n    confirmed: true,\n    block_height: 53789,\n    block_hash: "000000372e6b34e56866b4e4c75a372454e956bc42f6760b1b119bfa5ce58223",\n    block_time: 1630649351\n  }\n}'},codeSampleLiquid:{esModule:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a","0"],commonJS:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a","0"],curl:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a","0"],response:'{\n  spent: true,\n  txid: "c02e132181dfc5f65ea16eadf53b346915b9f3937179c49e209b995e57c319c2",\n  vin: 0,\n  status: {\n    confirmed: true,\n    block_height: 1472368,\n    block_hash: "a07de4ccbb212ea203c455dde477069fb6ed6120fc96c78402fa9d129efa31ff",\n    block_time: 1630649338\n  }\n}'},codeSampleLiquidTestnet:{esModule:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4","0"],commonJS:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4","0"],curl:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4","0"],response:'{\n  spent: true,\n  txid: "814d9d285970dd55ea5b2f06f5d11fb895a2b78d61defbcd489477441e544f95",\n  vin: 0,\n  status: {\n    confirmed: true,\n    block_height: 168793,\n    block_hash: "3b10cdce761c4a2ec3e1239648c7d034922b34608a66f894e2f707307dae6b18",\n    block_time: 1642002136\n  }\n}'}}}},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-transaction-outspends",title:"GET Transaction Outspends",description:{default:"Returns the spending status of all transaction outputs."},urlString:"/tx/:txid/outspends",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/tx/%{1}/outspends",commonJS:"\n        const { %{0}: { transactions } } = mempoolJS();\n\n        const txid = '%{1}';\n        const txOutspends = await transactions.getTxOutspends({ txid });\n        document.getElementById(\"result\").textContent = JSON.stringify(txOutspends, undefined, 2);\n        ",esModule:"\n  const { %{0}: { transactions } } = mempoolJS();\n\n  const txid = '%{1}';\n  const txOutspends = await transactions.getTxOutspends({ txid });\n\n  console.log(txOutspends);\n          "},codeSampleMainnet:{esModule:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],commonJS:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],curl:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],response:'[\n  {\n    spent: true,\n    txid: "34de8ba520eb846da8831fa47c06eef9b4eb4a2ff6a3271165fd6b9aafc5a20c",\n    vin: 12,\n    status: {\n      confirmed: true,\n      block_height: 363349,\n      block_hash: "000000000000000012ad81b3ea2cb1c4ba115901bd1b41cd05a6a8d736691322",\n      block_time: 1435754897\n    }\n  },\n  ...\n]'},codeSampleTestnet:{esModule:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],commonJS:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],curl:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],response:'[\n  {\n    spent: true,\n    txid: "37e867526abb7cde3f64f86f60b42bee1f989aa8514730ae2e741dd05bbc286b",\n    vin: 0,\n    status: {\n      confirmed: true,\n      block_height: 2091199,\n      block_hash: "000000000000004d36632fda8180ff16855d606e5515aab0750d9d4fe55fe7d6",\n      block_time: 1630648992\n    }\n  },\n  {\n    spent: false\n  }\n]'},codeSampleSignet:{esModule:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],commonJS:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],curl:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],response:'[\n  {\n    spent: true,\n    txid: "ad9cb0f6770219f0a2325d77466d30ff2ddd18b0f7f68b1deb547c4b3b972623",\n    vin: 0,\n    status: {\n      confirmed: true,\n      block_height: 53789,\n      block_hash: "000000372e6b34e56866b4e4c75a372454e956bc42f6760b1b119bfa5ce58223",\n      block_time: 1630649351\n    }\n  }\n]'},codeSampleLiquid:{esModule:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],commonJS:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],curl:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],response:'{\n  spent: true,\n  txid: "c02e132181dfc5f65ea16eadf53b346915b9f3937179c49e209b995e57c319c2",\n  vin: 0,\n  status: {\n    confirmed: true,\n    block_height: 1472368,\n    block_hash: "a07de4ccbb212ea203c455dde477069fb6ed6120fc96c78402fa9d129efa31ff",\n    block_time: 1630649338\n  }\n}'},codeSampleLiquidTestnet:{esModule:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],commonJS:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],curl:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],response:'[\n  {\n    spent: false\n  },\n  {\n    spent: true,\n    txid: "814d9d285970dd55ea5b2f06f5d11fb895a2b78d61defbcd489477441e544f95",\n    vin: 0,\n    status: {\n      confirmed: true,\n      block_height: 168793,\n      block_hash: "3b10cdce761c4a2ec3e1239648c7d034922b34608a66f894e2f707307dae6b18",\n      block_time: 1642002136\n    }\n  },\n  {\n    spent: false\n  },\n  {\n    spent: false\n  }\n]'}}}},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-transaction-raw",title:"GET Transaction Raw",description:{default:"Returns a transaction as binary data."},urlString:"/tx/:txid/raw",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/tx/%{1}/raw",commonJS:"\n        const { %{0}: { transactions } } = mempoolJS();\n\n        const txid = '%{1}';\n        const txRaw = await transactions.getTxRaw({ txid });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(txRaw, undefined, 2);\n        ",esModule:"\n  const { %{0}: { transactions } } = mempoolJS();\n\n  const txid = '%{1}';\n  const txRaw = await transactions.getTxRaw({ txid });\n  console.log(txRaw);\n          "},codeSampleMainnet:{esModule:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],commonJS:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],curl:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],response:""},codeSampleTestnet:{esModule:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],commonJS:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],curl:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],response:""},codeSampleSignet:{esModule:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],commonJS:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],curl:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],response:""},codeSampleLiquid:{esModule:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],commonJS:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],curl:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],response:""},codeSampleLiquidTestnet:{esModule:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],commonJS:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],curl:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],response:""}}}},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-transaction-rbf-timeline",title:"GET Transaction RBF Timeline",description:{default:"Returns the RBF tree timeline of a transaction."},urlString:"v1/tx/:txId/rbf",showConditions:d,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/tx/%{1}/rbf",commonJS:"",esModule:""},codeSampleMainnet:{curl:["2e95ff9094df9f3650e3f2abc189250760162be89a88f9f2f23301c7cb14b8b4"],response:'{\n  replacements: {\n    tx: {\n      txid: "2e95ff9094df9f3650e3f2abc189250760162be89a88f9f2f23301c7cb14b8b4",\n      fee: 1668,\n      vsize: 276.75,\n      value: 14849,\n      rate: 4.824207492795389,\n      rbf: false,\n      fullRbf: true\n    },\n    time: 1703240261,\n    fullRbf: true,\n    replaces: [\n      {\n        tx: {\n          txid: "3f4670463daadffed07d7a1060071b07f7e81a2566eca21d78bb513cbf21c82a",\n          fee: 420,\n          vsize: 208.25,\n          value: 4856,\n          rate: 2.0168067226890756,\n          rbf: false\n        },\n        time: 1702870898,\n        interval: 369363,\n        fullRbf: true,\n        replaces: []\n      }\n      ...\n    ]\n  },\n  replaces: [\n    "3f4670463daadffed07d7a1060071b07f7e81a2566eca21d78bb513cbf21c82a",\n    "92f9b4f719d0ffc9035d3a9767d80c940cecbc656df2243bafd33f52b583ee92"\n  ]\n}'},codeSampleTestnet:{curl:["5faaa30530bee55de8cc896bdf48f803c2274a94bffc2842386bec2a8bf7a813"],response:'{\n  replacements: {\n    tx: {\n      txid: "5faaa30530bee55de8cc896bdf48f803c2274a94bffc2842386bec2a8bf7a813",\n      fee: 9101,\n      vsize: 318,\n      value: 148022607,\n      rate: 28.61949685534591,\n      rbf: true,\n      fullRbf: false,\n      mined: true\n    },\n    time: 1703322610,\n    fullRbf: false,\n    replaces: [\n      {\n        tx: {\n          txid: "06e69641fa889fe9148669ac2904929004e7140087bedaec8c8e4e05aabded52",\n          fee: 7000,\n          vsize: 318,\n          value: 148024708,\n          rate: 22.0125786163522,\n          rbf: true\n        },\n        time: 1703322602,\n        interval: 8,\n        fullRbf: false,\n        replaces: []\n      }\n    ],\n    mined: true\n  },\n  replaces: [\n    "06e69641fa889fe9148669ac2904929004e7140087bedaec8c8e4e05aabded52"\n  ]\n}'},codeSampleSignet:{curl:["13985a5717a1ea54ce720cd6b70421b1667061be491a6799acf6dea01c551248"],response:'{\n  replacements: {\n    tx: {\n      txid: "13985a5717a1ea54ce720cd6b70421b1667061be491a6799acf6dea01c551248",\n      fee: 5040,\n      vsize: 215.5,\n      value: 762745,\n      rate: 23.387470997679813,\n      rbf: true,\n      fullRbf: false,\n      mined: true\n    },\n    time: 1703316272,\n    fullRbf: false,\n    replaces: [\n      {\n        tx: {\n          txid: "eac5ec8487414c955f4a5d3b2e516c351aec5299f1335f9019a00907962386ce",\n          fee: 4560,\n          vsize: 215.25,\n          value: 763225,\n          rate: 21.18466898954704,\n          rbf: true\n        },\n        time: 1703316270,\n        interval: 2,\n        fullRbf: false,\n        replaces: []\n      }\n    ],\n    mined: true\n  },\n  replaces: [\n    "eac5ec8487414c955f4a5d3b2e516c351aec5299f1335f9019a00907962386ce"\n  ]\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-transaction-status",title:"GET Transaction Status",description:{default:"Returns the confirmation status of a transaction. Available fields: <code>confirmed</code> (boolean), <code>block_height</code> (optional), and <code>block_hash</code> (optional)."},urlString:"/tx/:txid/status",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:"/api/tx/%{1}/status",commonJS:"\n        const { %{0}: { transactions } } = mempoolJS();\n\n        const txid = '%{1}';\n        const txStatus = await transactions.getTxStatus({ txid });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(txStatus, undefined, 2);\n        ",esModule:"\n  const { %{0}: { transactions } } = mempoolJS();\n\n  const txid = '%{1}';\n  const txStatus = await transactions.getTxStatus({ txid });\n  console.log(txStatus);\n          "},codeSampleMainnet:{esModule:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],commonJS:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],curl:["15e10745f15593a899cef391191bdd3d7c12412cc4696b7bcb669d0feadc8521"],response:'{\n  confirmed: true,\n  block_height: 363348,\n  block_hash: "0000000000000000139385d7aa78ffb45469e0c715b8d6ea6cb2ffa98acc7171",\n  block_time: 1435754650\n}'},codeSampleTestnet:{esModule:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],commonJS:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],curl:["eefbafa4006e77099db059eebe14687965813283e5754d317431d9984554735d"],response:"{\n  confirmed: false\n}"},codeSampleSignet:{esModule:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],commonJS:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],curl:["fe80c0c2439d41d301f35570018b4239ca3204293e5e5fd68d64013e8fc45025"],response:'{\n  confirmed: true,\n  block_height: 53788,\n  block_hash: "0000012a49f15fdbec49f647800d26dabc4027ade9739f398f618d167128b225",\n  block_time: 1630648988\n}'},codeSampleLiquid:{esModule:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],commonJS:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],curl:["801c8cccdfb1cac41f97d290e00e3e608753bb5b8fbc5ba39f3ab6feef13dd4a"],response:'{\n  confirmed: true,\n  block_height: 1472366,\n  block_hash: "8422f44e62d7349f8c54c3d353290a8edea1532898e6dc832902bf7ef396e7c1",\n  block_time: 1630649218\n}'},codeSampleLiquidTestnet:{esModule:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],commonJS:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],curl:["59dd7a0bce4f3310272ff352402291bc555f141149812d8f573f62e7fdc19cc4"],response:'{\n  confirmed: true,\n  block_height: 168765,\n  block_hash: "05a51089255650a16c17b4b3f3977376bc7ebe90a35584578f12916c3eaba59e",\n  block_time: 1642000444\n}'}}}},{type:"endpoint",category:"transactions",httpRequestMethod:"GET",fragment:"get-transaction-times",title:"GET Transaction Times",description:{default:"Returns the timestamps when a list of unconfirmed transactions was initially observed in the mempool. If a transaction is not found in the mempool or has been mined, the timestamp will be <code>0</code>."},urlString:"/v1/transaction-times",showConditions:d.concat(r),showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/transaction-times?txId[]=%{1}&txId[]=%{2}",commonJS:"",esModule:""},codeSampleMainnet:{curl:["51545ef0ec7f09196e60693b59369a134870985c8a90e5d42655b191de06285e","6086089bd1c56a9c42a39d470cdfa7c12d4b52bf209608b390dfc4943f2d3851"],response:"[1703082129,1702325558]"},codeSampleTestnet:{curl:["25e7a95ebf10ed192ee91741653d8d970ac88f8e0cd6fb14cc6c7145116d3964","1e158327e52acae35de94962e60e53fc70f6b175b0cfc3e2058bed4b895203b4"],response:"[1703267563,1703267322]"},codeSampleSignet:{curl:["8af0c5199acd89621244f2f61107fe5a9c7c7aad54928e8400651d03ca949aeb","08f840f7b0c33c5b0fdadf1666e8a8c206836993d95fc1eeeef39b5ef9de03d0"],response:"[1703267652,1703267696]"},codeSampleLiquid:{curl:["6091498f06a3054f82a0c3e5be0a23030185c658dc3568684b0bccc4e759be11","631212a073aa4ca392e3aeb469d1366ec2ee288988b106e4a6fc8dae8c4d7a9a"],response:"[1703267652,1703267696]"},codeSampleLiquidTestnet:{curl:["fa8d43e47b2c4bbee12fd8bc1c7440028be2da6ac0f1df6ac77c983938c503fb","26b12cd450f8fa8b6a527578db218bf212a60b2d5eb65c168f8eb3be6f5fd991"],response:"[1703268185,1703268209]"}}}},{type:"endpoint",category:"transactions",httpRequestMethod:"POST",fragment:"post-transaction",title:"POST Transaction",description:{default:"Broadcast a raw transaction to the network. The transaction should be provided as hex in the request body. The <code>txid</code> will be returned on success."},urlString:"/api/tx",showConditions:d.concat(r),showJsExamples:f,codeExample:{default:{codeTemplate:{curl:'%{1}" "[[hostname]][[baseNetworkUrl]]/api/tx',commonJS:"\n        const { %{0}: { transactions } } = mempoolJS();\n\n        const txHex = '%{1}';\n\n        const txid = await transactions.postTx({ txHex });\n\n        document.getElementById(\"result\").textContent = JSON.stringify(txid, undefined, 2);\n        ",esModule:"\n  const { %{0}: { transactions } } = mempoolJS();\n\n  const txHex = '%{1}';\n\n  const txid = await transactions.postTx({ txHex });\n  console.log(txid);\n          "},codeSampleMainnet:{esModule:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],commonJS:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],curl:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],response:""},codeSampleTestnet:{esModule:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],commonJS:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],curl:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],response:""},codeSampleSignet:{esModule:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],commonJS:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],curl:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],response:""},codeSampleLiquid:{esModule:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],commonJS:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],curl:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],response:""},codeSampleLiquidTestnet:{esModule:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],commonJS:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],curl:["0200000001fd5b5fcd1cb066c27cfc9fda5428b9be850b81ac440ea51f1ddba2f987189ac1010000008a4730440220686a40e9d2dbffeab4ca1ff66341d06a17806767f12a1fc4f55740a7af24c6b5022049dd3c9a85ac6c51fecd5f4baff7782a518781bbdd94453c8383755e24ba755c01410436d554adf4a3eb03a317c77aa4020a7bba62999df633bba0ea8f83f48b9e01b0861d3b3c796840f982ee6b14c3c4b7ad04fcfcc3774f81bff9aaf52a15751fedfdffffff02416c00000000000017a914bc791b2afdfe1e1b5650864a9297b20d74c61f4787d71d0000000000001976a9140a59837ccd4df25adc31cdad39be6a8d97557ed688ac00000000"],response:""}}}},{type:"category",category:"lightning",fragment:"lightning",title:"Lightning",showConditions:h},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-lightning-network-stats",title:"GET Network Stats",description:{default:"<p>Returns network-wide stats such as total number of channels and nodes, total capacity, and average/median fee figures.</p><p>Pass one of the following for <code>:interval</code>: <code>latest</code>, <code>24h</code>, <code>3d</code>, <code>1w</code>, <code>1m</code>, <code>3m</code>, <code>6m</code>, <code>1y</code>, <code>2y</code>, <code>3y</code>.</p>"},urlString:"/v1/lightning/statistics/:interval",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/statistics/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["latest"],response:'{\n  "latest": {\n    "id": 163,\n    "added": "2022-08-30T00:00:00.000Z",\n    "channel_count": 81690,\n    "node_count": 15851,\n    "total_capacity": 460820222344,\n    "tor_nodes": 11455,\n    "clearnet_nodes": 2305,\n    "unannounced_nodes": 974,\n    "avg_capacity": 5641085,\n    "avg_fee_rate": 497,\n    "avg_base_fee_mtokens": 915,\n    "med_capacity": 1500000,\n    "med_fee_rate": 40,\n    "med_base_fee_mtokens": 100,\n    "clearnet_tor_nodes": 1117\n  }\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["latest"],response:'{\n  "latest": {\n    "id": 13,\n    "added": "2022-08-30T00:00:00.000Z",\n    "channel_count": 5101,\n    "node_count": 1806,\n    "total_capacity": 43341092977,\n    "tor_nodes": 288,\n    "clearnet_nodes": 736,\n    "unannounced_nodes": 656,\n    "avg_capacity": 8496588,\n    "avg_fee_rate": 354,\n    "avg_base_fee_mtokens": 1183,\n    "med_capacity": 1148313,\n    "med_fee_rate": 1,\n    "med_base_fee_mtokens": 1000,\n    "clearnet_tor_nodes": 126\n  }\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["latest"],response:'{\n  "latest": {\n    "id": 13,\n    "added": "2022-08-30T00:00:00.000Z",\n    "channel_count": 33,\n    "node_count": 24,\n    "total_capacity": 161821884,\n    "tor_nodes": 5,\n    "clearnet_nodes": 11,\n    "unannounced_nodes": 6,\n    "avg_capacity": 4903693,\n    "avg_fee_rate": 38,\n    "avg_base_fee_mtokens": 1061,\n    "med_capacity": 2000000,\n    "med_fee_rate": 1,\n    "med_base_fee_mtokens": 1000,\n    "clearnet_tor_nodes": 2\n  }\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-lightning-nodes-channels",title:"GET Nodes/Channels",description:{default:"<p>Returns Lightning nodes and channels that match a full-text, case-insensitive search <code>:query</code> across node aliases, node pubkeys, channel IDs, and short channel IDs.</p>"},urlString:"/v1/lightning/search?searchText=:query",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/search?searchText=%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["ACINQ"],response:'{\n  "nodes": [\n    {\n      "public_key": "03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f",\n      "alias": "ACINQ",\n      "capacity": 35920090247,\n      "channels": 2907\n    },\n    {\n      "public_key": "03d3902b46d6ab9558a76cbf91b27d093c0a3c54e59f33c7eb4bd643dbb3b1b5b0",\n      "alias": "Acinq",\n      "capacity": null,\n      "channels": null\n    }\n  ],\n  "channels": []\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["lnd"],response:'{\n  "nodes": [\n    {\n      "public_key": "02be8f360e57600486b93dd33ea0872a4e14a259924ba4084f27d693a77d151158",\n      "alias": "lndus1.dev.zaphq.io",\n      "capacity": 762968876,\n      "channels": 27\n    },\n    {\n      "public_key": "028c3640c57ffe47eb41db8225968833c5032f297aeba98672d6f7037090d59e3f",\n      "alias": "lndus0.next.zaphq.io",\n      "capacity": 641040063,\n      "channels": 26\n    }\n  ],\n  "channels": []\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["guggero"],response:'{\n  "nodes": [\n    {\n      "public_key": "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n      "alias": "guggero",\n      "capacity": 66577093,\n      "channels": 12,\n      "status": 1\n    }\n  ],\n  "channels": []\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-lightning-nodes-country",title:"GET Nodes in Country",description:{default:"<p>Returns a list of Lightning nodes running on clearnet in the requested <code>:country</code>, where <code>:country</code> is an ISO Alpha-2 country code.</p>"},urlString:"/v1/lightning/nodes/country/:country",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/nodes/country/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["ch"],response:'{\n  "country": {\n    "de": "Schweiz",\n    "en": "Switzerland",\n    "es": "Suiza",\n    "fr": "Suisse",\n    "ja": "\u30b9\u30a4\u30b9\u9023\u90a6",\n    "pt-BR": "Su\xed\xe7a",\n    "ru": "\u0428\u0432\u0435\u0439\u0446\u0430\u0440\u0438\u044f",\n    "zh-CN": "\u745e\u58eb"\n  },\n  "nodes": [\n    {\n      "public_key": "033d8656219478701227199cbd6f670335c8d408a92ae88b962c49d4dc0e83e025",\n      "capacity": 54339697486,\n      "channels": 991,\n      "alias": "bfx-lnd0",\n      "first_seen": 1574813156,\n      "updated_at": 1661814056,\n      "city": {\n        "de": "Z\xfcrich",\n        "en": "Zurich",\n        "es": "Z\xfarich",\n        "fr": "Zurich",\n        "ja": "\u30c1\u30e5\u30fc\u30ea\u30c3\u30d2",\n        "pt-BR": "Zurique",\n        "ru": "\u0426\u044e\u0440\u0438\u0445",\n        "zh-CN": "\u82cf\u9ece\u4e16"\n      },\n      "country": {\n        "de": "Schweiz",\n        "en": "Switzerland",\n        "es": "Suiza",\n        "fr": "Suisse",\n        "ja": "\u30b9\u30a4\u30b9\u9023\u90a6",\n        "pt-BR": "Su\xed\xe7a",\n        "ru": "\u0428\u0432\u0435\u0439\u0446\u0430\u0440\u0438\u044f",\n        "zh-CN": "\u745e\u58eb"\n      },\n      "iso_code": "CH",\n      "subdivision": {\n        "de": "Z\xfcrich",\n        "en": "Zurich",\n        "fr": "Zurich"\n      }\n    },\n    ...\n  ]\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["ch"],response:'{\n  "country": {\n    "de": "Schweiz",\n    "en": "Switzerland",\n    "es": "Suiza",\n    "fr": "Suisse",\n    "ja": "\u30b9\u30a4\u30b9\u9023\u90a6",\n    "pt-BR": "Su\xed\xe7a",\n    "ru": "\u0428\u0432\u0435\u0439\u0446\u0430\u0440\u0438\u044f",\n    "zh-CN": "\u745e\u58eb"\n  },\n  "nodes": [\n    {\n      "public_key": "0200a7f20e51049363cb7f2a0865fe072464d469dca0ac34c954bb3d4b552b6e95",\n      "capacity": 94802991,\n      "channels": 15,\n      "alias": "looptest",\n      "first_seen": 1601298108,\n      "updated_at": 1661857089,\n      "city": {\n        "de": "Thun",\n        "en": "Thun",\n        "es": "Thun",\n        "fr": "Thoune",\n        "ja": "\u30c8\u30a5\u30fc\u30f3",\n        "pt-BR": "Tune",\n        "ru": "\u0422\u0443\u043d",\n        "zh-CN": "\u56fe\u6069"\n      },\n      "country": {\n        "de": "Schweiz",\n        "en": "Switzerland",\n        "es": "Suiza",\n        "fr": "Suisse",\n        "ja": "\u30b9\u30a4\u30b9\u9023\u90a6",\n        "pt-BR": "Su\xed\xe7a",\n        "ru": "\u0428\u0432\u0435\u0439\u0446\u0430\u0440\u0438\u044f",\n        "zh-CN": "\u745e\u58eb"\n      },\n      "iso_code": "CH",\n      "subdivision": {\n        "de": "Bern",\n        "en": "Bern",\n        "fr": "Berne"\n      }\n    },\n    ...\n  ]\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["us"],response:'{\n  "country": {\n    "de": "Vereinigte Staaten",\n    "en": "United States",\n    "es": "Estados Unidos",\n    "fr": "\xc9tats Unis",\n    "ja": "\u30a2\u30e1\u30ea\u30ab",\n    "pt-BR": "EUA",\n    "ru": "\u0421\u0428\u0410",\n    "zh-CN": "\u7f8e\u56fd"\n  },\n  "nodes": [\n    {\n      "public_key": "03f70ac4525c0014bbf380c069ce82d70946d37a56c027a2ed18609a3e60c3b353",\n      "capacity": 2000000,\n      "channels": 1,\n      "alias": "",\n      "first_seen": 1637708194,\n      "updated_at": 0,\n      "city": {\n        "en": "Oak Park",\n        "ru": "\u041e\u0443\u043a-\u041f\u0430\u0440\u043a"\n      },\n      "country": {\n        "de": "Vereinigte Staaten",\n        "en": "United States",\n        "es": "Estados Unidos",\n        "fr": "\xc9tats Unis",\n        "ja": "\u30a2\u30e1\u30ea\u30ab",\n        "pt-BR": "EUA",\n        "ru": "\u0421\u0428\u0410",\n        "zh-CN": "\u7f8e\u56fd"\n      },\n      "iso_code": "US",\n      "subdivision": {\n        "en": "Illinois",\n        "es": "Illinois",\n        "fr": "Illinois",\n        "ja": "\u30a4\u30ea\u30ce\u30a4\u5dde",\n        "pt-BR": "Ilin\xf3is",\n        "ru": "\u0418\u043b\u043b\u0438\u043d\u043e\u0439\u0441",\n        "zh-CN": "\u4f0a\u5229\u8bfa\u4f0a\u5dde"\n      }\n    },\n    {\n      "public_key": "0397b15fd867541c53a3a5e27c021f7acad582684d05d120af572266c92c8a0313",\n      "capacity": 19802,\n      "channels": 1,\n      "alias": "pseudozach",\n      "first_seen": 1637620444,\n      "updated_at": 1637721257,\n      "city": {\n        "de": "Atlanta",\n        "en": "Atlanta",\n        "es": "Atlanta",\n        "fr": "Atlanta",\n        "ja": "\u30a2\u30c8\u30e9\u30f3\u30bf",\n        "pt-BR": "Atlanta",\n        "ru": "\u0410\u0442\u043b\u0430\u043d\u0442\u0430",\n        "zh-CN": "\u4e9a\u7279\u5170\u5927"\n      },\n      "country": {\n        "de": "Vereinigte Staaten",\n        "en": "United States",\n        "es": "Estados Unidos",\n        "fr": "\xc9tats Unis",\n        "ja": "\u30a2\u30e1\u30ea\u30ab",\n        "pt-BR": "EUA",\n        "ru": "\u0421\u0428\u0410",\n        "zh-CN": "\u7f8e\u56fd"\n      },\n      "iso_code": "US",\n      "subdivision": {\n        "en": "Georgia",\n        "es": "Georgia",\n        "fr": "G\xe9orgie",\n        "ja": "\u30b8\u30e7\u30fc\u30b8\u30a2\u5dde",\n        "pt-BR": "Ge\xf3rgia",\n        "ru": "\u0414\u0436\u043e\u0440\u0434\u0436\u0438\u044f",\n        "zh-CN": "\u4e54\u6cbb\u4e9a"\n      }\n    },\n    ...\n  ]\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-country-node-stats",title:"GET Node Stats Per Country",description:{default:"<p>Returns aggregate capacity and number of clearnet nodes per country. Capacity figures are in satoshis.</p>"},urlString:"/v1/lightning/nodes/countries",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/nodes/countries",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "name": {\n      "de": "Vereinigte Staaten",\n      "en": "United States",\n      "es": "Estados Unidos",\n      "fr": "\xc9tats Unis",\n      "ja": "\u30a2\u30e1\u30ea\u30ab",\n      "pt-BR": "EUA",\n      "ru": "\u0421\u0428\u0410",\n      "zh-CN": "\u7f8e\u56fd"\n    },\n    "iso": "US",\n    "count": 2775,\n    "share": 34.53,\n    "capacity": "372732844657"\n  },\n  {\n    "name": {\n      "de": "Frankreich",\n      "en": "France",\n      "es": "Francia",\n      "fr": "France",\n      "ja": "\u30d5\u30e9\u30f3\u30b9\u5171\u548c\u56fd",\n      "pt-BR": "Fran\xe7a",\n      "ru": "\u0424\u0440\u0430\u043d\u0446\u0438\u044f",\n      "zh-CN": "\u6cd5\u56fd"\n    },\n    "iso": "FR",\n    "count": 972,\n    "share": 12.09,\n    "capacity": "7740713270"\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "name": {\n      "de": "Vereinigte Staaten",\n      "en": "United States",\n      "es": "Estados Unidos",\n      "fr": "\xc9tats Unis",\n      "ja": "\u30a2\u30e1\u30ea\u30ab",\n      "pt-BR": "EUA",\n      "ru": "\u0421\u0428\u0410",\n      "zh-CN": "\u7f8e\u56fd"\n    },\n    "iso": "US",\n    "count": 304,\n    "share": 37.95,\n    "capacity": "23906225936"\n  },\n  {\n    "name": {\n      "de": "Deutschland",\n      "en": "Germany",\n      "es": "Alemania",\n      "fr": "Allemagne",\n      "ja": "\u30c9\u30a4\u30c4\u9023\u90a6\u5171\u548c\u56fd",\n      "pt-BR": "Alemanha",\n      "ru": "\u0413\u0435\u0440\u043c\u0430\u043d\u0438\u044f",\n      "zh-CN": "\u5fb7\u56fd"\n    },\n    "iso": "DE",\n    "count": 85,\n    "share": 10.61,\n    "capacity": "1878052329"\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "name": {\n      "de": "Vereinigte Staaten",\n      "en": "United States",\n      "es": "Estados Unidos",\n      "fr": "\xc9tats Unis",\n      "ja": "\u30a2\u30e1\u30ea\u30ab",\n      "pt-BR": "EUA",\n      "ru": "\u0421\u0428\u0410",\n      "zh-CN": "\u7f8e\u56fd"\n    },\n    "iso": "US",\n    "count": 4,\n    "share": 36.36,\n    "capacity": "2059317"\n  },\n  {\n    "name": {\n      "de": "Japan",\n      "en": "Japan",\n      "es": "Jap\xf3n",\n      "fr": "Japon",\n      "ja": "\u65e5\u672c",\n      "pt-BR": "Jap\xe3o",\n      "ru": "\u042f\u043f\u043e\u043d\u0438\u044f",\n      "zh-CN": "\u65e5\u672c"\n    },\n    "iso": "JP",\n    "count": 2,\n    "share": 18.18,\n    "capacity": "107710417"\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-isp-nodes",title:"GET ISP Nodes",description:{default:"<p>Returns a list of nodes hosted by a specified <code>:isp</code>, where <code>:isp</code> is an ISP's ASN.</p>"},urlString:"/v1/lightning/nodes/isp/:isp",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/nodes/isp/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["16509"],response:'{\n  "isp": "Amazon.com",\n  "nodes": [\n    {\n      "public_key": "03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f",\n      "capacity": 36010390247,\n      "channels": 2907,\n      "alias": "ACINQ",\n      "first_seen": 1522941222,\n      "updated_at": 1661274935,\n      "city": null,\n      "country": {\n        "de": "Vereinigte Staaten",\n        "en": "United States",\n        "es": "Estados Unidos",\n        "fr": "\xc9tats Unis",\n        "ja": "\u30a2\u30e1\u30ea\u30ab",\n        "pt-BR": "EUA",\n        "ru": "\u0421\u0428\u0410",\n        "zh-CN": "\u7f8e\u56fd"\n      },\n      "iso_code": "US",\n      "subdivision": null\n    },\n    ...\n  ]\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["16509"],response:'{\n  "isp": "Amazon.com",\n  "nodes": [\n    {\n      "public_key": "03933884aaf1d6b108397e5efe5c86bcf2d8ca8d2f700eda99db9214fc2712b134",\n      "capacity": 2041664924,\n      "channels": 70,\n      "alias": "endurance",\n      "first_seen": 1566809576,\n      "updated_at": 1660926529,\n      "city": null,\n      "country": {\n        "de": "Vereinigte Staaten",\n        "en": "United States",\n        "es": "Estados Unidos",\n        "fr": "\xc9tats Unis",\n        "ja": "\u30a2\u30e1\u30ea\u30ab",\n        "pt-BR": "EUA",\n        "ru": "\u0421\u0428\u0410",\n        "zh-CN": "\u7f8e\u56fd"\n      },\n      "iso_code": "US",\n      "subdivision": null\n    },\n    ...\n  ]\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["7684"],response:'{\n  "isp": "SAKURA Internet",\n  "nodes": [\n    {\n      "public_key": "02dadf6c28f3284d591cd2a4189d1530c1ff82c07059ebea150a33ab76e7364b4a",\n      "capacity": 51155987,\n      "channels": 15,\n      "alias": "\u73e0\u7f8e\u30ce\u30fc\u30c9\u26a1@wakiyamap",\n      "first_seen": 1612221581,\n      "updated_at": 1662382573,\n      "city": null,\n      "country": {\n        "de": "Japan",\n        "en": "Japan",\n        "es": "Jap\xf3n",\n        "fr": "Japon",\n        "ja": "\u65e5\u672c",\n        "pt-BR": "Jap\xe3o",\n        "ru": "\u042f\u043f\u043e\u043d\u0438\u044f",\n        "zh-CN": "\u65e5\u672c"\n      },\n      "iso_code": "JP",\n      "subdivision": null\n    }\n  ]\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-isp-node-stats",title:"GET Node Stats Per ISP",description:{default:"<p>Returns aggregate capacity, number of nodes, and number of channels per ISP. Capacity figures are in satoshis.</p>"},urlString:"/v1/lightning/nodes/isp-ranking",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/nodes/isp-ranking",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'{\n  "clearnetCapacity": 417154330493,\n  "torCapacity": 36605381932,\n  "unknownCapacity": 6678700534,\n  "ispRanking": [\n    [\n      "14061",           //ASN\n      "DigitalOcean",    //ISP name\n      43681728521,       //aggregate capacity, in sats\n      5028,              //total number of channels\n      192                //number of nodes\n    ],\n    [\n      "701",\n      "Verizon Internet Services",\n      3047086363,\n      507,\n      55\n    ],\n    [\n      "396982,15169",\n      "Google Cloud",\n      139554933568,\n      2747,\n      78\n    ],\n    ...\n  ]\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:'{\n  "clearnetCapacity": 21714967205,\n  "torCapacity": 1183591190,\n  "unknownCapacity": 965032372,\n  "ispRanking": [\n    [\n      "14080",                  //ASN\n      "Telmex Colombia S.A.",   //ISP Name\n      220063321,                //aggregate capacity, in sats\n      98,                       //total number of channels\n      1                         //number of nodes\n    ],\n    [\n      "16509,14618",\n      "Amazon.com",\n      5590657952,\n      445,\n      41\n    ],\n    ...\n  ]\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:'{\n  "clearnetCapacity": 126914725,\n  "torCapacity": 1000000,\n  "unknownCapacity": 31150000,\n  "ispRanking": [\n    [\n      "1136",\n      "KPN",\n      99878,\n      1,\n      1\n    ],\n    [\n      "24940",\n      "Hetzner Online GmbH",\n      34877093,\n      6,\n      1\n    ],\n    ...\n  ]\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-top-100-nodes",title:"GET Top 100 Nodes",description:{default:"<p>Returns two lists of the top 100 nodes: one ordered by liquidity (aggregate channel capacity) and the other ordered by connectivity (number of open channels).</p>"},urlString:"/v1/lightning/nodes/rankings",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/nodes/rankings",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'{\n  "topByCapacity": [\n    {\n      "publicKey": "033d8656219478701227199cbd6f670335c8d408a92ae88b962c49d4dc0e83e025",\n      "alias": "bfx-lnd0",\n      "capacity": 54361697486\n    },\n    {\n      "publicKey": "03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f",\n      "alias": "ACINQ",\n      "capacity": 36010516297\n    },\n    ...\n  ],\n  "topByChannels": [\n    {\n      "publicKey": "03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f",\n      "alias": "ACINQ",\n      "channels": 2908\n    },\n    {\n      "publicKey": "035e4ff418fc8b5554c5d9eea66396c227bd429a3251c8cbc711002ba215bfc226",\n      "alias": "WalletOfSatoshi.com",\n      "channels": 2771\n    },\n    ...\n  ]\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:'{\n  "topByCapacity": [\n    {\n      "publicKey": "038863cf8ab91046230f561cd5b386cbff8309fa02e3f0c3ed161a3aeb64a643b9",\n      "alias": "aranguren.org",\n      "capacity": 17155095532\n    },\n    {\n      "publicKey": "0225ff2ae6a3d9722b625072503c2f64f6eddb78d739379d2ee55a16b3b0ed0a17",\n      "alias": "STRANGEIRON",\n      "capacity": 7038263480\n    },\n    ...\n  ],\n  "topByChannels": [\n    {\n      "publicKey": "038863cf8ab91046230f561cd5b386cbff8309fa02e3f0c3ed161a3aeb64a643b9",\n      "alias": "aranguren.org",\n      "channels": 489\n    },\n    {\n      "publicKey": "030425d8babe3ab6dfc065e69dd8b10ce6738c86ea7d634324c913e21620fa5eaf",\n      "alias": "MTest441",\n      "channels": 258\n    },\n    ...\n  ]\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:'{\n  "topByCapacity": [\n    {\n      "publicKey": "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n      "alias": "guggero",\n      "capacity": 66577093\n    },\n    {\n      "publicKey": "0271cf3881e6eadad960f47125434342e57e65b98a78afa99f9b4191c02dd7ab3b",\n      "alias": "eclair@wakiyamap",\n      "capacity": 56554430\n    },\n    ...\n  ],\n  "topByChannels": [\n    {\n      "publicKey": "02dadf6c28f3284d591cd2a4189d1530c1ff82c07059ebea150a33ab76e7364b4a",\n      "alias": "\u73e0\u7f8e\u30ce\u30fc\u30c9\u26a1@wakiyamap",\n      "channels": 15\n    },\n    {\n      "publicKey": "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n      "alias": "guggero",\n      "channels": 12\n    },\n    ...\n  ]\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-top-100-nodes-liquidity",title:"GET Top 100 Nodes by Liquidity",description:{default:"<p>Returns a list of the top 100 nodes by liquidity (aggregate channel capacity).</p>"},urlString:"/v1/lightning/nodes/rankings/liquidity",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/nodes/rankings/liquidity",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "publicKey": "033d8656219478701227199cbd6f670335c8d408a92ae88b962c49d4dc0e83e025",\n    "alias": "bfx-lnd0",\n    "capacity": 54361697486,\n    "channels": 993,\n    "firstSeen": 1574813156,\n    "updatedAt": 1661814056,\n    "city": {\n      "de": "Z\xfcrich",\n      "en": "Zurich",\n      "es": "Z\xfarich",\n      "fr": "Zurich",\n      "ja": "\u30c1\u30e5\u30fc\u30ea\u30c3\u30d2",\n      "pt-BR": "Zurique",\n      "ru": "\u0426\u044e\u0440\u0438\u0445",\n      "zh-CN": "\u82cf\u9ece\u4e16"\n    },\n    "country": {\n      "de": "Schweiz",\n      "en": "Switzerland",\n      "es": "Suiza",\n      "fr": "Suisse",\n      "ja": "\u30b9\u30a4\u30b9\u9023\u90a6",\n      "pt-BR": "Su\xed\xe7a",\n      "ru": "\u0428\u0432\u0435\u0439\u0446\u0430\u0440\u0438\u044f",\n      "zh-CN": "\u745e\u58eb"\n    }\n  },\n  {\n    "publicKey": "03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f",\n    "alias": "ACINQ",\n    "capacity": 36010516297,\n    "channels": 2908,\n    "firstSeen": 1522941222,\n    "updatedAt": 1661274935,\n    "city": null,\n    "country": {\n      "de": "Vereinigte Staaten",\n      "en": "United States",\n      "es": "Estados Unidos",\n      "fr": "\xc9tats Unis",\n      "ja": "\u30a2\u30e1\u30ea\u30ab",\n      "pt-BR": "EUA",\n      "ru": "\u0421\u0428\u0410",\n      "zh-CN": "\u7f8e\u56fd"\n    }\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "publicKey": "038863cf8ab91046230f561cd5b386cbff8309fa02e3f0c3ed161a3aeb64a643b9",\n    "alias": "aranguren.org",\n    "capacity": 17155095532,\n    "channels": 489,\n    "firstSeen": 1521457251,\n    "updatedAt": 1662035238,\n    "city": {\n      "de": "Melbourne",\n      "en": "Melbourne",\n      "es": "Melbourne",\n      "fr": "Melbourne",\n      "ja": "\u30e1\u30eb\u30dc\u30eb\u30f3",\n      "pt-BR": "Melbourne",\n      "ru": "\u041c\u0435\u043b\u044c\u0431\u0443\u0440\u043d",\n      "zh-CN": "\u58a8\u5c14\u672c"\n    },\n    "country": {\n      "de": "Australien",\n      "en": "Australia",\n      "es": "Australia",\n      "fr": "Australie",\n      "ja": "\u30aa\u30fc\u30b9\u30c8\u30e9\u30ea\u30a2",\n      "pt-BR": "Austr\xe1lia",\n      "ru": "\u0410\u0432\u0441\u0442\u0440\u0430\u043b\u0438\u044f",\n      "zh-CN": "\u6fb3\u5927\u5229\u4e9a"\n    }\n  },\n  {\n    "publicKey": "0225ff2ae6a3d9722b625072503c2f64f6eddb78d739379d2ee55a16b3b0ed0a17",\n    "alias": "STRANGEIRON",\n    "capacity": 7038263480,\n    "channels": 95,\n    "firstSeen": 1651725065,\n    "updatedAt": 1661958465,\n    "city": {\n      "de": "Melbourne",\n      "en": "Melbourne",\n      "es": "Melbourne",\n      "fr": "Melbourne",\n      "ja": "\u30e1\u30eb\u30dc\u30eb\u30f3",\n      "pt-BR": "Melbourne",\n      "ru": "\u041c\u0435\u043b\u044c\u0431\u0443\u0440\u043d",\n      "zh-CN": "\u58a8\u5c14\u672c"\n    },\n    "country": {\n      "de": "Australien",\n      "en": "Australia",\n      "es": "Australia",\n      "fr": "Australie",\n      "ja": "\u30aa\u30fc\u30b9\u30c8\u30e9\u30ea\u30a2",\n      "pt-BR": "Austr\xe1lia",\n      "ru": "\u0410\u0432\u0441\u0442\u0440\u0430\u043b\u0438\u044f",\n      "zh-CN": "\u6fb3\u5927\u5229\u4e9a"\n    }\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "publicKey": "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n    "alias": "guggero",\n    "capacity": 66577093,\n    "channels": 12,\n    "firstSeen": 1608832520,\n    "updatedAt": 1662440260,\n    "city": null,\n    "country": {\n      "de": "Deutschland",\n      "en": "Germany",\n      "es": "Alemania",\n      "fr": "Allemagne",\n      "ja": "\u30c9\u30a4\u30c4\u9023\u90a6\u5171\u548c\u56fd",\n      "pt-BR": "Alemanha",\n      "ru": "\u0413\u0435\u0440\u043c\u0430\u043d\u0438\u044f",\n      "zh-CN": "\u5fb7\u56fd"\n    }\n  },\n  {\n    "publicKey": "0271cf3881e6eadad960f47125434342e57e65b98a78afa99f9b4191c02dd7ab3b",\n    "alias": "eclair@wakiyamap",\n    "capacity": 56554430,\n    "channels": 4,\n    "firstSeen": 1628031165,\n    "updatedAt": 1648064593,\n    "city": {\n      "de": "\u014csaka",\n      "en": "Osaka",\n      "es": "Osaka",\n      "fr": "Osaka",\n      "ja": "\u5927\u962a\u5e02",\n      "pt-BR": "Osaka",\n      "ru": "\u041e\u0441\u0430\u043a\u0430"\n    },\n    "country": {\n      "de": "Japan",\n      "en": "Japan",\n      "es": "Jap\xf3n",\n      "fr": "Japon",\n      "ja": "\u65e5\u672c",\n      "pt-BR": "Jap\xe3o",\n      "ru": "\u042f\u043f\u043e\u043d\u0438\u044f",\n      "zh-CN": "\u65e5\u672c"\n    }\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-top-100-nodes-connectivity",title:"GET Top 100 Nodes by Connectivity",description:{default:"<p>Returns a list of the top 100 nodes by connectivity (number of open channels).</p>"},urlString:"/v1/lightning/nodes/rankings/connectivity",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/nodes/rankings/connectivity",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "publicKey": "03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f",\n    "alias": "ACINQ",\n    "channels": 2908,\n    "capacity": 36010516297,\n    "firstSeen": 1522941222,\n    "updatedAt": 1661274935,\n    "city": null,\n    "country": {\n      "de": "Vereinigte Staaten",\n      "en": "United States",\n      "es": "Estados Unidos",\n      "fr": "\xc9tats Unis",\n      "ja": "\u30a2\u30e1\u30ea\u30ab",\n      "pt-BR": "EUA",\n      "ru": "\u0421\u0428\u0410",\n      "zh-CN": "\u7f8e\u56fd"\n    }\n  },\n  {\n    "publicKey": "035e4ff418fc8b5554c5d9eea66396c227bd429a3251c8cbc711002ba215bfc226",\n    "alias": "WalletOfSatoshi.com",\n    "channels": 2772,\n    "capacity": 15464503162,\n    "firstSeen": 1601429940,\n    "updatedAt": 1661812116,\n    "city": {\n      "de": "Vancouver",\n      "en": "Vancouver",\n      "es": "Vancouver",\n      "fr": "Vancouver",\n      "ja": "\u30d0\u30f3\u30af\u30fc\u30d0\u30fc\u5e02",\n      "pt-BR": "Vanc\xf4ver",\n      "ru": "\u0412\u0430\u043d\u043a\u0443\u0432\u0435\u0440"\n    },\n    "country": {\n      "de": "Kanada",\n      "en": "Canada",\n      "es": "Canad\xe1",\n      "fr": "Canada",\n      "ja": "\u30ab\u30ca\u30c0",\n      "pt-BR": "Canad\xe1",\n      "ru": "\u041a\u0430\u043d\u0430\u0434\u0430",\n      "zh-CN": "\u52a0\u62ff\u5927"\n    }\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "publicKey": "038863cf8ab91046230f561cd5b386cbff8309fa02e3f0c3ed161a3aeb64a643b9",\n    "alias": "aranguren.org",\n    "channels": 489,\n    "capacity": 17155095532,\n    "firstSeen": 1521457251,\n    "updatedAt": 1662035238,\n    "city": {\n      "de": "Melbourne",\n      "en": "Melbourne",\n      "es": "Melbourne",\n      "fr": "Melbourne",\n      "ja": "\u30e1\u30eb\u30dc\u30eb\u30f3",\n      "pt-BR": "Melbourne",\n      "ru": "\u041c\u0435\u043b\u044c\u0431\u0443\u0440\u043d",\n      "zh-CN": "\u58a8\u5c14\u672c"\n    },\n    "country": {\n      "de": "Australien",\n      "en": "Australia",\n      "es": "Australia",\n      "fr": "Australie",\n      "ja": "\u30aa\u30fc\u30b9\u30c8\u30e9\u30ea\u30a2",\n      "pt-BR": "Austr\xe1lia",\n      "ru": "\u0410\u0432\u0441\u0442\u0440\u0430\u043b\u0438\u044f",\n      "zh-CN": "\u6fb3\u5927\u5229\u4e9a"\n    }\n  },\n  {\n    "publicKey": "030425d8babe3ab6dfc065e69dd8b10ce6738c86ea7d634324c913e21620fa5eaf",\n    "alias": "MTest441",\n    "channels": 258,\n    "capacity": 4113430492,\n    "firstSeen": 1640955758,\n    "updatedAt": 1662035216,\n    "city": null,\n    "country": null\n  },\n  {\n    "publicKey": "0270685ca81a8e4d4d01beec5781f4cc924684072ae52c507f8ebe9daf0caaab7b",\n    "alias": "0270685ca81a8e4d4d01",\n    "channels": 164,\n    "capacity": 638119030,\n    "firstSeen": 1535613050,\n    "updatedAt": 1662034882,\n    "city": {\n      "de": "Clifton",\n      "en": "Clifton",\n      "ja": "\u30af\u30ea\u30d5\u30c8\u30f3",\n      "pt-BR": "Clifton",\n      "ru": "\u041a\u043b\u0438\u0444\u0442\u043e\u043d",\n      "zh-CN": "\u514b\u5229\u592b\u9813"\n    },\n    "country": {\n      "de": "Vereinigte Staaten",\n      "en": "United States",\n      "es": "Estados Unidos",\n      "fr": "\xc9tats Unis",\n      "ja": "\u30a2\u30e1\u30ea\u30ab",\n      "pt-BR": "EUA",\n      "ru": "\u0421\u0428\u0410",\n      "zh-CN": "\u7f8e\u56fd"\n    }\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "publicKey": "02dadf6c28f3284d591cd2a4189d1530c1ff82c07059ebea150a33ab76e7364b4a",\n    "alias": "\u73e0\u7f8e\u30ce\u30fc\u30c9\u26a1@wakiyamap",\n    "channels": 15,\n    "capacity": 51155987,\n    "firstSeen": 1612221581,\n    "updatedAt": 1662382573,\n    "city": null,\n    "country": {\n      "de": "Japan",\n      "en": "Japan",\n      "es": "Jap\xf3n",\n      "fr": "Japon",\n      "ja": "\u65e5\u672c",\n      "pt-BR": "Jap\xe3o",\n      "ru": "\u042f\u043f\u043e\u043d\u0438\u044f",\n      "zh-CN": "\u65e5\u672c"\n    }\n  },\n  {\n    "publicKey": "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n    "alias": "guggero",\n    "channels": 12,\n    "capacity": 66577093,\n    "firstSeen": 1608832520,\n    "updatedAt": 1662440260,\n    "city": null,\n    "country": {\n      "de": "Deutschland",\n      "en": "Germany",\n      "es": "Alemania",\n      "fr": "Allemagne",\n      "ja": "\u30c9\u30a4\u30c4\u9023\u90a6\u5171\u548c\u56fd",\n      "pt-BR": "Alemanha",\n      "ru": "\u0413\u0435\u0440\u043c\u0430\u043d\u0438\u044f",\n      "zh-CN": "\u5fb7\u56fd"\n    }\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-top-100-oldest-nodes",title:"GET Top 100 Oldest Nodes",description:{default:"<p>Returns a list of the top 100 oldest nodes.</p>"},urlString:"/v1/lightning/nodes/rankings/age",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/nodes/rankings/age",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "publicKey": "02d4531a2f2e6e5a9033d37d548cff4834a3898e74c3abe1985b493c42ebbd707d",\n    "alias": "coinfinity.co",\n    "channels": 13,\n    "capacity": 35945717,\n    "firstSeen": 1518001533,\n    "updatedAt": 1661713804,\n    "city": {\n      "de": "Br\xfcssel",\n      "en": "Brussels",\n      "es": "Bruselas",\n      "fr": "Bruxelles",\n      "ja": "\u30d6\u30ea\u30e5\u30c3\u30bb\u30eb",\n      "pt-BR": "Bruxelas",\n      "ru": "\u0411\u0440\u044e\u0441\u0441\u0435\u043b\u044c",\n      "zh-CN": "\u5e03\u9c81\u585e\u5c14"\n    },\n    "country": {\n      "de": "Belgien",\n      "en": "Belgium",\n      "es": "B\xe9lgica",\n      "fr": "Belgique",\n      "ja": "\u30d9\u30eb\u30ae\u30fc\u738b\u56fd",\n      "pt-BR": "B\xe9lgica",\n      "ru": "\u0411\u0435\u043b\u044c\u0433\u0438\u044f",\n      "zh-CN": "\u6bd4\u5229\u65f6"\n    }\n  },\n  {\n    "publicKey": "024bd94f0425590434538fd21d4e58982f7e9cfd8f339205a73deb9c0e0341f5bd",\n    "alias": "CL.rompert.com\u{1f535} ",\n    "channels": 2,\n    "capacity": 600000,\n    "firstSeen": 1520596684,\n    "updatedAt": 1603261631,\n    "city": {\n      "de": "Clifton",\n      "en": "Clifton",\n      "ja": "\u30af\u30ea\u30d5\u30c8\u30f3",\n      "pt-BR": "Clifton",\n      "ru": "\u041a\u043b\u0438\u0444\u0442\u043e\u043d",\n      "zh-CN": "\u514b\u5229\u592b\u9813"\n    },\n    "country": {\n      "de": "Vereinigte Staaten",\n      "en": "United States",\n      "es": "Estados Unidos",\n      "fr": "\xc9tats Unis",\n      "ja": "\u30a2\u30e1\u30ea\u30ab",\n      "pt-BR": "EUA",\n      "ru": "\u0421\u0428\u0410",\n      "zh-CN": "\u7f8e\u56fd"\n    }\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "publicKey": "038863cf8ab91046230f561cd5b386cbff8309fa02e3f0c3ed161a3aeb64a643b9",\n    "alias": "aranguren.org",\n    "channels": 489,\n    "capacity": 17155095532,\n    "firstSeen": 1521457251,\n    "updatedAt": 1662035238,\n    "city": {\n      "de": "Melbourne",\n      "en": "Melbourne",\n      "es": "Melbourne",\n      "fr": "Melbourne",\n      "ja": "\u30e1\u30eb\u30dc\u30eb\u30f3",\n      "pt-BR": "Melbourne",\n      "ru": "\u041c\u0435\u043b\u044c\u0431\u0443\u0440\u043d",\n      "zh-CN": "\u58a8\u5c14\u672c"\n    },\n    "country": {\n      "de": "Australien",\n      "en": "Australia",\n      "es": "Australia",\n      "fr": "Australie",\n      "ja": "\u30aa\u30fc\u30b9\u30c8\u30e9\u30ea\u30a2",\n      "pt-BR": "Austr\xe1lia",\n      "ru": "\u0410\u0432\u0441\u0442\u0440\u0430\u043b\u0438\u044f",\n      "zh-CN": "\u6fb3\u5927\u5229\u4e9a"\n    }\n  },\n  {\n    "publicKey": "0277622bf4c497475960bf91bd3c673a4cb4e9b589cebfde9700c197b3989cc1b8",\n    "alias": "CoinGate",\n    "channels": 11,\n    "capacity": 91768515,\n    "firstSeen": 1525964963,\n    "updatedAt": 1661991683,\n    "city": {\n      "de": "Frankfurt am Main",\n      "en": "Frankfurt am Main",\n      "es": "Francfort",\n      "fr": "Francfort-sur-le-Main",\n      "ja": "\u30d5\u30e9\u30f3\u30af\u30d5\u30eb\u30c8\u30fb\u30a2\u30e0\u30fb\u30de\u30a4\u30f3",\n      "pt-BR": "Frankfurt am Main",\n      "ru": "\u0424\u0440\u0430\u043d\u043a\u0444\u0443\u0440\u0442",\n      "zh-CN": "\u6cd5\u5170\u514b\u798f"\n    },\n    "country": {\n      "de": "Deutschland",\n      "en": "Germany",\n      "es": "Alemania",\n      "fr": "Allemagne",\n      "ja": "\u30c9\u30a4\u30c4\u9023\u90a6\u5171\u548c\u56fd",\n      "pt-BR": "Alemanha",\n      "ru": "\u0413\u0435\u0440\u043c\u0430\u043d\u0438\u044f",\n      "zh-CN": "\u5fb7\u56fd"\n    }\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:'[\n  {\n    "publicKey": "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n    "alias": "guggero",\n    "channels": 12,\n    "capacity": 66577093,\n    "firstSeen": 1608832520,\n    "updatedAt": 1662440260,\n    "city": null,\n    "country": {\n      "de": "Deutschland",\n      "en": "Germany",\n      "es": "Alemania",\n      "fr": "Allemagne",\n      "ja": "\u30c9\u30a4\u30c4\u9023\u90a6\u5171\u548c\u56fd",\n      "pt-BR": "Alemanha",\n      "ru": "\u0413\u0435\u0440\u043c\u0430\u043d\u0438\u044f",\n      "zh-CN": "\u5fb7\u56fd"\n    }\n  },\n  {\n    "publicKey": "03870a4c4c54a9b2e705023d706843ffbac5b0e95e2b80d4b02dc7a9efb5380322",\n    "alias": "03870a4c4c54a9b2e705",\n    "channels": 2,\n    "capacity": 30000000,\n    "firstSeen": 1608832520,\n    "updatedAt": 0,\n    "city": null,\n    "country": null\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-node-stats",title:"GET Node Stats",description:{default:"<p>Returns details about a node with the given <code>:pubKey</code>.</p>"},urlString:"/v1/lightning/nodes/:pubKey",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/nodes/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["033ac2f9f7ff643c235cc247c521663924aff73b26b38118a6c6821460afcde1b3"],response:'{\n  "public_key": "033ac2f9f7ff643c235cc247c521663924aff73b26b38118a6c6821460afcde1b3",\n  "alias": "Red.de.Rayos",\n  "first_seen": 1521504055,\n  "updated_at": 1661869523,\n  "color": "#68f442",\n  "sockets": "84.44.203.181:9735",\n  "as_number": 8422,\n  "city_id": 2886242,\n  "country_id": 2921044,\n  "subdivision_id": 2861876,\n  "longitude": 6.9489,\n  "latitude": 50.9298,\n  "iso_code": "DE",\n  "as_organization": "NetCologne GmbH",\n  "city": {\n    "de": "K\xf6ln",\n    "en": "Cologne",\n    "es": "Colonia",\n    "fr": "Cologne",\n    "ja": "\u30b1\u30eb\u30f3",\n    "pt-BR": "Col\xf4nia",\n    "ru": "\u041a\u0451\u043b\u044c\u043d",\n    "zh-CN": "\u79d1\u9686"\n  },\n  "country": {\n    "de": "Deutschland",\n    "en": "Germany",\n    "es": "Alemania",\n    "fr": "Allemagne",\n    "ja": "\u30c9\u30a4\u30c4\u9023\u90a6\u5171\u548c\u56fd",\n    "pt-BR": "Alemanha",\n    "ru": "\u0413\u0435\u0440\u043c\u0430\u043d\u0438\u044f",\n    "zh-CN": "\u5fb7\u56fd"\n  },\n  "subdivision": {\n    "de": "Nordrhein-Westfalen",\n    "en": "North Rhine-Westphalia",\n    "es": "Renania del Norte-Westfalia",\n    "fr": "Rh\xe9nanie du Nord-Westphalie",\n    "ru": "\u0421\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0420\u0435\u0439\u043d-\u0412\u0435\u0441\u0442\u0444\u0430\u043b\u0438\u044f"\n  },\n  "active_channel_count": 55,\n  "capacity": "31505027",\n  "opened_channel_count": 55,\n  "closed_channel_count": 111\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["03f060953bef5b777dc77e44afa3859d022fc1a77c55138deb232ad7255e869c00"],response:'{\n  "public_key": "03f060953bef5b777dc77e44afa3859d022fc1a77c55138deb232ad7255e869c00",\n  "alias": "Boltz",\n  "first_seen": 1551006126,\n  "updated_at": 1662033208,\n  "color": "#ff9800",\n  "sockets": "35.237.24.136:9735,idz7qlezif6hgmjkpmuelnsssyxea2lwan562a5gla7jmlxsl5cb2cad.onion:9735",\n  "as_number": 396982,\n  "city_id": 4589387,\n  "country_id": 6252001,\n  "subdivision_id": 4597040,\n  "longitude": -79.9746,\n  "latitude": 32.8608,\n  "iso_code": "US",\n  "as_organization": "Google Cloud",\n  "city": {\n    "en": "North Charleston",\n    "ja": "\u30ce\u30fc\u30b9\u30c1\u30e3\u30fc\u30eb\u30b9\u30c8\u30f3",\n    "pt-BR": "North Charleston",\n    "ru": "\u041d\u043e\u0440\u0442-\u0427\u0430\u0440\u043b\u0441\u0442\u043e\u043d",\n    "zh-CN": "\u5317\u67e5\u5c14\u65af\u987f"\n  },\n  "country": {\n    "de": "Vereinigte Staaten",\n    "en": "United States",\n    "es": "Estados Unidos",\n    "fr": "\xc9tats Unis",\n    "ja": "\u30a2\u30e1\u30ea\u30ab",\n    "pt-BR": "EUA",\n    "ru": "\u0421\u0428\u0410",\n    "zh-CN": "\u7f8e\u56fd"\n  },\n  "subdivision": {\n    "en": "South Carolina",\n    "es": "Carolina del Sur",\n    "fr": "Caroline du Sud",\n    "ja": "\u30b5\u30a6\u30b9\u30ab\u30ed\u30e9\u30a4\u30ca\u5dde",\n    "pt-BR": "Carolina do Sul",\n    "ru": "\u042e\u0436\u043d\u0430\u044f \u041a\u0430\u0440\u043e\u043b\u0438\u043d\u0430",\n    "zh-CN": "\u5357\u5361\u7f57\u6765\u7eb3\u5dde"\n  },\n  "active_channel_count": 46,\n  "capacity": "111724126",\n  "opened_channel_count": 165,\n  "closed_channel_count": 1\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120"],response:'{\n  "public_key": "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n  "alias": "guggero",\n  "first_seen": 1608832520,\n  "updated_at": 1662440260,\n  "color": "#cccccc",\n  "sockets": "88.99.101.67:9735",\n  "as_number": 24940,\n  "city_id": null,\n  "country_id": 2921044,\n  "subdivision_id": null,\n  "longitude": 9.491,\n  "latitude": 51.2993,\n  "iso_code": "DE",\n  "as_organization": "Hetzner Online GmbH",\n  "city": null,\n  "country": {\n    "de": "Deutschland",\n    "en": "Germany",\n    "es": "Alemania",\n    "fr": "Allemagne",\n    "ja": "\u30c9\u30a4\u30c4\u9023\u90a6\u5171\u548c\u56fd",\n    "pt-BR": "Alemanha",\n    "ru": "\u0413\u0435\u0440\u043c\u0430\u043d\u0438\u044f",\n    "zh-CN": "\u5fb7\u56fd"\n  },\n  "subdivision": null,\n  "active_channel_count": 12,\n  "capacity": "66577093",\n  "opened_channel_count": 16,\n  "closed_channel_count": 0\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-historical-node-stats",title:"GET Historical Node Stats",description:{default:"<p>Returns historical stats for a node with the given <code>:pubKey</code>.</p>"},urlString:"/v1/lightning/nodes/:pubKey/statistics",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/nodes/%{1}/statistics",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["033ac2f9f7ff643c235cc247c521663924aff73b26b38118a6c6821460afcde1b3"],response:'[\n  {\n    "added": 1661817600,\n    "capacity": 31505027,\n    "channels": 55\n  },\n  {\n    "added": 1661731200,\n    "capacity": 31505027,\n    "channels": 55\n  },\n  {\n    "added": 1655078400,\n    "capacity": 26487523,\n    "channels": 43\n  },\n  {\n    "added": 1654992000,\n    "capacity": 32692287,\n    "channels": 57\n  },\n  {\n    "added": 1654905600,\n    "capacity": 32692287,\n    "channels": 57\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["0225ff2ae6a3d9722b625072503c2f64f6eddb78d739379d2ee55a16b3b0ed0a17"],response:'[\n  {\n    "added": 1662422400,\n    "capacity": 7038263480,\n    "channels": 95\n  },\n  {\n    "added": 1662336000,\n    "capacity": 7038263480,\n    "channels": 95\n  },\n  {\n    "added": 1662249600,\n    "capacity": 7038263480,\n    "channels": 95\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120"],response:'[\n  {\n    "added": 1662422400,\n    "capacity": 66577093,\n    "channels": 12\n  },\n  {\n    "added": 1662336000,\n    "capacity": 63477093,\n    "channels": 9\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-channel",title:"GET Channel",description:{default:"<p>Returns info about a Lightning channel with the given <code>:channelId</code>.</p>"},urlString:"/v1/lightning/channels/:channelId",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/channels/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["768457472831193088"],response:'{\n  "id": "768457472831193088",\n  "short_id": "698908x1305x0",\n  "capacity": 16777215,\n  "transaction_id": "9f248ff82f6ff4c112c218438cfde8260623663bc85a360d09a13b9a9b083564",\n  "transaction_vout": 0,\n  "closing_transaction_id": null,\n  "closing_reason": null,\n  "updated_at": "2022-08-25T23:05:40.000Z",\n  "created": "2021-09-04T00:10:42.000Z",\n  "status": 1,\n  "node_left": {\n    "alias": "CoinGate",\n    "public_key": "0242a4ae0c5bef18048fbecf995094b74bfb0f7391418d71ed394784373f41e4f3",\n    "channels": 1,\n    "capacity": 20000,\n    "base_fee_mtokens": 1000,\n    "cltv_delta": 0,\n    "fee_rate": 1,\n    "is_disabled": 0,\n    "max_htlc_mtokens": 16609443000,\n    "min_htlc_mtokens": 1000,\n    "updated_at": "2022-08-25T23:05:40.000Z",\n    "longitude": 8.6843,\n    "latitude": 50.1188\n  },\n  "node_right": {\n    "alias": "Blixt Wallet \u{1f7e1}",\n    "public_key": "0230a5bca558e6741460c13dd34e636da28e52afd91cf93db87ed1b0392a7466eb",\n    "channels": 3,\n    "capacity": 34754430,\n    "base_fee_mtokens": 1000,\n    "cltv_delta": 0,\n    "fee_rate": 180,\n    "is_disabled": 0,\n    "max_htlc_mtokens": 16609443000,\n    "min_htlc_mtokens": 1000,\n    "updated_at": "2022-08-25T18:44:00.000Z",\n    "longitude": 9.491,\n    "latitude": 51.2993\n  }\n}'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["2478509215728271360"],response:'{\n  "id": "2478509215728271360",\n  "short_id": "2254191x4x0",\n  "capacity": 16777215,\n  "transaction_id": "6b711b07b019d73ad432f401c01ac6ea253fbe2778388e5a686b5777678556c7",\n  "transaction_vout": 0,\n  "closing_transaction_id": null,\n  "closing_reason": null,\n  "updated_at": "2022-08-31T08:30:42.000Z",\n  "created": "2022-06-05T16:26:31.000Z",\n  "status": 1,\n  "node_left": {\n    "alias": "scarce-city-testnet",\n    "public_key": "0304fa1da67d441b382e3b2142a1980840276d89b6477812da8d26487b5ffa938c",\n    "channels": 15,\n    "capacity": 104876207,\n    "base_fee_mtokens": 1000,\n    "cltv_delta": 0,\n    "fee_rate": 1,\n    "is_disabled": 0,\n    "max_htlc_mtokens": 16777215000,\n    "min_htlc_mtokens": 1000,\n    "updated_at": "2022-08-31T08:30:42.000Z",\n    "longitude": -123.1236,\n    "latitude": 49.2526\n  },\n  "node_right": {\n    "alias": "STRANGEIRON",\n    "public_key": "0225ff2ae6a3d9722b625072503c2f64f6eddb78d739379d2ee55a16b3b0ed0a17",\n    "channels": 95,\n    "capacity": 7038263480,\n    "base_fee_mtokens": 0,\n    "cltv_delta": 0,\n    "fee_rate": 10,\n    "is_disabled": 0,\n    "max_htlc_mtokens": 16609443000,\n    "min_htlc_mtokens": 1,\n    "updated_at": "2022-08-27T20:22:06.000Z",\n    "longitude": 144.9669,\n    "latitude": -37.8159\n  }\n}'},codeSampleSignet:{esModule:[],commonJS:[],curl:["58998694435160064"],response:'{\n  "id": "58998694435160064",\n  "short_id": "53659x5x0",\n  "capacity": 16777215,\n  "transaction_id": "cbb18e4b23c2a27736fa5be559fee7efcc855f2dfb1f16b125f686c307513ef3",\n  "transaction_vout": 0,\n  "closing_transaction_id": null,\n  "closing_reason": null,\n  "updated_at": "2022-09-04T10:15:51.000Z",\n  "created": "2021-09-02T07:08:40.000Z",\n  "status": 1,\n  "node_left": {\n    "alias": "STRANGESUCKER-v0.12.0-11-gea4143",\n    "public_key": "03b9e6c1dec203f47efc95d003314d22cbb12a1324de4b091fe7d68f321a56322f",\n    "channels": 4,\n    "capacity": 55778192,\n    "base_fee_mtokens": 0,\n    "cltv_delta": 0,\n    "fee_rate": 0,\n    "is_disabled": 0,\n    "max_htlc_mtokens": 16609443000,\n    "min_htlc_mtokens": 1,\n    "updated_at": "2022-09-04T10:15:51.000Z",\n    "longitude": 19.1477,\n    "latitude": 48.7386\n  },\n  "node_right": {\n    "alias": "guggero",\n    "public_key": "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n    "channels": 12,\n    "capacity": 66577093,\n    "base_fee_mtokens": 1000,\n    "cltv_delta": 0,\n    "fee_rate": 1,\n    "is_disabled": 0,\n    "max_htlc_mtokens": 16777215000,\n    "min_htlc_mtokens": 1000,\n    "updated_at": "2022-09-01T22:57:40.000Z",\n    "longitude": 9.491,\n    "latitude": 51.2993\n  }\n}'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-channels-from-txid",title:"GET Channels from TXID",description:{default:"<p>Returns channels that correspond to the given <code>:txid</code> (multiple transaction IDs can be specified).</p>"},urlString:"/v1/lightning/channels/txids?txId[]=:txid",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/channels/txids?txId[]=%{1}&txId[]=%{2}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["c3173549f502ede6440d5c48ea74af5607d88484c7a912bbef73d430049f8af4","d78f0b41a263af3df91fa4171cc2f60c40196aaf8f4bde5d1c8ff4474cfe753b"],response:'[\n  {\n    "inputs": {},\n    "outputs": {\n      "1": {\n        "id": "819296691409584129",\n        "short_id": "745146x287x1",\n        "capacity": 300000000,\n        "transaction_id": "c3173549f502ede6440d5c48ea74af5607d88484c7a912bbef73d430049f8af4",\n        "transaction_vout": 1,\n        "closing_transaction_id": null,\n        "closing_reason": null,\n        "updated_at": "2022-08-25T18:44:07.000Z",\n        "created": "2022-07-16T00:11:33.000Z",\n        "status": 1,\n        "node_left": {\n          "alias": "River Financial 1",\n          "public_key": "03037dc08e9ac63b82581f79b662a4d0ceca8a8ca162b1af3551595b8f2d97b70a",\n          "base_fee_mtokens": 0,\n          "cltv_delta": 0,\n          "fee_rate": 500,\n          "is_disabled": 0,\n          "max_htlc_mtokens": 297000000000,\n          "min_htlc_mtokens": 1000,\n          "updated_at": "2022-08-23T17:53:43.000Z"\n        },\n        "node_right": {\n          "alias": "0204a91bb5802ad0a799",\n          "public_key": "0204a91bb5802ad0a799acfd86ef566da03d80cc9e13acb01e680634bf64188a0d",\n          "base_fee_mtokens": 0,\n          "cltv_delta": 0,\n          "fee_rate": 152,\n          "is_disabled": 0,\n          "max_htlc_mtokens": 297000000000,\n          "min_htlc_mtokens": 1000,\n          "updated_at": "2022-08-25T18:44:07.000Z"\n        }\n      }\n    }\n  },\n  {\n    "inputs": {},\n    "outputs": {\n      "1": {\n        "id": "814662250034036737",\n        "short_id": "740931x2355x1",\n        "capacity": 300000000,\n        "transaction_id": "d78f0b41a263af3df91fa4171cc2f60c40196aaf8f4bde5d1c8ff4474cfe753b",\n        "transaction_vout": 1,\n        "closing_transaction_id": null,\n        "closing_reason": null,\n        "updated_at": "2022-08-28T18:54:40.000Z",\n        "created": "2022-06-15T16:18:33.000Z",\n        "status": 1,\n        "node_left": {\n          "alias": "bfx-lnd0",\n          "public_key": "033d8656219478701227199cbd6f670335c8d408a92ae88b962c49d4dc0e83e025",\n          "base_fee_mtokens": 1000,\n          "cltv_delta": 0,\n          "fee_rate": 1,\n          "is_disabled": 0,\n          "max_htlc_mtokens": 297000000000,\n          "min_htlc_mtokens": 1000,\n          "updated_at": "2022-08-25T18:44:03.000Z"\n        },\n        "node_right": {\n          "alias": "River Financial 1",\n          "public_key": "03037dc08e9ac63b82581f79b662a4d0ceca8a8ca162b1af3551595b8f2d97b70a",\n          "base_fee_mtokens": 0,\n          "cltv_delta": 0,\n          "fee_rate": 750,\n          "is_disabled": 0,\n          "max_htlc_mtokens": 297000000000,\n          "min_htlc_mtokens": 1000,\n          "updated_at": "2022-08-28T18:54:40.000Z"\n        }\n      }\n    }\n  }\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["6b711b07b019d73ad432f401c01ac6ea253fbe2778388e5a686b5777678556c7"],response:'[\n  {\n    "inputs": {},\n    "outputs": {\n      "0": {\n        "id": "2478509215728271360",\n        "short_id": "2254191x4x0",\n        "capacity": 16777215,\n        "transaction_id": "6b711b07b019d73ad432f401c01ac6ea253fbe2778388e5a686b5777678556c7",\n        "transaction_vout": 0,\n        "closing_transaction_id": null,\n        "closing_reason": null,\n        "updated_at": "2022-08-31T08:30:42.000Z",\n        "created": "2022-06-05T16:26:31.000Z",\n        "status": 1,\n        "node_left": {\n          "alias": "scarce-city-testnet",\n          "public_key": "0304fa1da67d441b382e3b2142a1980840276d89b6477812da8d26487b5ffa938c",\n          "base_fee_mtokens": 1000,\n          "cltv_delta": 0,\n          "fee_rate": 1,\n          "is_disabled": 0,\n          "max_htlc_mtokens": 16777215000,\n          "min_htlc_mtokens": 1000,\n          "updated_at": "2022-08-31T08:30:42.000Z"\n        },\n        "node_right": {\n          "alias": "STRANGEIRON",\n          "public_key": "0225ff2ae6a3d9722b625072503c2f64f6eddb78d739379d2ee55a16b3b0ed0a17",\n          "base_fee_mtokens": 0,\n          "cltv_delta": 0,\n          "fee_rate": 10,\n          "is_disabled": 0,\n          "max_htlc_mtokens": 16609443000,\n          "min_htlc_mtokens": 1,\n          "updated_at": "2022-08-27T20:22:06.000Z"\n        }\n      }\n    }\n  }\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["cbb18e4b23c2a27736fa5be559fee7efcc855f2dfb1f16b125f686c307513ef3"],response:'[\n  {\n    "inputs": {},\n    "outputs": {\n      "0": {\n        "id": "58998694435160064",\n        "short_id": "53659x5x0",\n        "capacity": 16777215,\n        "transaction_id": "cbb18e4b23c2a27736fa5be559fee7efcc855f2dfb1f16b125f686c307513ef3",\n        "transaction_vout": 0,\n        "closing_transaction_id": null,\n        "closing_reason": null,\n        "updated_at": "2022-09-04T10:15:51.000Z",\n        "created": "2021-09-02T07:08:40.000Z",\n        "status": 1,\n        "node_left": {\n          "alias": "STRANGESUCKER-v0.12.0-11-gea4143",\n          "public_key": "03b9e6c1dec203f47efc95d003314d22cbb12a1324de4b091fe7d68f321a56322f",\n          "base_fee_mtokens": 0,\n          "cltv_delta": 0,\n          "fee_rate": 0,\n          "is_disabled": 0,\n          "max_htlc_mtokens": 16609443000,\n          "min_htlc_mtokens": 1,\n          "updated_at": "2022-09-04T10:15:51.000Z"\n        },\n        "node_right": {\n          "alias": "guggero",\n          "public_key": "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n          "base_fee_mtokens": 1000,\n          "cltv_delta": 0,\n          "fee_rate": 1,\n          "is_disabled": 0,\n          "max_htlc_mtokens": 16777215000,\n          "min_htlc_mtokens": 1000,\n          "updated_at": "2022-09-01T22:57:40.000Z"\n        }\n      }\n    }\n  }\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-channels-from-pubkey",title:"GET Channels from Node Pubkey",description:{default:"<p>Returns a list of a node's channels given its <code>:pubKey</code>. Ten channels are returned at a time. Use <code>:index</code> for paging. <code>:channelStatus</code> can be <code>open</code>, <code>active</code>, or <code>closed</code>.</p>"},urlString:"/v1/lightning/channels?public_key=:pubKey&status=:channelStatus",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/channels?public_key=%{1}&status=%{2}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["026165850492521f4ac8abd9bd8088123446d126f648ca35e60f88177dc149ceb2","open"],response:'[\n  {\n    "status": 1,\n    "closing_reason": null,\n    "capacity": 59200000,\n    "short_id": "751361x1324x1",\n    "id": "826130156244172801",\n    "fee_rate": 1,\n    "node": {\n      "alias": "ipayblue.com",\n      "public_key": "032fe854a231aeb2357523ee6ca263ae04ce53eee8a13767ecbb911b69fefd8ace",\n      "channels": 65,\n      "capacity": "856675361"\n    }\n  },\n  {\n    "status": 1,\n    "closing_reason": null,\n    "capacity": 51000000,\n    "short_id": "750792x1586x1",\n    "id": "825504534145138689",\n    "fee_rate": 1,\n    "node": {\n      "alias": "Escher",\n      "public_key": "02b515c74f334dee09821bee299fcbd9668182730c5719b25a8f262b28893198b0",\n      "channels": 50,\n      "capacity": "2202925844"\n    }\n  },\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["0200202c1f23899d03bf3f37c87d348e6847bbd91e407df91a713c7dcf3442738b","open"],response:'[\n  {\n    "status": 1,\n    "closing_reason": null,\n    "closing_date": null,\n    "capacity": 8000000,\n    "short_id": "2223130x18x0",\n    "id": "2444357285058838528",\n    "fee_rate": 10,\n    "node": {\n      "alias": "Gilgamesh Lightning Testnet",\n      "public_key": "034997a34858a25dc453a722efc1545d8c7749cbd4587a8d2ef149d257babd8357",\n      "channels": 121,\n      "capacity": "512199932"\n    }\n  },\n  {\n    "status": 0,\n    "closing_reason": null,\n    "closing_date": null,\n    "capacity": 1000000,\n    "short_id": "2223130x19x0",\n    "id": "2444357285058904064",\n    "fee_rate": 0,\n    "node": {\n      "alias": "routing.testnet.lnmarkets.com",\n      "public_key": "03bae2db4b57738c1ec1ffa1c5e5a4423968cc592b3b39cddf7d495e72919d6431",\n      "channels": 22,\n      "capacity": "246940161"\n    }\n  },\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120","open"],response:'[\n  {\n    "status": 1,\n    "closing_reason": null,\n    "closing_date": null,\n    "capacity": 16777215,\n    "short_id": "53659x5x0",\n    "id": "58998694435160064",\n    "fee_rate": 1,\n    "node": {\n      "alias": "STRANGESUCKER-v0.12.0-11-gea4143",\n      "public_key": "03b9e6c1dec203f47efc95d003314d22cbb12a1324de4b091fe7d68f321a56322f",\n      "channels": 4,\n      "capacity": "55778192"\n    }\n  },\n  {\n    "status": 1,\n    "closing_reason": null,\n    "closing_date": null,\n    "capacity": 15000000,\n    "short_id": "17498x2x1",\n    "id": "19239254462955521",\n    "fee_rate": 1,\n    "node": {\n      "alias": "03870a4c4c54a9b2e705",\n      "public_key": "03870a4c4c54a9b2e705023d706843ffbac5b0e95e2b80d4b02dc7a9efb5380322",\n      "channels": 2,\n      "capacity": "30000000"\n    }\n  },\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-channel-geodata",title:"GET Channel Geodata",description:{default:"<p>Returns a list of channels with corresponding node geodata.</p>"},urlString:"/v1/lightning/channels-geo",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/channels-geo",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],response:'[\n  [\n    "03120ac28af913889cbc3cb86d7aff12bc0abe939f1fa9fb1980bdff8483197092",\n    "LIGHTNING2",\n    -77.2278,\n    38.9567,\n    "03baa70886d9200af0ffbd3f9e18d96008331c858456b16e3a9b41e735c6208fef",\n    "LIGHTNING",\n    -77.2278,\n    38.9567\n  ],\n  [\n    "033d8656219478701227199cbd6f670335c8d408a92ae88b962c49d4dc0e83e025",\n    "bfx-lnd0",\n    8.5671,\n    47.3682,\n    "028d98b9969fbed53784a36617eb489a59ab6dc9b9d77fcdca9ff55307cd98e3c4",\n    "OpenNode.com",\n    -83.0061,\n    39.9625\n  ],\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:[],response:'[\n  [\n    "038863cf8ab91046230f561cd5b386cbff8309fa02e3f0c3ed161a3aeb64a643b9",\n    "aranguren.org",\n    144.9669,\n    -37.8159,\n    "028c3640c57ffe47eb41db8225968833c5032f297aeba98672d6f7037090d59e3f",\n    "lndus0.next.zaphq.io",\n    -79.9746,\n    32.8608\n  ],\n  [\n    "02be8f360e57600486b93dd33ea0872a4e14a259924ba4084f27d693a77d151158",\n    "lndus1.dev.zaphq.io",\n    -79.9746,\n    32.8608,\n    "0273ec4a4c80e767aca1477592649ad6e709ad31e7435668043a9dceccb3020f35",\n    "lndwr1.dev.zaphq.io",\n    -79.9746,\n    32.8608\n  ],\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:[],response:'[\n  [\n    "02dadf6c28f3284d591cd2a4189d1530c1ff82c07059ebea150a33ab76e7364b4a",\n    "\u73e0\u7f8e\u30ce\u30fc\u30c9\u26a1@wakiyamap",\n    139.6895,\n    35.6897,\n    "0271cf3881e6eadad960f47125434342e57e65b98a78afa99f9b4191c02dd7ab3b",\n    "eclair@wakiyamap",\n    135.4911,\n    34.7135\n  ],\n  [\n    "03b9e6c1dec203f47efc95d003314d22cbb12a1324de4b091fe7d68f321a56322f",\n    "STRANGESUCKER-v0.12.0-11-gea4143",\n    19.1477,\n    48.7386,\n    "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n    "guggero",\n    9.491,\n    51.2993\n  ],\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"endpoint",category:"lightning",httpRequestMethod:"GET",fragment:"get-channel-geodata-node",title:"GET Channel Geodata for Node",description:{default:"<p>Returns a list of channels with corresponding geodata for a node with the given <code>:pubKey</code>.</p>"},urlString:"/v1/lightning/channels-geo/:pubKey",showConditions:h,showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/lightning/channels-geo/%{1}",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["03d607f3e69fd032524a867b288216bfab263b6eaee4e07783799a6fe69bb84fac"],response:'[\n  [\n    "03d607f3e69fd032524a867b288216bfab263b6eaee4e07783799a6fe69bb84fac",\n    "Bitrefill",\n    -77.4903,\n    39.0469,\n    "024a2e265cd66066b78a788ae615acdc84b5b0dec9efac36d7ac87513015eaf6ed",\n    "Bitrefill",\n    -6.2591,\n    53.3379\n  ],\n  [\n    "03d607f3e69fd032524a867b288216bfab263b6eaee4e07783799a6fe69bb84fac",\n    "Bitrefill",\n    -77.4903,\n    39.0469,\n    "030c3f19d742ca294a55c00376b3b355c3c90d61c6b6b39554dbc7ac19b141c14f",\n    "Bitrefill Routing",\n    -6.2591,\n    53.3379\n  ],\n  ...\n]'},codeSampleTestnet:{esModule:[],commonJS:[],curl:["0273ec4a4c80e767aca1477592649ad6e709ad31e7435668043a9dceccb3020f35"],response:'[\n  [\n    "039b1717db1193eb332d3c0bfdcce90a6aab60efa478b60963d3b406a8fc45134a",\n    "testnet.demo.btcpayserver.org",\n    -79.3503,\n    43.7806,\n    "0273ec4a4c80e767aca1477592649ad6e709ad31e7435668043a9dceccb3020f35",\n    "lndwr1.dev.zaphq.io",\n    -79.9746,\n    32.8608\n  ],\n  [\n    "0273ec4a4c80e767aca1477592649ad6e709ad31e7435668043a9dceccb3020f35",\n    "lndwr1.dev.zaphq.io",\n    -79.9746,\n    32.8608,\n    "02c6fbedc6ca81d4db5883f1d01481c8187d5f85075729a658288a6d507f770ada",\n    "HAPPYTOLL",\n    -97.822,\n    37.751\n  ],\n  ...\n]'},codeSampleSignet:{esModule:[],commonJS:[],curl:["02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120"],response:'[\n  [\n    "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n    "guggero",\n    9.491,\n    51.2993,\n    "0271cf3881e6eadad960f47125434342e57e65b98a78afa99f9b4191c02dd7ab3b",\n    "eclair@wakiyamap",\n    135.4911,\n    34.7135\n  ],\n  [\n    "02dadf6c28f3284d591cd2a4189d1530c1ff82c07059ebea150a33ab76e7364b4a",\n    "\u73e0\u7f8e\u30ce\u30fc\u30c9\u26a1@wakiyamap",\n    139.6895,\n    35.6897,\n    "02ad48db0d1a7f7c3d186ddc57f8e62c49a1234fb829af9ccd3be1a4596bc39120",\n    "guggero",\n    9.491,\n    51.2993\n  ],\n  ...\n]'},codeSampleLiquid:n,codeSampleLiquidTestnet:n}}},{type:"category",category:"accelerator-public",fragment:"accelerator-public",title:"Accelerator (Public)",showConditions:[""],options:{officialOnly:!0}},{options:{officialOnly:!0},type:"endpoint",category:"accelerator-public",httpRequestMethod:"POST",fragment:"accelerator-estimate",title:"POST Calculate Estimated Costs",description:{default:"<p>Returns estimated costs to accelerate a transaction. Optionally set the <code>X-Mempool-Auth</code> header to get customized estimation.</p>"},urlString:"/v1/services/accelerator/estimate",showConditions:[""],showJsExamples:l,codeExample:{default:{codeTemplate:{curl:'%{1}" "[[hostname]][[baseNetworkUrl]]/api/v1/services/accelerator/estimate',commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["txInput=ee13ebb99632377c15c94980357f674d285ac413452050031ea6dcd3e9b2dc29"],headers:"X-Mempool-Auth: stacksats",response:'{\n  "txSummary": {\n    "txid": "ee13ebb99632377c15c94980357f674d285ac413452050031ea6dcd3e9b2dc29",\n    "effectiveVsize": 154,\n    "effectiveFee": 154,\n    "ancestorCount": 1\n  },\n  "cost": 1386,\n  "targetFeeRate": 10,\n  "nextBlockFee": 1540,\n  "userBalance": 0,\n  "mempoolBaseFee": 50000,\n  "vsizeFee": 0,\n  "pools": [\n    111,\n    102,\n    112,\n    142,\n    115\n  ],\n  "options": [\n    {\n      "fee": 1500\n    },\n    {\n      "fee": 3000\n    },\n    {\n      "fee": 12500\n    }\n  ],\n  "hasAccess": false,\n  "availablePaymentMethods": {\n    "bitcoin": {\n      "enabled": true,\n      "min": 1000,\n      "max": 10000000\n    },\n    "cashapp": {\n      "enabled": true,\n      "min": 10,\n      "max": 200\n    }\n  },\n  "unavailable": false\n}'}}}},{options:{officialOnly:!0},type:"endpoint",category:"accelerator-public",httpRequestMethod:"POST",fragment:"accelerator-get-invoice",title:"POST Generate Acceleration Invoice",description:{default:"<p>Request a LN invoice to accelerate a transaction.</p>"},urlString:"/v1/services/payments/bitcoin",showConditions:[""],showJsExamples:l,codeExample:{default:{codeTemplate:{curl:'%{1}" "[[hostname]][[baseNetworkUrl]]/api/v1/services/payments/bitcoin',commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["product=ee13ebb99632377c15c94980357f674d285ac413452050031ea6dcd3e9b2dc29&amount=12500"],headers:"",response:'[\n  {\n    "btcpayInvoiceId": "4Ww53d7VgSa596jmCFufe7",\n    "btcDue": "0.000625",\n    "addresses": {\n      "EAC": "bc1qcvqx2kr5mktd7gvym0atrrx0sn27mwv5kkghl3m78kegndm5t8ksvcqpja",\n      "EAC_LNURLPAY": null,\n      "EAC_LightningLike": "lnbc625u1pngl0wzpp56j7cqghsw2y5q7vdu9shmpxgpzsx4pqra4wcm9vdnvqegutplk2qdxj2pskjepqw3hjqnt9d4cx7mmvypqkxcm9d3jhyct5daezq2z0wfjx2u3qf9zr5grpvd3k2mr9wfshg6t0dckk2ef3xdjkyc3e8ymrxv3nxumkxvf4vvungwfcxqen2dmxxcmngepj8q6kzce5xyengdfjxq6nqvpnx9jkzdnyvdjrxefevgexgcej8yknzdejxqmrjd3jx5mrgdpj9ycqzpuxqrpr5sp58593dzj2uauaj3afa7x47qeam8k9yyqrh9qasj2ssdzstew6qv3q9qxpqysgqj8qshfkxmj0gfkly5xfydysvsx55uhnc6fgpw66uf6hl8leu07454axe2kq0q788yysg8guel2r36d6f75546nkhmdcmec4mmlft8dsq62rnsj"\n    }\n  }\n]'}}}},{options:{officialOnly:!0},type:"endpoint",category:"accelerator-public",httpRequestMethod:"GET",fragment:"accelerator-pending",title:"GET Pending Accelerations",description:{default:"<p>Returns all transactions currently being accelerated.</p>"},urlString:"/v1/services/accelerator/accelerations",showConditions:[""],showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/services/accelerator/accelerations",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],headers:"",response:'[\n  {\n    "txid": "8a183c8ae929a2afb857e7f2acd440aaefdf2797f8f7eab1c5f95ff8602abc81",\n    "added": 1707558316,\n    "feeDelta": 3500,\n    "effectiveVsize": 111,\n    "effectiveFee": 1671,\n    "pools": [\n      111\n    ]\n  },\n  {\n    "txid": "6097f295e21bdd8d725bd8d9ad4dd72b05bd795dc648bfef52150a9b2b7f7a45",\n    "added": 1707560464,\n    "feeDelta": 60000,\n    "effectiveVsize": 812,\n    "effectiveFee": 7790,\n    "pools": [\n      111\n    ]\n  }\n]'}}}},{options:{officialOnly:!0},type:"endpoint",category:"accelerator-public",httpRequestMethod:"GET",fragment:"accelerator-public-history",title:"GET Acceleration History",description:{default:'<p>Returns all past accelerated transactions.\n      Filters can be applied:<ul>\n      <li><code>status</code>: <code>all</code>, <code>requested</code>, <code>accelerating</code>, <code>mined</code>, <code>completed</code>, <code>failed</code></li>\n      <li><code>timeframe</code>: <code>24h</code>, <code>3d</code>, <code>1w</code>, <code>1m</code>, <code>3m</code>, <code>6m</code>, <code>1y</code>, <code>2y</code>, <code>3y</code>, <code>4y</code>, <code>all</code></li>\n      <li><code>minedByPoolUniqueId</code>: any id from <a target="_blank" href="https://github.com/mempool/mining-pools/blob/master/pools-v2.json">pools-v2.json</a>\n      <li><code>blockHash</code>: a block hash</a>\n      <li><code>blockHeight</code>: a block height</a>\n      <li><code>page</code>: the requested page number if using pagination <i>(min: 1)</i></a>\n      <li><code>pageLength</code>: the page lenght if using pagination <i>(min: 1, max: 50)</i></a>\n      <li><code>from</code>: unix timestamp (<i>overrides <code>timeframe</code></i>)</a>\n      <li><code>to</code>: unix timestamp (<i>overrides <code>timeframe</code></i>)</a>\n      </ul></p>'},urlString:"/v1/services/accelerator/accelerations/history",showConditions:[""],showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/services/accelerator/accelerations/history?blockHash=00000000000000000000482f0746d62141694b9210a813b97eb8445780a32003",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],headers:"",response:'[\n  {\n    "txid": "f829900985aad885c13fb90555d27514b05a338202c7ef5d694f4813ad474487",\n    "status": "completed_provisional",\n    "added": 1728111527,\n    "lastUpdated": 1728112113,\n    "effectiveFee": 1385,\n    "effectiveVsize": 276,\n    "feeDelta": 3000,\n    "blockHash": "00000000000000000000cde89e34036ece454ca2d07ddd7f71ab46307ca87423",\n    "blockHeight": 864248,\n    "bidBoost": 65,\n    "boostVersion": "v2",\n    "pools": [\n      111,\n      115,\n    ],\n    "minedByPoolUniqueId": 115\n  }\n]'}}}},{type:"category",category:"accelerator-private",fragment:"accelerator-private",title:"Accelerator (Authenticated)",showConditions:[""],options:{officialOnly:!0}},{options:{officialOnly:!0},type:"endpoint",category:"accelerator-private",httpRequestMethod:"GET",fragment:"accelerator-top-up-history",title:"GET Top Up History",description:{default:"<p>Returns a list of top ups the user has made as prepayment for the accelerator service.</p>"},urlString:"/v1/services/accelerator/top-up-history",showConditions:[""],showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/services/accelerator/top-up-history",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],headers:"X-Mempool-Auth: stacksats",response:'[\n  {\n    "type": "Earthcoin",\n    "invoiceId": "CCunucVyNw7jUiUz64mmHz",\n    "amount": 10311031,\n    "status": "pending",\n    "date": 1706372653000,\n    "link": "/payment/bitcoin/CCunucVyNw7jUiUz64mmHz"\n  },\n  {\n    "type": "Earthcoin",\n    "invoiceId": "SG1U27R9PdWi3gH3jB9tm9",\n    "amount": 21000000,\n    "status": "paid",\n    "date": 1706372582000,\n    "link": null\n  },\n  ...\n]'}}}},{options:{officialOnly:!0},type:"endpoint",category:"accelerator-private",httpRequestMethod:"GET",fragment:"accelerator-balance",title:"GET Available Balance",description:{default:"<p>Returns the user's currently available balance, currently locked funds, and total fees paid so far.</p>"},urlString:"/v1/services/accelerator/balance",showConditions:[""],showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/services/accelerator/balance",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],headers:"X-Mempool-Auth: stacksats",response:'{\n  "balance": 99900000,\n  "hold": 101829,\n  "feesPaid": 133721\n}'}}}},{options:{officialOnly:!0},type:"endpoint",category:"accelerator-private",httpRequestMethod:"POST",fragment:"accelerator-accelerate",title:"POST Accelerate A Transaction (Pro)",description:{default:"<p>Sends a request to accelerate a transaction.</p>"},urlString:"/v1/services/accelerator/accelerate",showConditions:[""],showJsExamples:l,codeExample:{default:{codeTemplate:{curl:'%{1}" "[[hostname]][[baseNetworkUrl]]/api/v1/services/accelerator/accelerate',commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:["txInput=ee13ebb99632377c15c94980357f674d285ac413452050031ea6dcd3e9b2dc29&userBid=21000000"],headers:"X-Mempool-Auth: stacksats",response:"HTTP/1.1 200 OK"}}}},{options:{officialOnly:!0},type:"endpoint",category:"accelerator-private",httpRequestMethod:"GET",fragment:"accelerator-history",title:"GET Acceleration History",description:{default:"<p>Returns the user's past acceleration requests.</p><p>Pass one of the following for <code>:status</code>: <code>all</code>, <code>requested</code>, <code>accelerating</code>, <code>mined</code>, <code>completed</code>, <code>failed</code>. Pass <code>true</code> in <code>:details</code> to get a detailed <code>history</code> of the acceleration request.</p>"},urlString:"/v1/services/accelerator/history?status=:status&details=:details",showConditions:[""],showJsExamples:l,codeExample:{default:{codeTemplate:{curl:"/api/v1/services/accelerator/history?status=all&details=true",commonJS:"",esModule:""},codeSampleMainnet:{esModule:[],commonJS:[],curl:[],headers:"X-Mempool-Auth: stacksats",response:'[\n  {\n    "id": 89,\n    "user_id": 1,\n    "txid": "ae2639469ec000ed1d14e2550cbb01794e1cd288a00cdc7cce18398ba3cc2ffe",\n    "status": "failed"\n    "fee_paid": 0,\n    "added": 1706378712,\n    "last_updated": 1706378712,\n    "confirmations": 4,\n    "base_fee": 0,\n    "vsize_fee": 0,\n    "max_bid": 7000,\n    "effective_vsize": 135,\n    "effective_fee": 3128,\n    "history": [\n      {\n        "event": "user-requested-acceleration",\n        "timestamp": 1706378712\n      },\n      {\n        "event": "accepted_test-api-key",\n        "timestamp": 1706378712\n      },\n      {\n        "event": "failed-at-block-827672",\n        "timestamp": 1706380261\n      }\n    ]\n  },\n  {\n    "id": 88,\n    "user_id": 1,\n    "txid": "c5840e89173331760e959a190b24e2a289121277ed7f8a095fe289b37cee9fde",\n    "status": "completed"\n    "fee_paid": 140019,\n    "added": 1706378704,\n    "last_updated": 1706380231,\n    "confirmations": 6,\n    "base_fee": 40000,\n    "vsize_fee": 100000,\n    "max_bid": 14000,\n    "effective_vsize": 135,\n    "effective_fee": 3152,\n    "history": [\n      {\n        "event": "user-requested-acceleration",\n        "timestamp": 1706378704\n      },\n      {\n        "event": "accepted_test-api-key",\n        "timestamp": 1706378704\n      },\n      {\n        "event": "complete-at-block-827670",\n        "timestamp": 1706380231\n      }\n    ]\n  },\n  {\n    "id": 87,\n    "user_id": 1,\n    "txid": "178b5b9b310f0d667d7ea563a2cdcc17bc8cd15261b58b1653860a724ca83458",\n    "status": "completed"\n    "fee_paid": 90062,\n    "added": 1706378684,\n    "last_updated": 1706380231,\n    "confirmations": 6,\n    "base_fee": 40000,\n    "vsize_fee": 50000,\n    "max_bid": 14000,\n    "effective_vsize": 135,\n    "effective_fee": 3260,\n    "history": [\n      {\n        "event": "user-requested-acceleration",\n        "timestamp": 1706378684\n      },\n      {\n        "event": "accepted_test-api-key",\n        "timestamp": 1706378684\n      },\n      {\n        "event": "complete-at-block-827670",\n        "timestamp": 1706380231\n      }\n    ]\n  }\n]'}}}}],D=[{type:"category",category:"basics",fragment:"basics",title:"Basics",showConditions:d},{type:"endpoint",category:"basics",showConditions:d,fragment:"what-is-a-mempool",title:"What is a mempool?"},{type:"endpoint",category:"basics",showConditions:d,fragment:"what-is-a-mempool-explorer",title:"What is a mempool explorer?"},{type:"endpoint",category:"basics",showConditions:d,fragment:"what-is-a-blockchain",title:"What is a blockchain?"},{type:"endpoint",category:"basics",showConditions:d,fragment:"what-is-a-block-explorer",title:"What is a block explorer?"},{type:"endpoint",category:"basics",showConditions:d,fragment:"what-is-mining",title:"What is mining?"},{type:"endpoint",category:"basics",showConditions:d,fragment:"what-are-mining-pools",title:"What are mining pools?"},{type:"endpoint",category:"basics",showConditions:d,fragment:"what-are-vb-wu",title:"What are virtual bytes (vB) and weight units (WU)?"},{type:"endpoint",category:"basics",showConditions:d,fragment:"what-is-svb",title:"What is sat/vB?"},{type:"category",category:"help",fragment:"help-stuck-transaction",title:"Help! My transaction is stuck",showConditions:d},{type:"endpoint",category:"help",showConditions:d,fragment:"why-is-transaction-stuck-in-mempool",title:"Why isn't my transaction confirming?"},{type:"endpoint",category:"help",showConditions:d,fragment:"how-to-get-transaction-confirmed-quickly",title:"How can I get my transaction confirmed more quickly?"},{type:"endpoint",category:"help",showConditions:d,fragment:"how-prevent-stuck-transaction",title:"How can I prevent a transaction from getting stuck in the future?"},{type:"category",category:"using",fragment:"using-this-website",title:"Using this website",showConditions:d},{type:"endpoint",category:"how-to",showConditions:d,fragment:"looking-up-transactions",title:"How can I look up a transaction?"},{type:"endpoint",category:"how-to",showConditions:d,fragment:"looking-up-addresses",title:"How can I look up an address?"},{type:"endpoint",category:"how-to",showConditions:d,fragment:"looking-up-blocks",title:"How can I look up a block?"},{type:"endpoint",category:"how-to",showConditions:d,fragment:"looking-up-fee-estimates",title:"How can I look up fee estimates?"},{type:"endpoint",category:"how-to",showConditions:d,fragment:"looking-up-historical-trends",title:"How can I explore historical trends?"},{type:"category",category:"advanced",fragment:"advanced",title:"Advanced",showConditions:d},{type:"endpoint",category:"advanced",showConditions:d,fragment:"what-is-full-mempool",title:'What does it mean for the mempool to be "full"?'},{type:"endpoint",category:"advanced",showConditions:d,fragment:"how-big-is-mempool-used-by-mempool-space",title:"How big is the mempool used by mempool.space?",options:{officialOnly:!0}},{type:"endpoint",category:"advanced",showConditions:d,fragment:"what-is-memory-usage",title:"What is memory usage?"},{type:"endpoint",category:"advanced",showConditions:d,fragment:"why-empty-blocks",title:"Why are there empty blocks?"},{type:"endpoint",category:"advanced",showConditions:d,fragment:"why-block-timestamps-dont-always-increase",title:"Why don't block timestamps always increase?"},{type:"endpoint",category:"advanced",showConditions:d,fragment:"why-dont-fee-ranges-match",title:"Why doesn't the fee range shown for a block match the feerates of transactions within the block?"},{type:"endpoint",category:"advanced",showConditions:d,options:{auditOnly:!0},fragment:"how-do-block-audits-work",title:"How do block audits work?"},{type:"endpoint",category:"advanced",showConditions:d,options:{auditOnly:!0},fragment:"what-is-block-health",title:"What is block health?"},{type:"endpoint",category:"advanced",showConditions:d,fragment:"how-do-mempool-goggles-work",title:"How do Mempool Goggles\u2122 work?"},{type:"endpoint",category:"advanced",showConditions:d,fragment:"what-are-sigops",title:"What are sigops?"},{type:"endpoint",category:"advanced",showConditions:d,fragment:"what-is-adjusted-vsize",title:"What is adjusted vsize?"},{type:"endpoint",category:"advanced",showConditions:d,fragment:"why-do-the-projected-block-fee-ranges-overlap",title:"Why do the projected block fee ranges overlap?"},{type:"category",category:"self-hosting",fragment:"self-hosting",title:"Self-Hosting",showConditions:d},{type:"endpoint",category:"self-hosting",showConditions:d,fragment:"who-runs-this-website",title:"Who runs this website?"},{type:"endpoint",category:"self-hosting",showConditions:d,fragment:"host-my-own-instance-raspberry-pi",title:"How can I host my own instance on a Raspberry Pi?"},{type:"endpoint",category:"self-hosting",showConditions:d,fragment:"host-my-own-instance-server",title:"How can I host a Mempool instance on my own server?"},{type:"endpoint",category:"self-hosting",showConditions:d,fragment:"install-mempool-with-docker",title:"Can I install Mempool using Docker?"},{type:"endpoint",category:"self-hosting",showConditions:d,fragment:"address-lookup-issues",title:"Why do I get an error for certain address lookups on my Mempool instance?"}];let R=(()=>{class a{constructor(t){this.template=t}static#e=this.\u0275fac=function(o){return new(o||a)(e.rXU(e.C4Q))};static#t=this.\u0275dir=e.FsC({type:a,selectors:[["ng-template","type",""]],inputs:{type:"type"}})}return a})();var P=b(60),H=b(1597),U=b(5025),X=b(7913),Y=b(9181);function K(a,s){if(1&a&&(e.j41(0,"div",15),e.qex(1),e.pXf(2,1),e.bVm(),e.nrm(3,"app-clipboard",16),e.k0s(),e.j41(4,"pre"),e.nrm(5,"code",17),e.k0s()),2&a){const t=e.XpG(2);e.R7$(3),e.Y8G("text",t.wrapCurlTemplate(t.code)),e.R7$(2),e.Y8G("innerText",t.wrapCurlTemplate(t.code))}}function W(a,s){if(1&a){const t=e.RV6();e.j41(0,"li",12)(1,"a",13),e.bIt("click",function(c){e.eBV(t);const i=e.XpG();return e.Njj(i.adjustContainerHeight(c))}),e.EFF(2,"cURL"),e.k0s(),e.DNE(3,K,6,2,"ng-template",14),e.k0s()}}function V(a,s){if(1&a&&(e.j41(0,"div",15),e.qex(1),e.pXf(2,2),e.bVm(),e.nrm(3,"app-clipboard",16),e.k0s(),e.j41(4,"div",18)(5,"a",19),e.EFF(6,"GitHub Repo"),e.k0s()(),e.j41(7,"pre"),e.nrm(8,"code",17),e.k0s()),2&a){const t=e.XpG(2);e.R7$(3),e.Y8G("text",t.wrapCommonJS(t.code)),e.R7$(2),e.Y8G("href",t.npmGithubLink(),e.B4B),e.R7$(3),e.Y8G("innerText",t.wrapCommonJS(t.code))}}function Z(a,s){if(1&a){const t=e.RV6();e.j41(0,"li",12)(1,"a",13),e.bIt("click",function(c){e.eBV(t);const i=e.XpG();return e.Njj(i.adjustContainerHeight(c))}),e.EFF(2,"CommonJS"),e.k0s(),e.DNE(3,V,9,3,"ng-template",14),e.k0s()}}function Q(a,s){if(1&a&&(e.j41(0,"div",15),e.qex(1),e.pXf(2,3),e.bVm(),e.nrm(3,"app-clipboard",16),e.k0s(),e.j41(4,"div",18)(5,"a",19),e.EFF(6,"GitHub Repo"),e.k0s(),e.j41(7,"a",19),e.EFF(8,"NPM Package"),e.k0s()(),e.j41(9,"pre"),e.nrm(10,"code",17),e.k0s(),e.j41(11,"div",15),e.qex(12),e.pXf(13,4),e.bVm(),e.nrm(14,"app-clipboard",16),e.k0s(),e.j41(15,"pre"),e.nrm(16,"code",17),e.k0s()),2&a){const t=e.XpG(2);e.R7$(3),e.Y8G("text",t.wrapImportTemplate()),e.R7$(2),e.Y8G("href",t.npmGithubLink(),e.B4B),e.R7$(2),e.Y8G("href",t.npmModuleLink(),e.B4B),e.R7$(3),e.Y8G("innerText",t.wrapImportTemplate()),e.R7$(4),e.Y8G("text",t.wrapEsModule(t.code)),e.R7$(2),e.Y8G("innerText",t.wrapEsModule(t.code))}}function ee(a,s){if(1&a){const t=e.RV6();e.j41(0,"li",12)(1,"a",13),e.bIt("click",function(c){e.eBV(t);const i=e.XpG();return e.Njj(i.adjustContainerHeight(c))}),e.EFF(2,"ES Module"),e.k0s(),e.DNE(3,Q,17,6,"ng-template",14),e.k0s()}}function te(a,s){if(1&a&&(e.j41(0,"div",15),e.qex(1),e.pXf(2,5),e.bVm(),e.nrm(3,"app-clipboard",16),e.k0s(),e.j41(4,"pre"),e.nrm(5,"code",17),e.k0s()),2&a){const t=e.XpG(2);e.R7$(3),e.Y8G("text",t.wrapPythonTemplate(t.code)),e.R7$(2),e.Y8G("innerText",t.wrapPythonTemplate(t.code))}}function ae(a,s){if(1&a){const t=e.RV6();e.j41(0,"li",12)(1,"a",13),e.bIt("click",function(c){e.eBV(t);const i=e.XpG();return e.Njj(i.adjustContainerHeight(c))}),e.EFF(2,"Python"),e.k0s(),e.DNE(3,te,6,2,"ng-template",14),e.k0s()}}function oe(a,s){if(1&a&&(e.j41(0,"div",20)(1,"div",15),e.qex(2),e.pXf(3,6),e.bVm(),e.nrm(4,"app-clipboard",16),e.k0s(),e.j41(5,"pre"),e.nrm(6,"code",17),e.k0s()()),2&a){const t=e.XpG();e.R7$(4),e.Y8G("text",t.wrapResponse(t.code)),e.R7$(2),e.Y8G("innerText",t.wrapResponse(t.code))}}let ce=(()=>{class a{constructor(t){this.stateService=t,this.method="GET"}ngOnInit(){this.env=this.stateService.env}adjustContainerHeight(t){if(window.innerWidth<=992&&"websocket"!==this.method){const o=new URL(window.location+""),c=document.querySelector(o.hash),i=document.querySelector(o.hash+" .endpoint-content");window.setTimeout(function(){c.style.height=i.clientHeight+90+"px"},550)}}npmGithubLink(){let t="https://github.com/mempool/mempool.js";return("liquid"===this.network||"liquidtestnet"===this.network)&&(t="https://github.com/mempool/mempool.js/tree/main/npm-liquid-js"),t}npmModuleLink(){let t="https://www.npmjs.org/package/@mempool/mempool.js";return("liquid"===this.network||"liquidtestnet"===this.network)&&(t="https://www.npmjs.org/package/@mempool/liquid.js"),t}normalizeHostsESModule(t){return"mempool"===this.env.BASE_MODULE&&(t=["liquid"].includes(this.network)?t.replace("%{0}",this.network):t.replace("%{0}","bitcoin"),t=["","main","liquid","liquidtestnet"].includes(this.network)?t.replace("mempoolJS();",`mempoolJS({\n    hostname: '${document.location.hostname}'\n  });`):t.replace("mempoolJS();",`mempoolJS({\n    hostname: '${document.location.hostname}',\n    network: '${this.network}'\n  });`)),"liquid"===this.env.BASE_MODULE&&(t=(t=t.replace("} = mempoolJS();"," = liquidJS();")).replace("{ %{0}: ","")),t}normalizeHostsCommonJS(t){return"mempool"===this.env.BASE_MODULE&&(t=["liquid"].includes(this.network)?t.replace("%{0}",this.network):t.replace("%{0}","bitcoin"),t=["","main","liquid"].includes(this.network)?t.replace("mempoolJS();",`mempoolJS({\n          hostname: '${document.location.hostname}'\n        });`):t.replace("mempoolJS();",`mempoolJS({\n          hostname: '${document.location.hostname}',\n          network: '${this.network}'\n        });`)),"liquid"===this.env.BASE_MODULE&&(t=(t=t.replace("} = mempoolJS();"," = liquidJS();")).replace("{ %{0}: ","")),t}wrapEsModule(t){let o;if(t.codeTemplate){o=this.normalizeHostsESModule(t.codeTemplate.esModule),(""===this.network||"main"===this.network)&&(o=this.replaceJSPlaceholder(o,t.codeSampleMainnet.esModule)),"testnet"===this.network&&(o=this.replaceJSPlaceholder(o,t.codeSampleTestnet.esModule)),"testnet4"===this.network&&(o=this.replaceJSPlaceholder(o,t.codeSampleTestnet.esModule)),"signet"===this.network&&(o=this.replaceJSPlaceholder(o,t.codeSampleSignet.esModule)),("liquid"===this.network||"liquidtestnet"===this.network)&&(o=this.replaceJSPlaceholder(o,t.codeSampleLiquid.esModule));let c='import mempoolJS from "@mempool/mempool.js";';return"liquid"===this.env.BASE_MODULE&&(c='import liquidJS from "@mempool/liquid.js";'),`${c}\n\nconst init = async () => {\n  ${o}\n};\n\ninit();`}}wrapCommonJS(t){let o;if(t.codeTemplate){if(o=this.normalizeHostsCommonJS(t.codeTemplate.commonJS),(""===this.network||"main"===this.network)&&(o=this.replaceJSPlaceholder(o,t.codeSampleMainnet.esModule)),"testnet"===this.network&&(o=this.replaceJSPlaceholder(o,t.codeSampleTestnet.esModule)),"testnet4"===this.network&&(o=this.replaceJSPlaceholder(o,t.codeSampleTestnet.esModule)),"signet"===this.network&&(o=this.replaceJSPlaceholder(o,t.codeSampleSignet.esModule)),("liquid"===this.network||"liquidtestnet"===this.network)&&(o=this.replaceJSPlaceholder(o,t.codeSampleLiquid.esModule)),t.noWrap)return o;let c='<script src="https://mempool.space/mempool.js"><\/script>';"liquid"===this.env.BASE_MODULE&&(c='<script src="https://liquid.network/liquid.js"><\/script>');let i='<pre id="result"></pre>';return"websocket"===this.method&&(i='<h2>Blocks</h2><pre id="result-blocks">Waiting for data</pre><br>\n    <h2>Mempool Info</h2><pre id="result-mempool-info">Waiting for data</pre><br>\n    <h2>Transactions</h2><pre id="result-transactions">Waiting for data</pre><br>\n    <h2>Mempool Blocks</h2><pre id="result-mempool-blocks">Waiting for data</pre><br>'),`<!DOCTYPE html>\n<html>\n  <head>\n    ${c}\n    <script>\n      const init = async () => {\n        ${o}\n      };\n      init();\n    <\/script>\n  </head>\n  <body>\n    ${i}\n  </body>\n</html>`}}wrapImportTemplate(){let t="# npm\nnpm install @mempool/mempool.js --save\n\n# yarn\nyarn add @mempool/mempool.js";return"liquid"===this.env.BASE_MODULE&&(t="# npm\nnpm install @mempool/liquid.js --save\n\n# yarn\nyarn add @mempool/liquid.js"),t}wrapCurlTemplate(t){if(t.codeTemplate){if("testnet"===this.network)return this.replaceCurlPlaceholder(t.codeTemplate.curl,t.codeSampleTestnet);if("testnet4"===this.network)return this.replaceCurlPlaceholder(t.codeTemplate.curl,t.codeSampleTestnet);if("signet"===this.network)return this.replaceCurlPlaceholder(t.codeTemplate.curl,t.codeSampleSignet);if("liquid"===this.network)return this.replaceCurlPlaceholder(t.codeTemplate.curl,t.codeSampleLiquid);if("liquidtestnet"===this.network)return this.replaceCurlPlaceholder(t.codeTemplate.curl,t.codeSampleLiquidTestnet);if(""===this.network||"main"===this.network)return this.replaceCurlPlaceholder(t.codeTemplate.curl,t.codeSampleMainnet)}}wrapResponse(t){return"websocket"===this.method?"":"testnet"===this.network||"testnet4"===this.network?t.codeSampleTestnet.response:"signet"===this.network?t.codeSampleSignet.response:"liquid"===this.network?t.codeSampleLiquid.response:"liquidtestnet"===this.network?t.codeSampleLiquidTestnet.response:t.codeSampleMainnet.response}wrapPythonTemplate(t){return"testnet"===this.network||"testnet4"===this.network||"signet"===this.network?t.codeTemplate.python.replace("wss://mempool.space/api/v1/ws","wss://mempool.space/"+this.network+"/api/v1/ws"):t.codeTemplate.python}replaceJSPlaceholder(t,o){for(let c=0;c<o.length;c++)t=t.replace("%{"+(c+1)+"}",o[c]);return t}replaceCurlPlaceholder(t,o){let c=t;c=c.replace("[[hostname]]",this.hostname),c=c.replace("[[baseNetworkUrl]]",this.baseNetworkUrl);for(let p=0;p<o.curl.length;p++)c=c.replace("%{"+(p+1)+"}",o.curl[p]);const i=o.headers?` -H "${o.headers}"`:"";return"mempool"===this.env.BASE_MODULE?"main"===this.network||""===this.network||this.network===this.env.ROOT_NETWORK?"POST"===this.method?`curl${i} -X POST -sSLd "${c}"`:`curl${i} -sSL "${this.hostname}${c}"`:"POST"===this.method?`curl${i} -X POST -sSLd "${c}"`:`curl${i} -sSL "${this.hostname}/${this.network}${c}"`:"liquid"===this.env.BASE_MODULE?"POST"===this.method?(("liquid"!==this.network||this.network===this.env.ROOT_NETWORK)&&(c=c.replace("/api",`/${this.network}/api`)),`curl${i} -X POST -sSLd "${c}"`):"liquid"===this.network?`curl${i} -sSL "${this.hostname}${c}"`:`curl${i} -sSL "${this.hostname}/${this.network}${c}"`:`curl${i} -sSL "${this.hostname}${c}"`}static#e=this.\u0275fac=function(o){return new(o||a)(e.rXU(y.d))};static#t=this.\u0275cmp=e.VBU({type:a,selectors:[["app-code-template"]],inputs:{network:"network",code:"code",hostname:"hostname",baseNetworkUrl:"baseNetworkUrl",method:"method",showCodeExample:"showCodeExample"},decls:9,vars:6,consts:()=>{let t,o,c,i,p,g;return t="\u0915\u094B\u0921 \u0909\u0926\u093E\u0939\u0930\u0923",o="\u0915\u094B\u0921 \u0909\u0926\u093E\u0939\u0930\u0923",c="\u0907\u0928\u0938\u094D\u091F\u0949\u0932 \u092A\u0948\u0915\u0947\u091C",i="\u0915\u094B\u0921 \u0909\u0926\u093E\u0939\u0930\u0923",p="\u0915\u094B\u0921 \u0909\u0926\u093E\u0939\u0930\u0923",g="\u0930\u093F\u0938\u094D\u092A\u093E\u0902\u0938",[["navCodeTemplate","ngbNav"],t,o,c,i,p,g,[1,"code"],["ngbNav","","role","tablist",1,"nav-tabs","code-tab"],["ngbNavItem","","role","presentation",4,"ngIf"],[3,"ngbNavOutlet"],["class","response",4,"ngIf"],["ngbNavItem","","role","presentation"],["ngbNavLink","","role","tab",3,"click"],["ngbNavContent",""],[1,"subtitle"],[3,"text"],[3,"innerText"],[1,"links"],["target","_blank",3,"href"],[1,"response"]]},template:function(o,c){if(1&o&&(e.j41(0,"div",7)(1,"ul",8,0),e.DNE(3,W,4,0,"li",9)(4,Z,4,0,"li",9)(5,ee,4,0,"li",9)(6,ae,4,0,"li",9),e.k0s(),e.nrm(7,"div",10),e.DNE(8,oe,7,2,"div",11),e.k0s()),2&o){const i=e.sdS(2);e.R7$(3),e.Y8G("ngIf",c.code.codeTemplate.curl&&"websocket"!==c.method),e.R7$(),e.Y8G("ngIf",c.showCodeExample[c.network]),e.R7$(),e.Y8G("ngIf",c.showCodeExample[c.network]),e.R7$(),e.Y8G("ngIf",c.code.codeTemplate.python&&"liquid"!==c.network&&"liquidtestnet"!==c.network),e.R7$(),e.Y8G("ngbNavOutlet",i),e.R7$(),e.Y8G("ngIf",c.code.codeTemplate&&""!==c.wrapResponse(c.code))}},dependencies:[F.bT,_.Um,_.X9,_.sy,_.Gx,_.Ri,_.WA,_.m_,Y.w],styles:[".text-small[_ngcontent-%COMP%]{font-size:12px}code[_ngcontent-%COMP%]{background-color:var(--bg);font-family:Consolas,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New}tr[_ngcontent-%COMP%]{white-space:inherit}.nowrap[_ngcontent-%COMP%]{white-space:nowrap}li.nav-item[_ngcontent-%COMP%]{width:100%}@media (min-width: 676px){li.nav-item[_ngcontent-%COMP%]{width:auto}}.nav-tabs[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%]{border-bottom:1px solid #fff}@media (min-width: 676px){.nav-tabs[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%]{border-bottom:1px solid var(--active-bg)}}.code-tab[_ngcontent-%COMP%]{width:auto;margin:20px auto 10px}.code-tab[_ngcontent-%COMP%]   li.nav-item[_ngcontent-%COMP%]{width:auto}.code[_ngcontent-%COMP%]   .tab-content[_ngcontent-%COMP%]{padding:0}.code[_ngcontent-%COMP%]   .nav-tabs[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%]{border-bottom:1px solid var(--active-bg)}.code[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.description[_ngcontent-%COMP%]{margin-top:20px}.title[_ngcontent-%COMP%]{font-weight:700;color:#fff;font-size:1.25rem}.subtitle[_ngcontent-%COMP%]{font-weight:700}.divider[_ngcontent-%COMP%]{width:100%;margin:30px auto;height:1px;background:#333}.websocket[_ngcontent-%COMP%], .difficulty[_ngcontent-%COMP%]{padding:15px}.links[_ngcontent-%COMP%]{margin-bottom:5px}.links[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-size:14px;margin:0 10px 0 0}pre[_ngcontent-%COMP%]{display:block;font-size:87.5%;color:#f18920;background-color:var(--bg);padding:30px}pre[_ngcontent-%COMP%]   code[_ngcontent-%COMP%]{background-color:transparent;white-space:break-spaces;word-break:break-all}"]})}return a})();const ne=()=>["fas","angle-right"],de=()=>({"font-size":"12px"});function se(a,s){1&a&&(e.j41(0,"div",2)(1,"p"),e.EFF(2,"Get higher API limits with Mempool Enterprise\xae"),e.k0s(),e.j41(3,"a",3),e.EFF(4,"More Info "),e.nrm(5,"fa-icon",4),e.k0s()()),2&a&&(e.R7$(5),e.Y8G("icon",e.lJ4(2,ne))("styles",e.lJ4(3,de)))}function ie(a,s){if(1&a&&(e.j41(0,"p"),e.EFF(1),e.k0s()),2&a){const t=e.XpG().$implicit;e.R7$(),e.JRh(t.title)}}function le(a,s){if(1&a){const t=e.RV6();e.j41(0,"a",7),e.bIt("click",function(c){e.eBV(t);const i=e.XpG().$implicit,p=e.XpG();return e.Njj(p.navLinkClick(c,i.fragment))}),e.EFF(1),e.k0s()}if(2&a){const t=e.XpG().$implicit;e.R7$(),e.JRh(t.title)}}function re(a,s){if(1&a&&(e.j41(0,"div"),e.DNE(1,ie,2,1,"p",5)(2,le,2,1,"a",6),e.k0s()),2&a){const t=s.$implicit,o=e.XpG();e.R7$(),e.Y8G("ngIf","category"===t.type&&t.showConditions.indexOf(o.network.val)>-1&&(!t.hasOwnProperty("options")||t.hasOwnProperty("options")&&t.options.hasOwnProperty("officialOnly")&&t.options.officialOnly&&o.officialMempoolInstance)),e.R7$(),e.Y8G("ngIf","category"!==t.type&&t.showConditions.indexOf(o.network.val)>-1&&(!t.hasOwnProperty("options")||t.hasOwnProperty("options")&&t.options.hasOwnProperty("officialOnly")&&t.options.officialOnly&&o.officialMempoolInstance||t.hasOwnProperty("options")&&t.options.hasOwnProperty("auditOnly")&&t.options.auditOnly&&o.auditEnabled))}}let fe=(()=>{class a{constructor(t){this.stateService=t,this.navLinkClickEvent=new e.bkB}ngOnInit(){this.env=this.stateService.env,this.officialMempoolInstance=this.env.OFFICIAL_MEMPOOL_SPACE,this.auditEnabled=this.env.AUDIT,"rest"===this.whichTab?this.tabData=C:"faq"===this.whichTab&&(this.tabData=D)}navLinkClick(t,o){t.preventDefault(),this.navLinkClickEvent.emit({event:t,fragment:o})}static#e=this.\u0275fac=function(o){return new(o||a)(e.rXU(y.d))};static#t=this.\u0275cmp=e.VBU({type:a,selectors:[["app-api-docs-nav"]],inputs:{network:"network",whichTab:"whichTab"},outputs:{navLinkClickEvent:"navLinkClickEvent"},decls:2,vars:2,consts:[["id","enterprise-cta-desktop",4,"ngIf"],[4,"ngFor","ngForOf"],["id","enterprise-cta-desktop"],["href","/enterprise",1,"btn","btn-small","btn-purple"],[3,"icon","styles"],[4,"ngIf"],[3,"click",4,"ngIf"],[3,"click"]],template:function(o,c){1&o&&e.DNE(0,se,6,4,"div",0)(1,re,3,2,"div",1),2&o&&(e.Y8G("ngIf",c.officialMempoolInstance),e.R7$(),e.Y8G("ngForOf",c.tabData))},dependencies:[F.Sq,F.bT,P.aY],styles:["p[_ngcontent-%COMP%]{color:var(--title-fg);font-weight:700;margin:15px 0 10px}a[_ngcontent-%COMP%]{color:var(--fg);text-decoration:none;display:block;margin:5px 0;cursor:pointer}#enterprise-cta-desktop[_ngcontent-%COMP%]{text-align:center;padding:20px;margin:20px 20px 20px 0;background-color:var(--bg);border-radius:12px}#enterprise-cta-desktop[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0 auto 16px;color:var(--fg);font-weight:400}#enterprise-cta-desktop[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:inline-block}"]})}return a})();var J=b(6631);const x=a=>({val:a}),pe=()=>["fas","angle-right"],be=()=>({"font-size":"12px"}),m=a=>[a],me=()=>["/block/0000000000000000000515e202c8ae73c8155fc472422d7593af87aa74f2cf3d"],ue=()=>["/about"];function he(a,s){1&a&&e.eu8(0)}function ge(a,s){if(1&a&&(e.j41(0,"table")(1,"tr")(2,"td"),e.nrm(3,"app-svg-images",62),e.k0s(),e.j41(4,"td"),e.DNE(5,he,1,0,"ng-container",63),e.k0s()()()),2&a){e.XpG();const t=e.sdS(9);e.R7$(5),e.Y8G("ngTemplateOutlet",t)}}function _e(a,s){1&a&&e.eu8(0)}function Fe(a,s){if(1&a&&(e.j41(0,"div"),e.nrm(1,"app-svg-images",62),e.DNE(2,_e,1,0,"ng-container",63),e.k0s()),2&a){e.XpG();const t=e.sdS(9);e.R7$(2),e.Y8G("ngTemplateOutlet",t)}}function ke(a,s){1&a&&(e.PLo(0,10),e.j41(1,"p"),e.nrm(2,"b"),e.k0s(),e.nrm(3,"p"),e.YFu())}function Se(a,s){if(1&a&&(e.j41(0,"h3"),e.EFF(1),e.k0s()),2&a){const t=e.XpG(2).$implicit;e.R7$(),e.JRh(t.title)}}function ve(a,s){1&a&&e.eu8(0,70)}function ye(a,s){if(1&a){const t=e.RV6();e.j41(0,"div",66)(1,"a",67),e.bIt("click",function(c){e.eBV(t);const i=e.XpG(2).$implicit,p=e.XpG(3);return e.Njj(p.anchorLinkClick({event:c,fragment:i.fragment}))}),e.j41(2,"table")(3,"tr")(4,"td"),e.EFF(5),e.k0s(),e.j41(6,"td")(7,"span"),e.EFF(8),e.k0s()()()()(),e.j41(9,"div",68),e.DNE(10,ve,1,0,"ng-container",69),e.k0s()()}if(2&a){const t=e.XpG(2).$implicit,o=e.XpG(3);e.FS9("id",t.fragment),e.R7$(),e.FS9("id",t.fragment+"-tab-header"),e.R7$(4),e.JRh(t.title),e.R7$(3),e.JRh(t.category),e.R7$(2),e.Y8G("ngTemplateOutlet",o.dict[t.fragment])}}function we(a,s){if(1&a&&(e.j41(0,"div"),e.DNE(1,Se,2,1,"h3",17)(2,ye,11,5,"div",65),e.k0s()),2&a){const t=e.XpG().$implicit;e.R7$(),e.Y8G("ngIf","category"===t.type),e.R7$(),e.Y8G("ngIf","category"!==t.type)}}function xe(a,s){if(1&a&&(e.j41(0,"div",64),e.DNE(1,we,3,2,"div",17),e.k0s()),2&a){const t=s.$implicit,o=e.XpG(3);e.R7$(),e.Y8G("ngIf",!t.hasOwnProperty("options")||t.hasOwnProperty("options")&&t.options.hasOwnProperty("officialOnly")&&t.options.officialOnly&&o.officialMempoolInstance||t.hasOwnProperty("options")&&t.options.hasOwnProperty("auditOnly")&&t.options.auditOnly&&o.auditEnabled)}}function Ee(a,s){if(1&a){const t=e.RV6();e.j41(0,"div",56)(1,"div",57)(2,"app-api-docs-nav",58),e.nI1(3,"async"),e.bIt("navLinkClickEvent",function(c){e.eBV(t);const i=e.XpG(2);return e.Njj(i.anchorLinkClick(c))}),e.k0s()(),e.j41(4,"div",59)(5,"div",60),e.DNE(6,ge,6,1,"table",17)(7,Fe,3,1,"div",17)(8,ke,4,0,"ng-template",null,0,e.C5r),e.k0s(),e.DNE(10,xe,2,1,"div",61),e.k0s()()}if(2&a){const t=e.XpG(2);e.R7$(),e.Y8G("ngClass",t.desktopDocsNavPosition),e.R7$(),e.Y8G("network",e.eq3(8,x,e.bMT(3,6,t.network$)))("whichTab",t.whichTab),e.R7$(4),e.Y8G("ngIf",!t.mobileViewport),e.R7$(),e.Y8G("ngIf",t.mobileViewport),e.R7$(3),e.Y8G("ngForOf",t.faq)}}function Te(a,s){if(1&a){const t=e.RV6();e.j41(0,"div",75)(1,"p"),e.EFF(2,"Get higher API limits with "),e.j41(3,"span",76),e.EFF(4,"Mempool Enterprise\xae"),e.k0s()(),e.j41(5,"div",77)(6,"a",78),e.bIt("click",function(){e.eBV(t);const c=e.XpG(3);return e.Njj(c.showMobileEnterpriseUpsell=!1)}),e.EFF(7,"No Thanks"),e.k0s(),e.j41(8,"a",79),e.EFF(9,"More Info "),e.nrm(10,"fa-icon",80),e.k0s()()()}2&a&&(e.R7$(10),e.Y8G("icon",e.lJ4(2,pe))("styles",e.lJ4(3,be)))}function Me(a,s){1&a&&(e.j41(0,"p",81),e.EFF(1,"Note that we enforce rate limits. If you exceed these limits, you will get an HTTP 429 error. If you repeatedly exceed the limits, you may be banned from accessing the service altogether. Consider an "),e.j41(2,"a",82),e.EFF(3,"enterprise sponsorship"),e.k0s(),e.EFF(4," if you need higher API limits."),e.k0s())}function Ce(a,s){if(1&a&&(e.j41(0,"h3"),e.EFF(1),e.k0s()),2&a){const t=e.XpG(2).$implicit;e.R7$(),e.JRh(t.title)}}function De(a,s){if(1&a&&(e.qex(0,null,7),e.j41(2,"a",86),e.EFF(3),e.k0s(),e.bVm()),2&a){const t=e.XpG(3).$implicit,o=e.XpG(2).ngIf,c=e.XpG();e.R7$(2),e.Y8G("href",c.wrapUrl(o.val,t.codeExample.bisq),e.B4B),e.R7$(),e.E5c("",t.httpRequestMethod," ",c.baseNetworkUrl,"/api",t.urlString,"")}}function Re(a,s){if(1&a&&(e.j41(0,"a",86),e.EFF(1),e.k0s()),2&a){const t=e.XpG(5).$implicit,o=e.XpG(2).ngIf,c=e.XpG();e.Y8G("href",c.wrapUrl(o.val,t.codeExample.liquid),e.B4B),e.R7$(),e.E5c("",t.httpRequestMethod," ",c.baseNetworkUrl,"/api",t.urlString,"")}}function Pe(a,s){if(1&a&&(e.j41(0,"p"),e.EFF(1),e.k0s()),2&a){const t=e.XpG(5).$implicit,o=e.XpG(3);e.R7$(),e.E5c("",t.httpRequestMethod," ",o.baseNetworkUrl,"/api",t.urlString,"")}}function Je(a,s){if(1&a&&(e.qex(0),e.DNE(1,Re,2,4,"a",87)(2,Pe,2,3,"p",17),e.bVm()),2&a){const t=e.XpG(4).$implicit;e.R7$(),e.Y8G("ngIf","get-cpfp"!==t.fragment),e.R7$(),e.Y8G("ngIf","get-cpfp"===t.fragment)}}function Oe(a,s){if(1&a&&e.DNE(0,Je,3,2,"ng-container",84),2&a){e.XpG();const t=e.sdS(13),o=e.XpG(2).$implicit,c=e.XpG(2).ngIf;e.Y8G("ngIf","GET"===o.httpRequestMethod&&"liquid"===c.val&&o.codeExample.hasOwnProperty("liquid"))("ngIfElse",t)}}function je(a,s){if(1&a&&(e.j41(0,"a",86),e.EFF(1),e.k0s()),2&a){const t=e.XpG(5).$implicit,o=e.XpG(2).ngIf,c=e.XpG();e.Y8G("href",c.wrapUrl(o.val,t.codeExample.default),e.B4B),e.R7$(),e.E5c("",t.httpRequestMethod," ",c.baseNetworkUrl,"/api",t.urlString,"")}}function qe(a,s){if(1&a&&(e.j41(0,"p"),e.EFF(1),e.k0s()),2&a){const t=e.XpG(5).$implicit,o=e.XpG(3);e.R7$(),e.E5c("",t.httpRequestMethod," ",o.baseNetworkUrl,"/api",t.urlString,"")}}function Ae(a,s){if(1&a&&(e.qex(0),e.DNE(1,je,2,4,"a",87)(2,qe,2,3,"p",17),e.bVm()),2&a){const t=e.XpG(4).$implicit;e.R7$(),e.Y8G("ngIf","get-cpfp"!==t.fragment),e.R7$(),e.Y8G("ngIf","get-cpfp"===t.fragment)}}function Ge(a,s){if(1&a&&e.DNE(0,Ae,3,2,"ng-container",17),2&a){const t=e.XpG(3).$implicit;e.Y8G("ngIf","GET"===t.httpRequestMethod)}}function Ne(a,s){if(1&a&&(e.j41(0,"div"),e.EFF(1),e.k0s()),2&a){const t=e.XpG(3).$implicit;e.R7$(),e.Lme("",t.httpRequestMethod," ",t.urlString,"")}}function Ie(a,s){if(1&a&&(e.qex(0,null,8),e.nrm(2,"div",88),e.bVm()),2&a){const t=e.XpG(3).$implicit;e.R7$(2),e.Y8G("innerHTML",t.description.bisq,e.npT)}}function Le(a,s){if(1&a&&(e.qex(0),e.nrm(1,"div",88),e.bVm()),2&a){const t=e.XpG(4).$implicit;e.R7$(),e.Y8G("innerHTML",t.description.liquid,e.npT)}}function Be(a,s){if(1&a&&e.DNE(0,Le,2,1,"ng-container",84),2&a){e.XpG();const t=e.sdS(22),o=e.XpG(2).$implicit,c=e.XpG(2).ngIf;e.Y8G("ngIf","liquid"===c.val&&o.description.hasOwnProperty("liquid"))("ngIfElse",t)}}function ze(a,s){if(1&a&&e.nrm(0,"div",88),2&a){const t=e.XpG(3).$implicit;e.Y8G("innerHTML",t.description.default,e.npT)}}function $e(a,s){if(1&a&&(e.qex(0,null,9),e.nrm(2,"app-code-template",89),e.bVm()),2&a){const t=e.XpG(3).$implicit,o=e.XpG(2).ngIf,c=e.XpG();e.R7$(2),e.Y8G("hostname",c.hostname)("baseNetworkUrl",c.baseNetworkUrl)("method",t.httpRequestMethod)("code",t.codeExample.bisq)("network",o.val)("showCodeExample",t.showJsExamples)}}function He(a,s){if(1&a&&(e.qex(0),e.nrm(1,"app-code-template",89),e.bVm()),2&a){const t=e.XpG(4).$implicit,o=e.XpG(2).ngIf,c=e.XpG();e.R7$(),e.Y8G("hostname",c.hostname)("baseNetworkUrl",c.baseNetworkUrl)("method",t.httpRequestMethod)("code",t.codeExample.liquid)("network",o.val)("showCodeExample",t.showJsExamples)}}function Ue(a,s){if(1&a&&e.DNE(0,He,2,6,"ng-container",84),2&a){e.XpG();const t=e.sdS(27),o=e.XpG(2).$implicit,c=e.XpG(2).ngIf;e.Y8G("ngIf","liquid"===c.val&&o.codeExample.hasOwnProperty("liquid"))("ngIfElse",t)}}function Xe(a,s){if(1&a&&e.nrm(0,"app-code-template",89),2&a){const t=e.XpG(3).$implicit,o=e.XpG(2).ngIf,c=e.XpG();e.Y8G("hostname",c.hostname)("baseNetworkUrl",c.baseNetworkUrl)("method",t.httpRequestMethod)("code",t.codeExample.default)("network",o.val)("showCodeExample",t.showJsExamples)}}function Ye(a,s){if(1&a){const t=e.RV6();e.j41(0,"div",66)(1,"a",67),e.bIt("click",function(c){e.eBV(t);const i=e.XpG(2).$implicit,p=e.XpG(3);return e.Njj(p.anchorLinkClick({event:c,fragment:i.fragment}))}),e.EFF(2),e.j41(3,"span"),e.EFF(4),e.k0s()(),e.j41(5,"div",68)(6,"div",70)(7,"div",83),e.pXf(8,12),e.k0s(),e.DNE(9,De,4,4,"ng-container",84)(10,Oe,1,2,"ng-template",null,1,e.C5r)(12,Ge,1,1,"ng-template",null,2,e.C5r)(14,Ne,2,2,"div",17),e.k0s(),e.j41(15,"div",85)(16,"div",83),e.pXf(17,13),e.k0s(),e.DNE(18,Ie,3,1,"ng-container",84)(19,Be,1,2,"ng-template",null,3,e.C5r)(21,ze,1,1,"ng-template",null,4,e.C5r),e.k0s(),e.DNE(23,$e,3,6,"ng-container",84)(24,Ue,1,2,"ng-template",null,5,e.C5r)(26,Xe,1,6,"ng-template",null,6,e.C5r),e.k0s()()}if(2&a){const t=e.sdS(11),o=e.sdS(20),c=e.sdS(25),i=e.XpG(2).$implicit,p=e.XpG(2).ngIf;e.FS9("id",i.fragment),e.R7$(),e.FS9("id",i.fragment+"-tab-header"),e.R7$(),e.SpI("",i.title," "),e.R7$(2),e.JRh(i.category),e.R7$(5),e.Y8G("ngIf","GET"===i.httpRequestMethod&&"bisq"===p.val&&i.codeExample.hasOwnProperty("bisq"))("ngIfElse",t),e.R7$(5),e.Y8G("ngIf","POST"===i.httpRequestMethod),e.R7$(4),e.Y8G("ngIf","bisq"===p.val&&i.description.hasOwnProperty("bisq"))("ngIfElse",o),e.R7$(5),e.Y8G("ngIf","bisq"===p.val&&i.codeExample.hasOwnProperty("bisq"))("ngIfElse",c)}}function Ke(a,s){if(1&a&&(e.j41(0,"div"),e.DNE(1,Ce,2,1,"h3",17)(2,Ye,28,11,"div",65),e.k0s()),2&a){const t=e.XpG().$implicit,o=e.XpG(2).ngIf;e.R7$(),e.Y8G("ngIf","category"===t.type&&t.showConditions.indexOf(o.val)>-1),e.R7$(),e.Y8G("ngIf","category"!==t.type&&t.showConditions.indexOf(o.val)>-1)}}function We(a,s){if(1&a&&(e.j41(0,"div",64),e.DNE(1,Ke,3,2,"div",17),e.k0s()),2&a){const t=s.$implicit,o=e.XpG(3);e.R7$(),e.Y8G("ngIf",!t.hasOwnProperty("options")||t.hasOwnProperty("options")&&t.options.hasOwnProperty("officialOnly")&&t.options.officialOnly&&o.officialMempoolInstance)}}function Ve(a,s){if(1&a){const t=e.RV6();e.j41(0,"div",71)(1,"div",57)(2,"app-api-docs-nav",58),e.nI1(3,"async"),e.bIt("navLinkClickEvent",function(c){e.eBV(t);const i=e.XpG(2);return e.Njj(i.anchorLinkClick(c))}),e.k0s()(),e.j41(4,"div",59),e.DNE(5,Te,11,4,"div",72),e.j41(6,"p",73),e.EFF(7),e.qex(8),e.pXf(9,11),e.bVm(),e.EFF(10,"."),e.k0s(),e.DNE(11,Me,5,0,"p",74)(12,We,2,1,"div",61),e.k0s()()}if(2&a){const t=e.XpG().ngIf,o=e.XpG();e.R7$(),e.Y8G("ngClass",o.desktopDocsNavPosition),e.R7$(),e.Y8G("network",e.eq3(9,x,e.bMT(3,7,o.network$)))("whichTab",o.whichTab),e.R7$(3),e.Y8G("ngIf",o.officialMempoolInstance&&o.showMobileEnterpriseUpsell),e.R7$(2),e.SpI("Below is a reference for the ",""===t.val?"Earthcoin":t.val.charAt(0).toUpperCase()+t.val.slice(1)," "),e.R7$(4),e.Y8G("ngIf",o.officialMempoolInstance),e.R7$(),e.Y8G("ngForOf",o.restDocs)}}function Ze(a,s){if(1&a&&(e.j41(0,"div",90)(1,"div",91)(2,"div",92)(3,"div",70)(4,"div",83),e.pXf(5,14),e.k0s(),e.EFF(6),e.k0s(),e.j41(7,"div",85)(8,"div",83),e.pXf(9,15),e.k0s(),e.j41(10,"div"),e.PLo(11,16),e.nrm(12,"code")(13,"code")(14,"code")(15,"code")(16,"code")(17,"br")(18,"br")(19,"code")(20,"code")(21,"code"),e.YFu(),e.k0s()(),e.nrm(22,"app-code-template",93),e.k0s()()()),2&a){const t=e.XpG().ngIf,o=e.XpG();e.R7$(6),e.SpI(" ",o.wrapUrl(t.val,o.wsDocs,!0)," "),e.R7$(15),e.uP7("{")("}")("{")("}"),e.nnv(11),e.R7$(),e.Y8G("method","websocket")("hostname",o.hostname)("code",o.wsDocs)("network",t.val)("showCodeExample",o.wsDocs.showJsExamples)}}function Qe(a,s){1&a&&(e.j41(0,"p",97),e.EFF(1,"Electrum RPC interface for "),e.j41(2,"a",98),e.EFF(3,"Earthcoin Signet"),e.k0s(),e.EFF(4," and "),e.j41(5,"a",99),e.EFF(6,"Earthcoin Testnet4"),e.k0s(),e.EFF(7," is publicly available. Electrum RPC interface for all other networks is available to "),e.j41(8,"a",82),e.EFF(9,"sponsors"),e.k0s(),e.EFF(10," only\u2014whitelisting is required."),e.k0s())}function et(a,s){if(1&a&&(e.j41(0,"div",94)(1,"div",95)(2,"div",64)(3,"p",83),e.EFF(4,"Hostname"),e.k0s(),e.j41(5,"p"),e.EFF(6),e.k0s(),e.j41(7,"p",83),e.EFF(8,"Port"),e.k0s(),e.j41(9,"p"),e.EFF(10),e.k0s(),e.j41(11,"p",83),e.EFF(12,"SSL"),e.k0s(),e.j41(13,"p"),e.EFF(14,"Enabled"),e.k0s(),e.DNE(15,Qe,11,0,"p",96),e.k0s()()()),2&a){const t=e.XpG().ngIf,o=e.XpG();e.R7$(6),e.JRh(o.plainHostname),e.R7$(4),e.JRh(o.electrsPort),e.R7$(5),e.Y8G("ngIf","signet"!==t.val&&"testnet4"!==t.val)}}function tt(a,s){if(1&a&&(e.qex(0),e.j41(1,"div",51),e.DNE(2,Ee,11,10,"div",52)(3,Ve,13,11,"div",53)(4,Ze,23,10,"div",54)(5,et,16,3,"div",55),e.k0s(),e.bVm()),2&a){const t=e.XpG();e.R7$(2),e.Y8G("ngIf","faq"===t.whichTab),e.R7$(),e.Y8G("ngIf","rest"===t.whichTab),e.R7$(),e.Y8G("ngIf","websocket"===t.whichTab),e.R7$(),e.Y8G("ngIf","electrs"===t.whichTab)}}function at(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,'A mempool (short for "memory pool") is the queue of pending and unconfirmed transactions for a cryptocurrency network node. There is no one global mempool: every node on the network maintains its own mempool, so different nodes may hold different transactions in their mempools.'),e.k0s())}function ot(a,s){if(1&a&&(e.j41(0,"p"),e.EFF(1,"A mempool explorer is a tool that enables you to view real-time and historical information about a node's mempool, visualize its transactions, and search and view those transactions."),e.k0s(),e.j41(2,"p"),e.EFF(3,"The mempool.space website invented the concept of visualizing a Earthcoin node's mempool as "),e.j41(4,"b"),e.EFF(5,"projected blocks"),e.k0s(),e.EFF(6,". These blocks are the inspiration for our half-filled block logo."),e.k0s(),e.j41(7,"p"),e.EFF(8,"Projected blocks are on the left of the dotted white line, and confirmed blocks are on the right."),e.k0s(),e.j41(9,"div",100)(10,"div",101)(11,"span")(12,"div",102),e.nrm(13,"app-mempool-blocks")(14,"app-blockchain-blocks"),e.k0s(),e.nrm(15,"div",103),e.k0s()()()),2&a){const t=e.XpG();e.R7$(9),e.AVh("time-ltr",t.timeLtr),e.Y8G("dir",t.timeLtr?"rtl":"ltr")}}function ct(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"A blockchain is a distributed ledger that records the transactions for a cryptocurrency network. Miners amend the blockchain ledger by mining new blocks."),e.k0s())}function nt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"A block explorer is a tool that enables you to explore real-time and historical information about the blockchain of a cryptocurrency. This includes data related to blocks, transactions, addresses, and more."),e.k0s())}function dt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"Mining is the process by which unconfirmed transactions in a mempool are confirmed into a block on a blockchain. Miners select unconfirmed transactions from their mempools and arrange them into a block such that they solve a particular math problem."),e.k0s(),e.j41(2,"p"),e.EFF(3,"The first miner on the network to find a suitable block earns all the transaction fees from the transactions in that block. As a result, miners tend to prioritize transactions with higher transaction fees."),e.k0s())}function st(a,s){1&a&&e.EFF(0," Mining pools are groups of miners that combine their computational power in order to increase the probability of finding new blocks.\n")}function it(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"Virtual bytes (vB) and weight units (WU) are used to measure the size of transactions and blocks on the Earthcoin network."),e.k0s(),e.j41(2,"p"),e.EFF(3,"A Earthcoin transaction's size in the blockchain is "),e.j41(4,"i"),e.EFF(5,"not"),e.k0s(),e.EFF(6," determined how much bitcoin it transfers\u2014instead, a transaction's size is determined by technical factors such as how many inputs and outputs it has, how many signatures it has, and the format it uses (legacy, SegWit, etc). Since space in the Earthcoin blockchain is limited, bigger transactions pay more in mining fees than smaller transactions."),e.k0s(),e.j41(7,"p"),e.EFF(8,"Block sizes are limited to 4,000,000 WU (or 1,000,000 vB since 1 vB = 4 WU)."),e.k0s(),e.j41(9,"p"),e.EFF(10,"Transaction sizes and block sizes used to be measured in plain bytes, but virtual bytes and weight units were devised to maintain backward compatibility after the SegWit upgrade in 2017. See "),e.j41(11,"a",104),e.EFF(12,"this post"),e.k0s(),e.EFF(13," for more details."),e.k0s())}function lt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"The priority of a pending Earthcoin transaction is determined by its feerate. Feerates are measured in sat/vB."),e.k0s(),e.j41(2,"p"),e.EFF(3,"Using a higher sat/vB feerate for a Earthcoin transaction will generally result in quicker confirmation than using a lower feerate. But feerates change all the time, so it's important to check suggested feerates right before making a transaction to "),e.j41(4,"a",105),e.nI1(5,"relativeUrl"),e.EFF(6,"avoid it from getting stuck"),e.k0s(),e.EFF(7,"."),e.k0s(),e.j41(8,"p"),e.EFF(9,"There are feerate estimates on the top of "),e.j41(10,"a",106),e.nI1(11,"relativeUrl"),e.EFF(12,"the main dashboard"),e.k0s(),e.EFF(13," you can use as a guide. See "),e.j41(14,"a",107),e.nI1(15,"relativeUrl"),e.EFF(16,"this FAQ"),e.k0s(),e.EFF(17," for more on picking the right feerate."),e.k0s()),2&a&&(e.R7$(4),e.Y8G("routerLink",e.eq3(9,m,e.bMT(5,3,"/docs/faq"))),e.R7$(6),e.Y8G("routerLink",e.eq3(11,m,e.bMT(11,5,"/"))),e.R7$(4),e.Y8G("routerLink",e.eq3(13,m,e.bMT(15,7,"/docs/faq"))))}function rt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"If it's been a while and your transaction hasn't confirmed, your transaction is probably using a lower feerate relative to other transactions currently in the mempool. Depending on how you made your transaction, there may be "),e.j41(2,"a",108),e.nI1(3,"relativeUrl"),e.EFF(4,"ways to accelerate the process"),e.k0s(),e.EFF(5,"."),e.k0s(),e.j41(6,"p"),e.EFF(7,"There's no need to panic\u2014a Earthcoin transaction will always either confirm completely (or not at all) at some point. As long as you have your transaction's ID, you can always see where your funds are."),e.k0s(),e.j41(8,"p"),e.EFF(9,"This site only provides data about the Earthcoin network. To get help with a transaction, get in touch with the entity that helped make the transaction (wallet software, exchange company, etc)."),e.k0s()),2&a&&(e.R7$(2),e.Y8G("routerLink",e.eq3(3,m,e.bMT(3,1,"/docs/faq"))))}function ft(a,s){if(1&a&&(e.j41(0,"p"),e.EFF(1,"To get your transaction confirmed quicker, you will need to increase its effective feerate."),e.k0s(),e.j41(2,"p"),e.EFF(3,"If your transaction was created with RBF enabled, your stuck transaction can simply be replaced with a new one that has a higher fee. Otherwise, if you control any of the stuck transaction's outputs, you can use CPFP to increase your stuck transaction's effective feerate."),e.k0s(),e.j41(4,"p"),e.EFF(5,"If you are not sure how to do RBF or CPFP, work with the tool you used to make the transaction (wallet software, exchange company, etc)."),e.k0s(),e.j41(6,"p"),e.EFF(7,"Another option to get your transaction confirmed more quickly is "),e.j41(8,"a",109),e.EFF(9,"Mempool Accelerator\u2122"),e.k0s(),e.EFF(10,"."),e.k0s()),2&a){const t=e.XpG();e.R7$(8),e.Y8G("href",e.eq3(2,m,t.isMempoolSpaceBuild?"/accelerator":"https://mempool.space/accelerator"),e.B4B)("target",t.isMempoolSpaceBuild?"":"blank")}}function pt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"You must use an adequate transaction fee commensurate with how quickly you need the transaction to be confirmed. See Mempool's fee estimates on the "),e.j41(2,"a",106),e.nI1(3,"relativeUrl"),e.EFF(4,"front page"),e.k0s(),e.EFF(5,"."),e.k0s(),e.j41(6,"p"),e.EFF(7,"Also consider using RBF (if your wallet supports it) so that you can bump the feerate on your transaction if it does end up getting stuck."),e.k0s()),2&a&&(e.R7$(2),e.Y8G("routerLink",e.eq3(3,m,e.bMT(3,1,"/"))))}function bt(a,s){1&a&&e.EFF(0," Search for the transaction ID in the search box at the top-right of this website.\n")}function mt(a,s){1&a&&e.EFF(0," Search for the address in the search box at the top-right of this website.\n")}function ut(a,s){1&a&&e.EFF(0," Search for the block number (or block hash) in the search box at the top-right of this website.\n")}function ht(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"See real-time fee estimates on "),e.j41(2,"a",106),e.nI1(3,"relativeUrl"),e.EFF(4,"the main dashboard"),e.k0s(),e.EFF(5,"."),e.k0s(),e.j41(6,"p"),e.EFF(7,"Here is an overview of Mempool's feerate suggestions:"),e.k0s(),e.j41(8,"ul")(9,"li")(10,"b"),e.EFF(11,"High Priority."),e.k0s(),e.EFF(12," This figure is the median feerate of transactions in the "),e.j41(13,"a",106),e.nI1(14,"relativeUrl"),e.EFF(15,"first mempool block"),e.k0s(),e.EFF(16,". Consider using this feerate if you want confirmation as soon as possible."),e.k0s(),e.j41(17,"li")(18,"b"),e.EFF(19,"Medium Priority."),e.k0s(),e.EFF(20," This figure is the average of the median feerate of the "),e.j41(21,"a",106),e.nI1(22,"relativeUrl"),e.EFF(23,"first mempool block"),e.k0s(),e.EFF(24," and the median feerate of the "),e.j41(25,"a",106),e.nI1(26,"relativeUrl"),e.EFF(27,"second mempool block"),e.k0s(),e.EFF(28,"."),e.k0s(),e.j41(29,"li")(30,"b"),e.EFF(31,"Low Priority."),e.k0s(),e.EFF(32," This figure is the average of the Medium Priority feerate and the median feerate of the "),e.j41(33,"a",106),e.nI1(34,"relativeUrl"),e.EFF(35,"third mempool block"),e.k0s(),e.EFF(36,". Consider using this feerate if you want confirmation soon but don't need it particularly quickly."),e.k0s(),e.j41(37,"li")(38,"b"),e.EFF(39,"No Priority."),e.k0s(),e.EFF(40," This figure is either 2x the minimum feerate, or the Low Priority feerate (whichever is lower). Consider using this feerate if you are in no rush and don't mind if confirmation takes a while."),e.k0s()(),e.j41(41,"p"),e.EFF(42,"In all cases, the suggested feerate is adjusted lower if any of the mempool blocks involved in the calculation are not full (example: if there is only 1 mempool block that's less than half-full, Mempool will suggest a feerate of 1 sat/vB\u2014not the median feerate of transactions in the block)."),e.k0s(),e.j41(43,"p"),e.EFF(44,"Mempool blocks use feerates, transaction sizes, and other metrics to "),e.j41(45,"b"),e.EFF(46,"forecast"),e.k0s(),e.EFF(47," which transactions will be in future blocks. Actual blocks will turn out to be different: miners have their own views of the mempool, their own algorithms for determining which transactions to include in a block, etc."),e.k0s(),e.j41(48,"p"),e.EFF(49,"Ultimately, the Earthcoin network is not perfectly predictable, so fee estimation cannot be perfectly precise."),e.k0s(),e.j41(50,"p")(51,"b"),e.EFF(52,"Use Mempool's feerate suggestions as a guide, and understand that they do not guarantee transaction confirmation in any period of time."),e.k0s()()),2&a&&(e.R7$(2),e.Y8G("routerLink",e.eq3(15,m,e.bMT(3,5,"/"))),e.R7$(11),e.Y8G("routerLink",e.eq3(17,m,e.bMT(14,7,"/mempool-block/0"))),e.R7$(8),e.Y8G("routerLink",e.eq3(19,m,e.bMT(22,9,"/mempool-block/0"))),e.R7$(4),e.Y8G("routerLink",e.eq3(21,m,e.bMT(26,11,"/mempool-block/1"))),e.R7$(8),e.Y8G("routerLink",e.eq3(23,m,e.bMT(34,13,"/mempool-block/2"))))}function gt(a,s){1&a&&(e.EFF(0," See the "),e.j41(1,"a",106),e.nI1(2,"relativeUrl"),e.EFF(3,"graphs page"),e.k0s(),e.EFF(4," for aggregate trends over time: mempool size over time and incoming transaction velocity over time.\n")),2&a&&(e.R7$(),e.Y8G("routerLink",e.eq3(3,m,e.bMT(2,1,"/graphs"))))}function _t(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"When a Earthcoin transaction is made, it is stored in a Earthcoin node's mempool before it is confirmed into a block. When the rate of incoming transactions exceeds the rate transactions are confirmed, the mempool grows in size."),e.k0s(),e.j41(2,"p"),e.EFF(3,"By default, Earthcoin Core allocates 300MB of memory for its mempool, so when a node's mempool grows big enough to use all 300MB of allocated memory, we say it's \"full\"."),e.k0s(),e.j41(4,"p"),e.EFF(5,"Once a node's mempool is using all of its allocated memory, it will start rejecting new transactions below a certain feerate threshold\u2014so when this is the case, be extra sure to set a feerate that (at a minimum) exceeds that threshold. The current threshold feerate (and memory usage) are displayed right on Mempool's front page."),e.k0s())}function Ft(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"mempool.space uses multiple Earthcoin nodes to obtain data: some with the default 300MB mempool memory limit (call these Small Nodes) and others with a much larger mempool memory limit (call these Big Nodes)."),e.k0s(),e.j41(2,"p"),e.EFF(3,'Many nodes on the Earthcoin network are configured to run with the default 300MB mempool memory setting. When all 300MB of memory are used up, such nodes will reject transactions below a certain threshold feerate. Running Small Nodes allows mempool.space to tell you what this threshold feerate is\u2014this is the "Purging" feerate that shows on the front page when mempools are full, which you can use to be reasonably sure that your transaction will be widely propagated.'),e.k0s(),e.j41(4,"p"),e.EFF(5,"Big Node mempools are so big that they don't need to reject (or purge) transactions. Such nodes allow for mempool.space to provide you with information on any pending transaction it has received\u2014no matter how congested the mempool is, and no matter how low-feerate or low-priority the transaction is."),e.k0s())}function kt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"Memory usage on the front page refers to the real-time amount of system memory used by a Earthcoin node's mempool. This memory usage number is always higher than the total size of all pending transactions in the mempool due to indexes, pointers, and other overhead used by Earthcoin Core for storage and processing."),e.k0s(),e.j41(2,"p"),e.EFF(3,"mempool.space shows the memory usage of a Earthcoin node that has a very high mempool memory limit. As a result, when mempools fill up, you may notice memory usage on mempool.space go beyond 300MB. This is not a mistake\u2014this memory usage figure is high because it's for a Earthcoin node that isn't rejecting (or evicting) transactions. Consider it to be another data point to give you an idea of how congested the mempool is relative to the default memory limit of 300MB."),e.k0s(),e.j41(4,"p"),e.EFF(5,"A Earthcoin node running the default 300MB mempool memory limit, like most Raspberry Pi nodes, will never go past 300MB of memory usage."),e.k0s())}function St(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"When a new block is found, mining pools often send miners new block templates prior to fully validating the new block, often before they've even received the new block. During this time, it is not possible to select transactions for the next block as a pool isn't sure which transactions conflict with transactions already mined."),e.k0s(),e.j41(2,"p"),e.EFF(3,"While empty blocks do not add additional transactions to the blockchain, they do contribute to the overall security of transactions already in the chain."),e.k0s())}function vt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"Block validation rules do not strictly require that a block's timestamp be more recent than the timestamp of the block preceding it. Without a central authority, it's impossible to know what the exact correct time is. Instead, the Earthcoin protocol requires that a block's timestamp meet certain requirements. One of those requirements is that a block's timestamp cannot be older than the median timestamp of the 12 blocks that came before it. See more details "),e.j41(2,"a",110),e.EFF(3,"here"),e.k0s(),e.EFF(4,"."),e.k0s(),e.j41(5,"p"),e.EFF(6,"As a result, timestamps are only accurate to within an hour or so, which sometimes results in blocks with timestamps that appear out of order."),e.k0s())}function yt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"Mempool aims to show you the "),e.j41(2,"i"),e.EFF(3,"effective feerate"),e.k0s(),e.EFF(4," range for blocks\u2014how much would you actually need to pay to get a transaction included in a block."),e.k0s(),e.j41(5,"p"),e.EFF(6,"A transaction's effective feerate is not always the same as the feerate explicitly set for it. For example, if you see a 1 s/vb transaction in a block with a displayed feerate range of 5 s/vb to 72 s/vb, chances are that 1 s/vb transaction had a high-feerate child transaction that boosted its effective feerate to 5 s/vb or higher (this is how CPFP fee-bumping works). In such a case, it would be misleading to use 1 s/vb as the lower bound of the block's feerate range since it actually required more than 1 s/vb to confirm that transaction in that block."),e.k0s(),e.j41(7,"p"),e.EFF(8,"You can find a transaction's feerate on its transaction details page. If the transaction has any CPFP relationships, the page will also show the transaction's effective feerate along with links to descendent and/or ancestor transactions."),e.k0s())}function wt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"A block audit visually compares Mempool's expected block to the actual block for a particular block height."),e.k0s(),e.j41(2,"p"),e.EFF(3,"How is the expected block determined? Mempool monitors its view of the mempool and runs a re-implementation of Earthcoin Core's transaction selection algorithm to determine the transactions it expects to see in upcoming blocks ("),e.j41(4,"a",111),e.EFF(5,"source code here"),e.k0s(),e.EFF(6,"). Since there is a continual flow of new transactions, this algorithm runs every 2 seconds, and as a result, you will see the transactions "),e.j41(7,"a",112),e.EFF(8,"projected to be in upcoming blocks"),e.k0s(),e.EFF(9," change in near real-time."),e.k0s(),e.j41(10,"p"),e.EFF(11,"At the moment a new block is mined, Mempool saves a snapshot of its projected block template for the next block. We call this snapshot the "),e.j41(12,"b"),e.EFF(13,"expected block"),e.k0s(),e.EFF(14," for the block height in question, and it serves as the basis for the block audit."),e.k0s(),e.j41(15,"p"),e.EFF(16,"When details for an expected block and actual block are available, we can compare them. "),e.j41(17,"b"),e.EFF(18,"The purpose of block audits is to deduce when miners intentionally include or exclude transactions from blocks they mine."),e.k0s(),e.EFF(19," Since this information cannot be precisely known, Mempool uses a handful of heuristics to accomplish this."),e.k0s(),e.j41(20,"p"),e.EFF(21,"Block audits highlight transactions in different colors to convey these heuristics:"),e.k0s(),e.j41(22,"ul",113)(23,"li")(24,"span",114),e.EFF(25,"\u25a0"),e.k0s(),e.j41(26,"code"),e.EFF(27,"Added"),e.k0s(),e.j41(28,"p"),e.EFF(29,"A transaction is highlighted blue if it is not present in the expected block, present in the actual block, and also either:"),e.k0s(),e.j41(30,"ul")(31,"li"),e.EFF(32,"far out of the expected feerate range, meaning the miner may have intentionally prioritized the transaction"),e.k0s(),e.j41(33,"li"),e.EFF(34,"not in the mempool at all, meaning the miner may have accepted the transaction out-of-band"),e.k0s()(),e.j41(35,"p"),e.EFF(36,"Added transactions do not negatively affect "),e.j41(37,"a",115),e.nI1(38,"relativeUrl"),e.EFF(39,"block health"),e.k0s(),e.EFF(40,"."),e.k0s()(),e.j41(41,"li")(42,"span",116),e.EFF(43,"\u25a0"),e.k0s(),e.j41(44,"code"),e.EFF(45,"Recently broadcasted"),e.k0s(),e.j41(46,"p"),e.EFF(47,"A transaction is highlighted dark pink if it is present in the expected block, not present in the actual block, and was first seen by Mempool's Earthcoin node within 3 minutes of the block being mined."),e.k0s(),e.j41(48,"p"),e.EFF(49,"Due to network latency and other factors, it can take time for a miner's Earthcoin nodes to receive a transaction, so we do not assume a miner has intentionally excluded such a transaction from a block."),e.k0s(),e.j41(50,"p"),e.EFF(51,"Recently-broadcasted transactions do not negatively affect "),e.j41(52,"a",115),e.nI1(53,"relativeUrl"),e.EFF(54,"block health"),e.k0s(),e.EFF(55,"."),e.k0s()(),e.j41(56,"li")(57,"span",117),e.EFF(58,"\u25a0"),e.k0s(),e.j41(59,"code"),e.EFF(60,"Marginal fee"),e.k0s(),e.j41(61,"p"),e.EFF(62,"A transaction is darkened if it is in the low end of the expected feerate range and missing in either the expected block or the actual block."),e.k0s(),e.j41(63,"p"),e.EFF(64,"Such a transaction may have been displaced by an added transaction, or it may have been displaced by another transaction from the mempool that was also at the low end of the expected feerate range for the block. In either case, the deviation is not considered notable."),e.k0s(),e.j41(65,"p"),e.EFF(66,"Marginal fee transactions do not negatively affect "),e.j41(67,"a",115),e.nI1(68,"relativeUrl"),e.EFF(69,"block health"),e.k0s(),e.EFF(70,"."),e.k0s()(),e.j41(71,"li")(72,"span",118),e.EFF(73,"\u25a0"),e.k0s(),e.j41(74,"code"),e.EFF(75,"Removed"),e.k0s(),e.j41(76,"p"),e.EFF(77,"A transaction is highlighted bright pink if it is present in the expected block, not present in the actual block, and qualifies as neither recently-broadcasted nor marginal-fee. In other words, it has been in the mempool long enough to be widely propagated and has a feerate that is well within the range expected for the block. There is a chance such a transaction may have been intentionally excluded from the block."),e.k0s(),e.j41(78,"p"),e.EFF(79,"Removed transactions do negatively affect "),e.j41(80,"a",115),e.nI1(81,"relativeUrl"),e.EFF(82,"block health"),e.k0s(),e.EFF(83,"."),e.k0s()()(),e.j41(84,"p"),e.EFF(85,"See how results of the block audit are used to devise the block health score "),e.j41(86,"a",115),e.nI1(87,"relativeUrl"),e.EFF(88,"below"),e.k0s(),e.EFF(89,"."),e.k0s(),e.j41(90,"p",97),e.EFF(91,"Because of this feature's resource usage and availability requirements, it is only supported on official mempool.space instances."),e.k0s()),2&a&&(e.R7$(37),e.Y8G("routerLink",e.eq3(15,m,e.bMT(38,5,"/docs/faq"))),e.R7$(15),e.Y8G("routerLink",e.eq3(17,m,e.bMT(53,7,"/docs/faq"))),e.R7$(15),e.Y8G("routerLink",e.eq3(19,m,e.bMT(68,9,"/docs/faq"))),e.R7$(13),e.Y8G("routerLink",e.eq3(21,m,e.bMT(81,11,"/docs/faq"))),e.R7$(6),e.Y8G("routerLink",e.eq3(23,m,e.bMT(87,13,"/docs/faq"))))}function xt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"Block health is a measure of how many transactions appear to be intentionally excluded from a block\u2014a block without any transactions that appear intentionally excluded will have 100% health, while a block with 1 or more transactions that appear intentionally excluded will have sub-100% health."),e.k0s(),e.j41(2,"p"),e.EFF(3,"How is it calculated? Let "),e.j41(4,"span",119),e.EFF(5,"s"),e.j41(6,"sub"),e.EFF(7,"expected"),e.k0s()(),e.EFF(8," be the set of all transactions in Mempool's expected block and let "),e.j41(9,"span",119),e.EFF(10,"s"),e.j41(11,"sub"),e.EFF(12,"actual"),e.k0s()(),e.EFF(13," be the set of all transactions in the actual block. Then let "),e.j41(14,"span",119),e.EFF(15,"n"),e.k0s(),e.EFF(16," be the number of all transactions in both "),e.j41(17,"span",119),e.EFF(18,"s"),e.j41(19,"sub"),e.EFF(20,"expected"),e.k0s()(),e.EFF(21," and "),e.j41(22,"span",119),e.EFF(23,"s"),e.j41(24,"sub"),e.EFF(25,"actual"),e.k0s()(),e.EFF(26,"."),e.k0s(),e.j41(27,"p"),e.EFF(28,"Furthermore, let "),e.j41(29,"span",119),e.EFF(30,"r"),e.k0s(),e.EFF(31," be the number of transactions Mempool deduces were "),e.j41(32,"a",120),e.nI1(33,"relativeUrl"),e.EFF(34,"intentionally excluded"),e.k0s(),e.EFF(35," from "),e.j41(36,"span",119),e.EFF(37,"s"),e.j41(38,"sub"),e.EFF(39,"actual"),e.k0s()(),e.EFF(40,"."),e.k0s(),e.j41(41,"p"),e.EFF(42,"Block health is calculated as "),e.j41(43,"span",119),e.EFF(44,"n / ( n + r"),e.k0s(),e.EFF(45," )."),e.k0s(),e.j41(46,"p"),e.EFF(47,"The number of transactions appearing in both "),e.j41(48,"span",119),e.EFF(49,"s"),e.j41(50,"sub"),e.EFF(51,"expected"),e.k0s()(),e.EFF(52," and "),e.j41(53,"span",119),e.EFF(54,"s"),e.j41(55,"sub"),e.EFF(56,"actual"),e.k0s()(),e.EFF(57," is used (instead of a block's full transaction count) in order to minimize chances that block health is inadvertently impacted by transactions that were most likely not intentionally excluded:"),e.k0s(),e.j41(58,"ul")(59,"li"),e.EFF(60,"recently-broadcast transactions, since the miner may simply not have received them"),e.k0s(),e.j41(61,"li"),e.EFF(62,"certain low-feerate transactions, since the miner may have opted to replace them with more profitable out-of-band transactions"),e.k0s()(),e.j41(63,"p"),e.EFF(64,"As a result, block health is "),e.j41(65,"i"),e.EFF(66,"not"),e.k0s(),e.EFF(67," intended to be a measure of how closely an expected block resembles an actual block. The actual block can be vastly different from the expected block, but if no transactions appear to be intentionally excluded, it will have a high health rating ("),e.j41(68,"a",106),e.EFF(69,"extreme example"),e.k0s(),e.EFF(70,")."),e.k0s(),e.j41(71,"p"),e.EFF(72,"See more context in our FAQ on "),e.j41(73,"a",120),e.nI1(74,"relativeUrl"),e.EFF(75,"block audits"),e.k0s(),e.EFF(76,"."),e.k0s(),e.j41(77,"p",97),e.EFF(78,"Because of this feature's resource usage and availability requirements, it is only supported on official mempool.space instances."),e.k0s()),2&a&&(e.R7$(32),e.Y8G("routerLink",e.eq3(7,m,e.bMT(33,3,"/docs/faq"))),e.R7$(36),e.Y8G("routerLink",e.lJ4(9,me)),e.R7$(5),e.Y8G("routerLink",e.eq3(10,m,e.bMT(74,5,"/docs/faq"))))}function Et(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"Mempool Goggles\u2122 are a set of filters that can be applied to the "),e.j41(2,"a",106),e.nI1(3,"relativeUrl"),e.EFF(4,"mempool block visualizations"),e.k0s(),e.EFF(5," to highlight different types of transactions."),e.k0s(),e.j41(6,"p"),e.EFF(7,"There are currently 25 different Mempool Goggles\u2122 filters, grouped into six categories:"),e.k0s(),e.j41(8,"dl")(9,"dt"),e.EFF(10,"Features"),e.k0s(),e.j41(11,"dd")(12,"dl")(13,"dt"),e.EFF(14,"RBF enabled"),e.k0s(),e.j41(15,"dd"),e.EFF(16,"The transaction opts-in to BIP-125 replaceability."),e.k0s(),e.j41(17,"dt"),e.EFF(18,"RBF disabled"),e.k0s(),e.j41(19,"dd"),e.EFF(20,"The transaction does not opt-in to BIP-125 replaceability."),e.k0s(),e.j41(21,"dt"),e.EFF(22,"Version 1"),e.k0s(),e.j41(23,"dd"),e.EFF(24,"The default version for most transactions."),e.k0s(),e.j41(25,"dt"),e.EFF(26,"Version 2"),e.k0s(),e.j41(27,"dd"),e.EFF(28,"Required for transactions which use OP_CHECKSEQUENCEVERIFY relative timelocks."),e.k0s()()(),e.j41(29,"dt"),e.EFF(30,"Address Types"),e.k0s(),e.j41(31,"dd")(32,"dl")(33,"dt"),e.EFF(34,"P2PK"),e.k0s(),e.j41(35,"dd"),e.EFF(36,"Pay-to-public-key. A legacy output format most commonly found in old coinbase transactions."),e.k0s(),e.j41(37,"dt"),e.EFF(38,"Bare multisig"),e.k0s(),e.j41(39,"dd"),e.EFF(40,'A legacy form of multisig, most commonly used for data embedding schemes (see also "Fake pubkey").'),e.k0s(),e.j41(41,"dt"),e.EFF(42,"P2PKH"),e.k0s(),e.j41(43,"dd"),e.EFF(44,"Pay-to-public-key-hash. A legacy address type that locks outputs to a public key."),e.k0s(),e.j41(45,"dt"),e.EFF(46,"P2SH"),e.k0s(),e.j41(47,"dd"),e.EFF(48,"Pay-to-script-hash. A legacy address type that locks outputs to a "),e.j41(49,"em"),e.EFF(50,"redeem script"),e.k0s(),e.EFF(51,"."),e.k0s(),e.j41(52,"dt"),e.EFF(53,"P2WPKH"),e.k0s(),e.j41(54,"dd"),e.EFF(55,"Pay-to-witness-public-key-hash. The SegWit version of P2PKH."),e.k0s(),e.j41(56,"dt"),e.EFF(57,"P2WSH"),e.k0s(),e.j41(58,"dd"),e.EFF(59,"Pay-to-witness-script-hash. The SegWit version of P2SH."),e.k0s(),e.j41(60,"dt"),e.EFF(61,"Taproot"),e.k0s(),e.j41(62,"dd"),e.EFF(63,"Addresses using the SegWit V1 format added in the Taproot upgrade."),e.k0s()()(),e.j41(64,"dt"),e.EFF(65,"Behavior"),e.k0s(),e.j41(66,"dd")(67,"dl")(68,"dt"),e.EFF(69,"Paid for by child"),e.k0s(),e.j41(70,"dd"),e.EFF(71,"The transaction's effective fee rate has been increased by a higher rate CPFP child."),e.k0s(),e.j41(72,"dt"),e.EFF(73,"Pays for parent"),e.k0s(),e.j41(74,"dd"),e.EFF(75,"The transaction bumps the effective fee rate of a lower rate CPFP ancestor."),e.k0s(),e.j41(76,"dt"),e.EFF(77,"Replacement"),e.k0s(),e.j41(78,"dd"),e.EFF(79,"The transaction replaced a prior version via RBF."),e.k0s()()(),e.j41(80,"dt"),e.EFF(81,"Data"),e.k0s(),e.j41(82,"dd"),e.EFF(83," Different methods of embedding arbitrary data in a Earthcoin transaction. "),e.j41(84,"dl")(85,"dt"),e.EFF(86,"OP_RETURN"),e.k0s(),e.j41(87,"dt"),e.EFF(88,"Fake pubkey"),e.k0s(),e.j41(89,"dd"),e.EFF(90,"Data may be embedded in an invalid public key in a P2PK or Bare multisig output. This is a heuristic filter and can be prone to false positives and false negatives."),e.k0s(),e.j41(91,"dt"),e.EFF(92,"Inscription"),e.k0s(),e.j41(93,"dd"),e.EFF(94,"Data is embedded in the witness script of a taproot input."),e.k0s()()(),e.j41(95,"dt"),e.EFF(96,"Heuristics"),e.k0s(),e.j41(97,"dd"),e.EFF(98," These filters match common types of transactions according to subjective criteria. "),e.j41(99,"dl")(100,"dt"),e.EFF(101,"Coinjoin"),e.k0s(),e.j41(102,"dd"),e.EFF(103,"A type of collaborative privacy-improving transaction."),e.k0s(),e.j41(104,"dt"),e.EFF(105,"Consolidation"),e.k0s(),e.j41(106,"dd"),e.EFF(107,"The transaction condenses many inputs into a few outputs."),e.k0s(),e.j41(108,"dt"),e.EFF(109,"Batch payment"),e.k0s(),e.j41(110,"dd"),e.EFF(111,"The transaction sends coins from a few inputs to many outputs."),e.k0s()()(),e.j41(112,"dt"),e.EFF(113,"Sighash Flags"),e.k0s(),e.j41(114,"dd"),e.EFF(115," Different ways of signing inputs to Earthcoin transactions. Note that selecting multiple sighash filters will highlight transactions in which each sighash flag is used, but not necessarily in the same input. "),e.j41(116,"dl")(117,"dt"),e.EFF(118,"sighash_all"),e.k0s(),e.j41(119,"dt"),e.EFF(120,"sighash_none"),e.k0s(),e.j41(121,"dt"),e.EFF(122,"sighash_single"),e.k0s(),e.j41(123,"dt"),e.EFF(124,"sighash_default"),e.k0s(),e.j41(125,"dt"),e.EFF(126,"sighash_anyonecanpay"),e.k0s()()()()),2&a&&(e.R7$(2),e.Y8G("routerLink",e.eq3(3,m,e.bMT(3,1,"/mempool-block/0"))))}function Tt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,'A "sigop" is a way of accounting for the cost of "signature operations" in Earthcoin script, like '),e.j41(2,"code"),e.EFF(3,"OP_CHECKSIG"),e.k0s(),e.EFF(4,", "),e.j41(5,"code"),e.EFF(6,"OP_CHECKSIGVERIFY"),e.k0s(),e.EFF(7,", "),e.j41(8,"code"),e.EFF(9,"OP_CHECKMULTISIG"),e.k0s(),e.EFF(10," and "),e.j41(11,"code"),e.EFF(12,"OP_CHECKMULTISIGVERIFY"),e.k0s()(),e.j41(13,"p"),e.EFF(14,"These signature operations incur different costs depending on whether they are single or multi-sig operations, and on where they appear in a Earthcoin transaction."),e.k0s(),e.j41(15,"p"),e.EFF(16,"By consensus, each Earthcoin block is permitted to include a maximum of 80,000 sigops."),e.k0s())}function Mt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"Earthcoin blocks have two independent consensus-enforced resource constraints - a 4MWU weight limit, and the 80,000 sigop limit."),e.k0s(),e.j41(2,"p"),e.EFF(3,"Most transactions use more of the weight limit than the sigop limit. However, some transactions use a disproportionate number of sigops compared to their weight."),e.k0s(),e.j41(4,"p"),e.EFF(5,'To account for this, Earthcoin Core calculates and uses an "adjusted vsize" equal 5 times the number of sigops, or the unadjusted vsize, whichever is larger.'),e.k0s(),e.j41(6,"p"),e.EFF(7,"Then, during block template construction, Earthcoin Core selects transactions in descending order of fee rate measured in satoshis per "),e.j41(8,"i"),e.EFF(9,"adjusted vsize"),e.k0s()(),e.j41(10,"p"),e.EFF(11,"On mempool.space, effective fee rates for unconfirmed transactions are also measured in terms of satoshis per adjusted vsize, after accounting for CPFP relationships and other dependencies."),e.k0s())}function Ct(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"The projected mempool blocks represent what we expect the next blocks would look like if they were mined right now, and so each projected block follows all of the same rules and constraints as real mined blocks."),e.k0s(),e.j41(2,"p"),e.EFF(3,'Those constraints can sometimes cause transactions with lower fee rates to be included "ahead" of transactions with higher rates.'),e.k0s(),e.j41(4,"p"),e.EFF(5,"For example, if one projected block has a very small amount of space left, it might be able to fit one more tiny low fee rate transaction, while larger higher fee rate transactions have to wait for the following block."),e.k0s(),e.j41(6,"p"),e.EFF(7,"A similar effect can occur when there are a large number of transactions with very many sigops. In that scenario, each projected block can only include up to 80,000 sigops worth of transactions, after which the remaining space can only be filled by potentially much lower fee transactions with zero sigops."),e.k0s(),e.j41(8,"p"),e.EFF(9,"In extreme cases this can produce several projected blocks in a row with overlapping fee ranges, as a result of each projected block containing both high-feerate high-sigop transactions and lower feerate zero-sigop transactions."),e.k0s())}function Dt(a,s){1&a&&(e.EFF(0," The official mempool.space website is operated by The Mempool Open Source Project. See more information on our "),e.j41(1,"a",106),e.EFF(2,"About page"),e.k0s(),e.EFF(3,". There are also many unofficial instances of this website operated by individual members of the Earthcoin community.\n")),2&a&&(e.R7$(),e.Y8G("routerLink",e.lJ4(1,ue)))}function Rt(a,s){1&a&&e.EFF(0," We support one-click installation on a number of Raspberry Pi full-node distros including Umbrel, RaspiBlitz, MyNode, RoninDojo, and StartOS.\n")}function Pt(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"You can manually install Mempool on your own server, but this requires advanced sysadmin skills since you will be manually configuring everything. You could also use our "),e.j41(2,"a",121),e.EFF(3,"Docker images"),e.k0s(),e.EFF(4,"."),e.k0s(),e.j41(5,"p"),e.EFF(6,"In any case, we only provide support for manual deployments to "),e.j41(7,"a",82),e.EFF(8,"enterprise sponsors"),e.k0s(),e.EFF(9,"."),e.k0s(),e.j41(10,"p"),e.EFF(11,"For casual users, we strongly suggest installing Mempool using one of the "),e.j41(12,"a",122),e.EFF(13,"1-click install methods"),e.k0s(),e.EFF(14,"."),e.k0s())}function Jt(a,s){1&a&&(e.EFF(0," Yes, we publish Docker images (or you can build your own). Check out "),e.j41(1,"a",121),e.EFF(2,"the documentation"),e.k0s(),e.EFF(3," for details.\n"))}function Ot(a,s){1&a&&(e.j41(0,"p"),e.EFF(1,"If you're getting errors when doing address lookups, it's probably because of your Electrum server backend."),e.k0s(),e.j41(2,"p"),e.EFF(3,"Mempool uses an Electrum server to do address lookups. There are several implementations of the Electrum server protocol, and Mempool can use any of them, but the implementation you use affects performance:"),e.k0s(),e.j41(4,"ol")(5,"li")(6,"a",123),e.EFF(7,"romanz/electrs"),e.k0s(),e.EFF(8,". This is a common choice for its low resource requirements, and most full-node distros use it. But while this implementation works great for basic queries, it will struggle with heavier ones (e.g. looking up addresses with many transactions)\u2014especially when running on low-power hardware like a Raspberry Pi."),e.k0s(),e.j41(9,"li")(10,"a",124),e.EFF(11,"Fulcrum"),e.k0s(),e.EFF(12,". Fulcrum requires more resources than romanz/electrs but it can still run on a Raspberry Pi, and it handles heavy queries much more efficiently. If you're having issues with romanz/electrs, Fulcrum is worth a try."),e.k0s(),e.j41(13,"li")(14,"a",125),e.EFF(15,"mempool/electrs"),e.k0s(),e.EFF(16,". If you have stronger hardware, you could consider running mempool/electrs, the backend that powers mempool.space. It's a fork of Blockstream's Esplora, which is in turn a fork of romanz/electrs, intended for maximum performance and larger-scale deployments."),e.k0s()())}let jt=(()=>{class a{constructor(t,o){this.stateService=t,this.route=o,this.destroy$=new N.B,this.plainHostname=document.location.hostname,this.electrsPort=0,this.hostname=document.location.hostname,this.active=0,this.baseNetworkUrl="",this.desktopDocsNavPosition="relative",this.mobileViewport=!1,this.showMobileEnterpriseUpsell=!0,this.timeLtr=this.stateService.timeLtr.value,this.isMempoolSpaceBuild=this.stateService.isMempoolSpaceBuild,this.dict={}}ngAfterContentChecked(){this.faqTemplates&&this.faqTemplates.forEach(t=>this.dict[t.type]=t.template),this.desktopDocsNavPosition=window.pageYOffset>115?"fixed":"relative",this.mobileViewport=window.innerWidth<=992}ngAfterViewInit(){const t=this;setTimeout(()=>{if(this.route.snapshot.fragment&&(this.openEndpointContainer(this.route.snapshot.fragment),document.getElementById(this.route.snapshot.fragment))){let o=window.innerWidth<=992?100:60;window.scrollTo({top:document.getElementById(this.route.snapshot.fragment).offsetTop-o})}window.addEventListener("scroll",t.onDocScroll,{passive:!0})},1)}ngOnInit(){this.env=this.stateService.env,this.officialMempoolInstance=this.env.OFFICIAL_MEMPOOL_SPACE,this.auditEnabled=this.env.AUDIT,this.network$=(0,I.h)((0,L.of)(""),this.stateService.networkChanged$).pipe((0,B.M)(t=>("mempool"===this.env.BASE_MODULE&&""!==t&&""===this.env.ROOT_NETWORK?this.baseNetworkUrl=`/${t}`:"liquid"===this.env.BASE_MODULE&&(["","liquid"].includes(t)||(this.baseNetworkUrl=`/${t}`)),t))),""!==document.location.port&&(this.hostname=`${this.hostname}:${document.location.port}`),this.hostname=`${document.location.protocol}//${this.hostname}`,this.faq=D,this.restDocs=C,this.wsDocs=$,this.network$.pipe((0,z.Q)(this.destroy$)).subscribe(t=>{switch(this.active="liquid"===t||"liquidtestnet"===t?2:0,t){case"":case"mainnet":this.electrsPort=50002;break;case"testnet":this.electrsPort=60002;break;case"testnet4":this.electrsPort=40002;break;case"signet":this.electrsPort=60602;break;case"liquid":this.electrsPort=51002;break;case"liquidtestnet":this.electrsPort=51302}}),this.timeLtrSubscription=this.stateService.timeLtr.subscribe(t=>{this.timeLtr=!!t})}ngOnDestroy(){this.destroy$.next(!0),this.destroy$.complete(),window.removeEventListener("scroll",this.onDocScroll),this.timeLtrSubscription.unsubscribe()}onDocScroll(){this.desktopDocsNavPosition=window.pageYOffset>115?"fixed":"relative"}anchorLinkClick(t){let o=t.fragment,c=window.innerWidth<=992?100:60;window.scrollTo({top:document.getElementById(o).offsetTop-c}),window.history.pushState({},null,document.location.href.split("#")[0]+"#"+o),this.openEndpointContainer(o)}openEndpointContainer(t){let o=0;if(document.getElementById(t+"-tab-header")&&(o=document.getElementById(t+"-tab-header").scrollHeight),window.innerWidth<=992&&("rest"===this.whichTab||"faq"===this.whichTab)&&t){const c=document.querySelector("#"+t),i=document.querySelector("#"+t+" .endpoint-content"),p=i.clientHeight;i.classList.contains("open")?(c.style.height="auto",i.style.top="-10000px",i.style.opacity="0",i.classList.remove("open")):(c.style.height=p+o+28+"px",i.style.top=o+28+"px",i.style.opacity="1",i.classList.add("open"))}}wrapUrl(t,o,c=!1){let i=[];["","mainnet"].includes(t)&&(i=o.codeSampleMainnet.curl),"testnet"===t&&(i=o.codeSampleTestnet.curl),"testnet4"===t&&(i=o.codeSampleTestnet.curl),"signet"===t&&(i=o.codeSampleSignet.curl),"liquid"===t&&(i=o.codeSampleLiquid.curl),"liquidtestnet"===t&&(i=o.codeSampleLiquidTestnet.curl);let p="";"mempool"===this.env.BASE_MODULE?["","mainnet"].includes(t)||(p=`/${t}`):"liquid"===this.env.BASE_MODULE&&(["","liquid"].includes(t)||(p=`/${t}`)),t===this.env.ROOT_NETWORK&&(p="");let g=o.codeTemplate.curl;for(let u=0;u<i.length;u++)g=g.replace("%{"+(u+1)+"}",i[u]);if(c){const u=this.hostname.replace("https://","wss://");return u.replace("http://","ws://"),`${u}${p}${g}`}return`${this.hostname}${p}${g}`}static#e=this.\u0275fac=function(o){return new(o||a)(e.rXU(y.d),e.rXU(v.nX))};static#t=this.\u0275cmp=e.VBU({type:a,selectors:[["app-api-docs"]],viewQuery:function(o,c){if(1&o&&e.GBs(R,5),2&o){let i;e.mGM(i=e.lsd())&&(c.faqTemplates=i)}},inputs:{whichTab:"whichTab"},decls:35,vars:5,consts:()=>{let t,o,c,i,p,g,u;return t="" + "[\ufffd#1\ufffd|\ufffd#3\ufffd]" + "" + "\ufffd#2\ufffd" + "mempool.space merely provides data about the Earthcoin network." + "\ufffd/#2\ufffd" + " It cannot help you with retrieving funds, wallet issues, etc." + "[\ufffd/#1\ufffd|\ufffd/#3\ufffd]" + "" + "[\ufffd#1\ufffd|\ufffd#3\ufffd]" + "For any such requests, you need to get in touch with the entity that helped make the transaction (wallet software, exchange company, etc)." + "[\ufffd/#1\ufffd|\ufffd/#3\ufffd]" + "",t=e.k04(t),o="REST API \u0938\u0947\u0935\u093E",c="\u0948\u0902\u0921\u092A\u0949\u0907\u0928\u094D\u091F ",i="\u0935\u093F\u0935\u0930\u0923",p="\u0948\u0902\u0921\u092A\u0949\u0907\u0928\u094D\u091F ",g="\u0935\u093F\u0935\u0930\u0923",u="\u0921\u093F\u092B\u093C\u0949\u0932\u094D\u091F \u092A\u0941\u0936: \u0915\u094D\u0930\u093F\u092F\u093E: '\u091A\u093E\u0939\u0924\u0947 \u0939\u0948\u0902', \u0921\u0947\u091F\u093E: ['\u092C\u094D\u0932\u0949\u0915', ...] \u091C\u094B \u0906\u092A \u091A\u093E\u0939\u0924\u0947 \u0939\u0948\u0902 \u0909\u0938\u0947 \u0935\u094D\u092F\u0915\u094D\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0927\u0915\u094D\u0915\u093E \u0926\u093F\u092F\u093E\u0964 \u0909\u092A\u0932\u092C\u094D\u0927: \u092C\u094D\u0932\u0949\u0915, \u092E\u0947\u092E\u092A\u0942\u0932-\u092C\u094D\u0932\u0949\u0915, \u0932\u093E\u0907\u0935-2h-\u091A\u093E\u0930\u094D\u091F, \u0914\u0930 \u0906\u0901\u0915\u0921\u093C\u0947\u0964 \u092A\u0924\u0947 \u0938\u0947 \u0938\u0902\u092C\u0902\u0927\u093F\u0924 \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u094B \u092A\u0941\u0936 \u0915\u0930\u0947\u0902: '\u091F\u094D\u0930\u0948\u0915-\u090F\u0921\u094D\u0930\u0947\u0938': '3PbJ...bF9B' \u0907\u0928\u092A\u0941\u091F \u092F\u093E \u0906\u0909\u091F\u092A\u0941\u091F \u0915\u0947 \u0930\u0942\u092A \u092E\u0947\u0902 \u0909\u0938 \u092A\u0924\u0947 \u0935\u093E\u0932\u0947 \u0938\u092D\u0940 \u0928\u090F \u0932\u0947\u0928\u0926\u0947\u0928 \u092A\u094D\u0930\u093E\u092A\u094D\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F\u0964 \u0932\u0947\u0928-\u0926\u0947\u0928 \u0915\u0940 \u090F\u0915 \u0938\u0930\u0923\u0940 \u0926\u0947\u0924\u093E \u0939\u0948\u0964 \u0928\u090F \u092E\u0947\u092E\u092A\u0942\u0932 \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u0947 \u0932\u093F\u090F \u092A\u0924\u093E-\u0932\u0947\u0928\u0926\u0947\u0928, \u0914\u0930 \u0928\u090F \u092C\u094D\u0932\u0949\u0915 \u0915\u0940 \u092A\u0941\u0937\u094D\u091F\u093F \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u0947 \u0932\u093F\u090F \u092C\u094D\u0932\u0949\u0915-\u0932\u0947\u0928\u0926\u0947\u0928\u0964",u=e.k04(u),[["faqDisclaimer",""],["liquid_link_example",""],["default_link_example",""],["liquid_description",""],["default_description",""],["liquid_code_example",""],["default_code_example",""],["bisq_link_example",""],["bisq_description",""],["bisq_code_example",""],t,o,c,i,p,g,u,[4,"ngIf"],["type","what-is-a-mempool"],["type","what-is-a-mempool-explorer"],["type","what-is-a-blockchain"],["type","what-is-a-block-explorer"],["type","what-is-mining"],["type","what-are-mining-pools"],["type","what-are-vb-wu"],["type","what-is-svb"],["type","why-is-transaction-stuck-in-mempool"],["type","how-to-get-transaction-confirmed-quickly"],["type","how-prevent-stuck-transaction"],["type","looking-up-transactions"],["type","looking-up-addresses"],["type","looking-up-blocks"],["type","looking-up-fee-estimates"],["type","looking-up-historical-trends"],["type","what-is-full-mempool"],["type","how-big-is-mempool-used-by-mempool-space"],["type","what-is-memory-usage"],["type","why-empty-blocks"],["type","why-block-timestamps-dont-always-increase"],["type","why-dont-fee-ranges-match"],["type","how-do-block-audits-work"],["type","what-is-block-health"],["type","how-do-mempool-goggles-work"],["type","what-are-sigops"],["type","what-is-adjusted-vsize"],["type","why-do-the-projected-block-fee-ranges-overlap"],["type","who-runs-this-website"],["type","host-my-own-instance-raspberry-pi"],["type","host-my-own-instance-server"],["type","install-mempool-with-docker"],["type","address-lookup-issues"],[1,"container-xl","text-left"],["id","faq",4,"ngIf"],["id","restAPI",4,"ngIf"],["id","websocketAPI",4,"ngIf"],["id","electrs",4,"ngIf"],["id","faq"],["id","doc-nav-desktop",1,"hide-on-mobile",3,"ngClass"],[3,"navLinkClickEvent","network","whichTab"],[1,"doc-content"],["id","disclaimer"],["class","doc-item-container",4,"ngFor","ngForOf"],["name","warning","viewBox","0 0 304 304","fill","#ffc107","width","50","height","50",1,"disclaimer-warning"],[4,"ngTemplateOutlet"],[1,"doc-item-container"],["class","endpoint-container",3,"id",4,"ngIf"],[1,"endpoint-container",3,"id"],[1,"section-header",3,"click","id"],[1,"endpoint-content"],["class","endpoint",4,"ngTemplateOutlet"],[1,"endpoint"],["id","restAPI"],["id","enterprise-cta-mobile",4,"ngIf"],[1,"doc-welcome-note"],["class","doc-welcome-note api-note",4,"ngIf"],["id","enterprise-cta-mobile"],[1,"no-line-break"],[1,"button-group"],[1,"btn","btn-small","btn-secondary",3,"click"],["href","https://mempool.space/enterprise",1,"btn","btn-small","btn-purple"],[3,"icon","styles"],[1,"doc-welcome-note","api-note"],["href","https://mempool.space/enterprise"],[1,"subtitle"],[4,"ngIf","ngIfElse"],[1,"description"],["target","_blank","rel","nofollow",3,"href"],["target","_blank","rel","nofollow",3,"href",4,"ngIf"],[3,"innerHTML"],[3,"hostname","baseNetworkUrl","method","code","network","showCodeExample"],["id","websocketAPI"],[1,"api-category"],[1,"websocket"],[3,"method","hostname","code","network","showCodeExample"],["id","electrs"],[1,"doc-content","no-sidebar"],["class","note",4,"ngIf"],[1,"note"],["href","/signet/docs/api/electrs"],["href","/testnet4/docs/api/electrs"],[1,"blockchain-wrapper",3,"dir"],[1,"position-container"],[1,"blocks-wrapper"],["id","divider"],["href","https://programmingbitcoin.com/understanding-segwit-block-size","target","_blank"],["fragment","why-is-transaction-stuck-in-mempool",3,"routerLink"],[3,"routerLink"],["fragment","looking-up-fee-estimates",3,"routerLink"],["fragment","how-to-get-transaction-confirmed-quickly",3,"routerLink"],[3,"href","target"],["href","https://en.bitcoin.it/wiki/Block_timestamp","target","_blank"],["href","https://github.com/mempool/mempool/blob/master/backend/src/api/mempool-blocks.ts","target","_blank"],["href","/mempool-block/0"],[1,"no-bull","block-audit"],[1,"block-audit-highlight-color","added"],["fragment","what-is-block-health",3,"routerLink"],[1,"block-audit-highlight-color","recent"],[1,"block-audit-highlight-color","marginal"],[1,"block-audit-highlight-color","removed"],[1,"math"],["fragment","how-do-block-audits-work",3,"routerLink"],["href","https://github.com/mempool/mempool/tree/master/docker","target","_blank"],["href","https://github.com/mempool/mempool#one-click-installation","target","_blank"],["href","https://github.com/romanz/electrs","target","_blank"],["href","https://github.com/cculianu/Fulcrum","target","_blank"],["href","https://github.com/mempool/electrs","target","_blank"]]},template:function(o,c){1&o&&(e.DNE(0,tt,6,4,"ng-container",17),e.nI1(1,"async"),e.DNE(2,at,2,0,"ng-template",18)(3,ot,16,3,"ng-template",19)(4,ct,2,0,"ng-template",20)(5,nt,2,0,"ng-template",21)(6,dt,4,0,"ng-template",22)(7,st,1,0,"ng-template",23)(8,it,14,0,"ng-template",24)(9,lt,18,15,"ng-template",25)(10,rt,10,5,"ng-template",26)(11,ft,11,4,"ng-template",27)(12,pt,8,5,"ng-template",28)(13,bt,1,0,"ng-template",29)(14,mt,1,0,"ng-template",30)(15,ut,1,0,"ng-template",31)(16,ht,53,25,"ng-template",32)(17,gt,5,5,"ng-template",33)(18,_t,6,0,"ng-template",34)(19,Ft,6,0,"ng-template",35)(20,kt,6,0,"ng-template",36)(21,St,4,0,"ng-template",37)(22,vt,7,0,"ng-template",38)(23,yt,9,0,"ng-template",39)(24,wt,92,25,"ng-template",40)(25,xt,79,12,"ng-template",41)(26,Et,127,5,"ng-template",42)(27,Tt,17,0,"ng-template",43)(28,Mt,12,0,"ng-template",44)(29,Ct,10,0,"ng-template",45)(30,Dt,4,2,"ng-template",46)(31,Rt,1,0,"ng-template",47)(32,Pt,15,0,"ng-template",48)(33,Jt,4,0,"ng-template",49)(34,Ot,17,0,"ng-template",50)),2&o&&e.Y8G("ngIf",e.eq3(3,x,e.bMT(1,1,c.network$)))},dependencies:[F.YU,F.Sq,F.bT,F.T3,v.Wk,P.aY,H.X,U.U,X.m,ce,fe,R,F.Jj,J.U],styles:['.center[_ngcontent-%COMP%]{text-align:center}.note[_ngcontent-%COMP%]{font-style:italic}.text-small[_ngcontent-%COMP%]{font-size:12px}.container-xl[_ngcontent-%COMP%]{display:flex;min-height:75vh;flex-direction:column}code[_ngcontent-%COMP%]{background-color:var(--bg);font-family:Consolas,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New}.math[_ngcontent-%COMP%]{font-family:monospace;margin-left:4px;margin-right:4px}tr[_ngcontent-%COMP%]{white-space:inherit}.nowrap[_ngcontent-%COMP%]{white-space:nowrap}li.nav-item[_ngcontent-%COMP%]{width:100%}@media (min-width: 676px){li.nav-item[_ngcontent-%COMP%]{width:auto}}ul.no-bull[_ngcontent-%COMP%]{list-style:none}ul.no-bull.block-audit[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   code[_ngcontent-%COMP%]{text-transform:uppercase}ul.no-bull.block-audit[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-right:10px}ul.no-bull.block-audit[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   span.block-audit-highlight-color.added[_ngcontent-%COMP%]{color:#09f}ul.no-bull.block-audit[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   span.block-audit-highlight-color.removed[_ngcontent-%COMP%]{color:#f344df}ul.no-bull.block-audit[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   span.block-audit-highlight-color.recent[_ngcontent-%COMP%]{color:#8a3480}ul.no-bull.block-audit[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   span.block-audit-highlight-color.marginal[_ngcontent-%COMP%]{color:#414127}ul.no-bull.block-audit[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-left:25px;margin-top:5px}ul.no-bull.block-audit[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{margin-left:15px;margin-bottom:15px}ul.no-bull.block-audit[_ngcontent-%COMP%]   code[_ngcontent-%COMP%]{background-color:inherit}.doc-welcome-note[_ngcontent-%COMP%]{margin-bottom:0}.api-note[_ngcontent-%COMP%]{margin-top:1rem}.nav-tabs[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%]{border-bottom:1px solid #fff}@media (min-width: 676px){.nav-tabs[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%]{border-bottom:1px solid var(--active-bg)}}.code-tab[_ngcontent-%COMP%]{width:auto;margin:20px auto 10px}.code-tab[_ngcontent-%COMP%]   li.nav-item[_ngcontent-%COMP%]{width:auto}.code[_ngcontent-%COMP%]   .tab-content[_ngcontent-%COMP%]{padding:0}.code[_ngcontent-%COMP%]   .nav-tabs[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%]{border-bottom:1px solid var(--active-bg)}.code[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.description[_ngcontent-%COMP%]{margin-top:20px}.title[_ngcontent-%COMP%]{font-weight:700;color:#fff;font-size:1.25rem}.subtitle[_ngcontent-%COMP%]{font-weight:700}.divider[_ngcontent-%COMP%]{width:100%;margin:30px auto;height:1px;background:#333}.difficulty[_ngcontent-%COMP%]{padding:15px}#doc-nav-desktop[_ngcontent-%COMP%]{width:300px;margin-top:-15px}#doc-nav-desktop.relative[_ngcontent-%COMP%]{float:left;overflow:hidden}#doc-nav-desktop.fixed[_ngcontent-%COMP%]{float:unset;position:fixed;top:80px;overflow-y:auto;height:calc(100vh - 75px);scrollbar-color:var(--secondary) var(--active-bg);scrollbar-width:thin}[_ngcontent-%COMP%]::-webkit-scrollbar{width:3px}[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:var(--active-bg)}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:var(--secondary);border-radius:5px;border:none}.doc-content[_ngcontent-%COMP%]{width:calc(100% - 330px);float:right}.doc-content.no-sidebar[_ngcontent-%COMP%]{width:100%}h3[_ngcontent-%COMP%]{margin:2rem 0 0}.endpoint-container[_ngcontent-%COMP%]:before{display:block;content:" ";height:1px;margin-top:-1px;visibility:hidden}.endpoint-container[_ngcontent-%COMP%]   .section-header[_ngcontent-%COMP%]{display:block;background-color:var(--secondary);color:var(--info);padding:1rem 1.3rem;font-weight:700;border-radius:.25rem;margin:20px 0;font-size:24px;position:relative;cursor:pointer}.endpoint-container[_ngcontent-%COMP%]   .section-header[_ngcontent-%COMP%]:hover{text-decoration:none}.endpoint-container[_ngcontent-%COMP%]   .section-header[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:var(--fg);background-color:var(--tertiary);font-size:12px;text-transform:uppercase;font-weight:400;padding:8px 10px;letter-spacing:1px;border-radius:.25rem;font-family:monospace;float:right;white-space:nowrap}.endpoint-container[_ngcontent-%COMP%]   .section-header[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}.endpoint-container[_ngcontent-%COMP%]   .section-header[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child{padding-right:24px}#doc-nav-mobile[_ngcontent-%COMP%]{position:fixed;top:20px;width:calc(100% - 60px);z-index:100}#doc-nav-mobile[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%]{padding:0 1.25rem 1.25rem}#doc-nav-mobile[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{background-color:var(--secondary);z-index:100;border-radius:0 0 .5rem .5rem;height:55vh;overflow-y:auto}#doc-nav-mobile[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;background-color:var(--primary);color:var(--fg);border-color:var(--primary);border-radius:.5rem .5rem 0 0}.blockchain-wrapper[_ngcontent-%COMP%]{display:block;height:100%;width:100%;min-height:220px;position:relative;overflow:hidden}.blockchain-wrapper[_ngcontent-%COMP%]   .position-container[_ngcontent-%COMP%]{position:absolute;left:50%;bottom:158px}.blockchain-wrapper[_ngcontent-%COMP%]   #divider[_ngcontent-%COMP%]{width:2px;height:175px;left:0;top:-40px;position:absolute}.blockchain-wrapper.time-ltr[_ngcontent-%COMP%]   .blocks-wrapper[_ngcontent-%COMP%]{transform:scaleX(-1)}.ltr-layout[_nghost-%COMP%]   .blockchain-wrapper.time-ltr[_ngcontent-%COMP%]   .blocks-wrapper[_ngcontent-%COMP%], .ltr-layout   [_nghost-%COMP%]   .blockchain-wrapper.time-ltr[_ngcontent-%COMP%]   .blocks-wrapper[_ngcontent-%COMP%], .ltr-layout[_nghost-%COMP%]   .blockchain-wrapper[_ngcontent-%COMP%]   .blocks-wrapper[_ngcontent-%COMP%], .ltr-layout   [_nghost-%COMP%]   .blockchain-wrapper[_ngcontent-%COMP%]   .blocks-wrapper[_ngcontent-%COMP%]{direction:ltr}.rtl-layout[_nghost-%COMP%]   .blockchain-wrapper.time-ltr[_ngcontent-%COMP%]   .blocks-wrapper[_ngcontent-%COMP%], .rtl-layout   [_nghost-%COMP%]   .blockchain-wrapper.time-ltr[_ngcontent-%COMP%]   .blocks-wrapper[_ngcontent-%COMP%], .rtl-layout[_nghost-%COMP%]   .blockchain-wrapper[_ngcontent-%COMP%]   .blocks-wrapper[_ngcontent-%COMP%], .rtl-layout   [_nghost-%COMP%]   .blockchain-wrapper[_ngcontent-%COMP%]   .blocks-wrapper[_ngcontent-%COMP%]{direction:rtl}#disclaimer[_ngcontent-%COMP%]{background-color:var(--bg);padding:24px;margin:24px 0}.disclaimer-warning[_ngcontent-%COMP%]{margin-right:50px}#disclaimer[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:last-child{margin-bottom:0}#enterprise-cta-mobile[_ngcontent-%COMP%]{padding:20px;background-color:var(--bg);border-radius:.25rem;text-align:center;position:fixed;z-index:100;left:30px;width:calc(100% - 60px);bottom:70px;display:none;border:3px solid #533180}#enterprise-cta-mobile[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:16px;display:inline-block;margin:0 auto}#enterprise-cta-mobile[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{padding:4px 8px;font-size:16px;margin:15px 5px 5px}#enterprise-cta-mobile[_ngcontent-%COMP%]   .btn-secondary[_ngcontent-%COMP%]:hover{background-color:var(--secondary);border-color:var(--secondary)}#enterprise-cta-mobile[_ngcontent-%COMP%]   .no-line-break[_ngcontent-%COMP%]{white-space:nowrap}@media (max-width: 992px){h3[_ngcontent-%COMP%]{margin:1.5rem 0 0}.hide-on-mobile[_ngcontent-%COMP%]{display:none}.disclaimer-warning[_ngcontent-%COMP%]{display:block;margin:2px auto 16px;text-align:center}.doc-content[_ngcontent-%COMP%]{width:100%;float:unset}.endpoint-container[_ngcontent-%COMP%]{position:relative;overflow:hidden;height:auto;transition:.5s height ease}.endpoint-container[_ngcontent-%COMP%]   .section-header[_ngcontent-%COMP%]{margin:0;font-size:18px;z-index:1}.endpoint-container[_ngcontent-%COMP%]   .section-header[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:none}.endpoint-container[_ngcontent-%COMP%]:before{height:5px;margin-top:10px}.endpoint-container[_ngcontent-%COMP%]   .endpoint-content[_ngcontent-%COMP%]{width:100%;position:absolute;top:-10000px;opacity:0;transition:.5s opacity ease}.doc-welcome-note[_ngcontent-%COMP%]{font-size:.85rem}#disclaimer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{display:none}#enterprise-cta-mobile[_ngcontent-%COMP%]{display:initial}}@media (min-width: 992px){.hide-on-desktop[_ngcontent-%COMP%], h3[_ngcontent-%COMP%]{display:none}.doc-item-container[_ngcontent-%COMP%]:last-of-type   .endpoint-container[_ngcontent-%COMP%]{margin-bottom:4rem}}dl[_ngcontent-%COMP%]{margin:0;padding:0}dt[_ngcontent-%COMP%]{font-weight:700;color:var(--title-fg);padding:5px 0}dd[_ngcontent-%COMP%]{padding:2px 0}dd[_ngcontent-%COMP%] > dl[_ngcontent-%COMP%]{padding-left:1em;border-left:2px solid var(--title-fg);margin-left:1em;margin-top:5px}dd[_ngcontent-%COMP%] > dl[_ngcontent-%COMP%] > dt[_ngcontent-%COMP%]{display:inline;font-weight:400;color:#e83e8c;font-family:Consolas,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New;text-transform:uppercase}dd[_ngcontent-%COMP%] > dl[_ngcontent-%COMP%] > dt[_ngcontent-%COMP%]:before{content:"";display:block}dd[_ngcontent-%COMP%] > dl[_ngcontent-%COMP%] > dd[_ngcontent-%COMP%]{display:inline;margin-left:1em}']})}return a})();const w=a=>[a];function qt(a,s){1&a&&e.nrm(0,"app-api-docs",11),2&a&&e.Y8G("whichTab","faq")}function At(a,s){1&a&&(e.j41(0,"li",6)(1,"a",7),e.nI1(2,"relativeUrl"),e.EFF(3,"FAQ"),e.k0s(),e.DNE(4,qt,1,1,"ng-template",8),e.k0s()),2&a&&(e.Y8G("ngbNavItem",0),e.R7$(),e.Y8G("routerLink",e.eq3(4,w,e.bMT(2,2,"/docs/faq"))))}function Gt(a,s){1&a&&e.nrm(0,"app-api-docs",11),2&a&&e.Y8G("whichTab","rest")}function Nt(a,s){1&a&&e.nrm(0,"app-api-docs",11),2&a&&e.Y8G("whichTab","websocket")}function It(a,s){1&a&&(e.j41(0,"li",6)(1,"a",7),e.nI1(2,"relativeUrl"),e.EFF(3,"API - WebSocket"),e.k0s(),e.DNE(4,Nt,1,1,"ng-template",8),e.k0s()),2&a&&(e.Y8G("ngbNavItem",2),e.R7$(),e.Y8G("routerLink",e.eq3(4,w,e.bMT(2,2,"/docs/api/websocket"))))}function Lt(a,s){1&a&&e.nrm(0,"app-api-docs",11),2&a&&e.Y8G("whichTab","electrs")}function Bt(a,s){1&a&&(e.j41(0,"li",12)(1,"a",7),e.nI1(2,"relativeUrl"),e.EFF(3,"API - Electrum RPC"),e.k0s(),e.DNE(4,Lt,1,1,"ng-template",8),e.k0s()),2&a&&(e.Y8G("ngbNavItem",3),e.R7$(),e.Y8G("routerLink",e.eq3(4,w,e.bMT(2,2,"/docs/api/electrs"))))}let E=(()=>{class a{constructor(t,o,c,i,p){this.route=t,this.stateService=o,this.websocket=c,this.seoService=i,this.ogService=p,this.activeTab=0,this.showWebSocketTab=!0,this.showFaqTab=!0,this.showElectrsTab=!0,this.dir="ltr"}ngOnInit(){this.websocket.want(["blocks"]),this.env=this.stateService.env,this.showFaqTab="mempool"===this.env.BASE_MODULE,this.showElectrsTab=this.stateService.env.OFFICIAL_MEMPOOL_SPACE,document.querySelector("html").style.scrollBehavior="smooth"}ngDoCheck(){const t=this.route.snapshot.url;"faq"===t[0].path?(this.activeTab=0,this.seoService.setTitle("\u0938\u093E\u092E\u093E\u0928\u094D\u092F \u092A\u094D\u0930\u0936\u094D\u0928"),this.seoService.setDescription("\u0938\u093E\u092E\u093E\u0928\u094D\u092F \u092A\u094D\u0930\u0936\u094D\u0928\u094B\u0902 \u0915\u0947 \u0909\u0924\u094D\u0924\u0930 \u092A\u093E\u090F\u0901 \u091C\u0948\u0938\u0947: \u092E\u0947\u092E\u092A\u0942\u0932 \u0915\u094D\u092F\u093E \u0939\u0948? \u092E\u0947\u0930\u093E \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u094D\u092F\u094B\u0902 \u092A\u0941\u0937\u094D\u091F\u093F \u0928\u0939\u0940\u0902 \u0939\u094B \u0930\u0939\u093E \u0939\u0948? \u092E\u0948\u0902 \u092E\u0947\u092E\u092A\u0942\u0932 \u0913\u092A\u0928 \u0938\u094B\u0930\u094D\u0938 \u092A\u094D\u0930\u094B\u091C\u0947\u0915\u094D\u091F \u0915\u093E \u0905\u092A\u0928\u093E \u0907\u0902\u0938\u094D\u091F\u0947\u0902\u0938 \u0915\u0948\u0938\u0947 \u091A\u0932\u093E \u0938\u0915\u0924\u093E \u0939\u0942\u0901? \u0914\u0930 \u092D\u0940 \u092C\u0939\u0941\u0924 \u0915\u0941\u091B\u0964"),this.ogService.setManualOgImage("faq.jpg")):"rest"===t[1].path?(this.activeTab=1,this.seoService.setTitle("REST \u090F\u092A\u0940\u0906\u0908"),this.seoService.setDescription("liquid"===this.stateService.network||"liquidtestnet"===this.stateService.network?"liquid.network REST API \u0938\u0947\u0935\u093E \u0915\u0947 \u0932\u093F\u090F \u0926\u0938\u094D\u0924\u093E\u0935\u0947\u091C\u093C\u0940\u0915\u0930\u0923: \u092A\u0924\u0947, \u0932\u0947\u0928\u0926\u0947\u0928, \u0938\u0902\u092A\u0924\u094D\u0924\u093F, \u092C\u094D\u0932\u0949\u0915 \u0914\u0930 \u0905\u0927\u093F\u0915 \u0915\u0947 \u092C\u093E\u0930\u0947 \u092E\u0947\u0902 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u092A\u094D\u0930\u093E\u092A\u094D\u0924 \u0915\u0930\u0947\u0902\u0964":"\u092E\u0947\u092E\u092A\u0942\u0932.\u0938\u094D\u092A\u0947\u0938 REST API \u0938\u0947\u0935\u093E \u0915\u0947 \u0932\u093F\u090F \u0926\u0938\u094D\u0924\u093E\u0935\u0947\u091C\u093C\u0940\u0915\u0930\u0923: \u092A\u0924\u0947, \u0932\u0947\u0928\u0926\u0947\u0928, \u092C\u094D\u0932\u0949\u0915, \u0936\u0941\u0932\u094D\u0915, \u0916\u0928\u0928, \u0932\u093E\u0907\u091F\u0928\u093F\u0902\u0917 \u0928\u0947\u091F\u0935\u0930\u094D\u0915 \u0914\u0930 \u0905\u0927\u093F\u0915 \u0915\u0947 \u092C\u093E\u0930\u0947 \u092E\u0947\u0902 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u092A\u094D\u0930\u093E\u092A\u094D\u0924 \u0915\u0930\u0947\u0902\u0964")):"websocket"===t[1].path?(this.activeTab=2,this.seoService.setTitle("\u0935\u0947\u092C\u0938\u0949\u0915\u0947\u091F \u090F\u092A\u0940\u0906\u0908"),this.seoService.setDescription("liquid"===this.stateService.network||"liquidtestnet"===this.stateService.network?"liquid.network WebSocket API \u0938\u0947\u0935\u093E \u0915\u0947 \u0932\u093F\u090F \u0926\u0938\u094D\u0924\u093E\u0935\u0947\u091C\u093C\u0940\u0915\u0930\u0923: \u092C\u094D\u0932\u0949\u0915, \u092E\u0947\u092E\u092A\u0942\u0932, \u0932\u0947\u0928\u0926\u0947\u0928, \u092A\u0924\u0947, \u0906\u0926\u093F \u092A\u0930 \u0935\u093E\u0938\u094D\u0924\u0935\u093F\u0915 \u0938\u092E\u092F \u0915\u0940 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u092A\u094D\u0930\u093E\u092A\u094D\u0924 \u0915\u0930\u0947\u0902\u0964":"\u092E\u0947\u092E\u092A\u0942\u0932.\u0938\u094D\u092A\u0947\u0938 \u0935\u0947\u092C\u0938\u0949\u0915\u0947\u091F \u090F\u092A\u0940\u0906\u0908 \u0938\u0947\u0935\u093E \u0915\u0947 \u0932\u093F\u090F \u0926\u0938\u094D\u0924\u093E\u0935\u0947\u091C\u093C\u0940\u0915\u0930\u0923: \u092C\u094D\u0932\u0949\u0915, \u092E\u0947\u092E\u092A\u0942\u0932, \u0932\u0947\u0928\u0926\u0947\u0928, \u092A\u0924\u0947 \u0914\u0930 \u0905\u0927\u093F\u0915 \u092A\u0930 \u0935\u093E\u0938\u094D\u0924\u0935\u093F\u0915 \u0938\u092E\u092F \u0915\u0940 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u092A\u094D\u0930\u093E\u092A\u094D\u0924 \u0915\u0930\u0947\u0902\u0964")):(this.activeTab=3,this.seoService.setTitle("\u0907\u0932\u0947\u0915\u094D\u091F\u094D\u0930\u092E \u0906\u0930\u092A\u0940\u0938\u0940"),this.seoService.setDescription("\u0939\u092E\u093E\u0930\u0947 \u0907\u0932\u0947\u0915\u094D\u091F\u094D\u0930\u092E \u0906\u0930\u092A\u0940\u0938\u0940 \u0907\u0902\u091F\u0930\u092B\u093C\u0947\u0938 \u0915\u0947 \u0932\u093F\u090F \u0926\u0938\u094D\u0924\u093E\u0935\u0947\u091C\u093C\u0940\u0915\u0930\u0923: \u090F\u0938\u094D\u092A\u0932\u094B\u0930\u093E \u0907\u0902\u0938\u094D\u091F\u0947\u0902\u0938 \u0924\u0915 \u0924\u094D\u0935\u0930\u093F\u0924, \u0938\u0941\u0935\u093F\u0927\u093E\u091C\u0928\u0915 \u0914\u0930 \u0935\u093F\u0936\u094D\u0935\u0938\u0928\u0940\u092F \u092A\u0939\u0941\u0902\u091A \u092A\u094D\u0930\u093E\u092A\u094D\u0924 \u0915\u0930\u0947\u0902\u0964"))}ngOnDestroy(){document.querySelector("html").style.scrollBehavior="auto"}static#e=this.\u0275fac=function(o){return new(o||a)(e.rXU(v.nX),e.rXU(y.d),e.rXU(q.H),e.rXU(A.B),e.rXU(G.m))};static#t=this.\u0275cmp=e.VBU({type:a,selectors:[["app-docs"]],hostVars:1,hostBindings:function(o,c){2&o&&e.BMQ("dir",c.dir)},decls:15,vars:12,consts:()=>{let t;return t="\u092A\u094D\u0930\u0932\u0947\u0916\u0928",[["nav","ngbNav"],t,[1,"container-xl"],[1,"text-center"],["ngbNav","","role","tablist",1,"nav-tabs",3,"activeIdChange","animation","activeId"],["role","presentation",3,"ngbNavItem",4,"ngIf"],["role","presentation",3,"ngbNavItem"],["ngbNavLink","","role","tab",3,"routerLink"],["ngbNavContent",""],["role","presentation","class","hide-on-mobile",3,"ngbNavItem",4,"ngIf"],["id","main-tab-content",3,"ngbNavOutlet"],[3,"whichTab"],["role","presentation",1,"hide-on-mobile",3,"ngbNavItem"]]},template:function(o,c){if(1&o){const i=e.RV6();e.j41(0,"div",2)(1,"div",3)(2,"h2"),e.pXf(3,1),e.k0s(),e.j41(4,"ul",4,0),e.mxI("activeIdChange",function(g){return e.eBV(i),e.DH7(c.activeTab,g)||(c.activeTab=g),e.Njj(g)}),e.DNE(6,At,5,6,"li",5),e.j41(7,"li",6)(8,"a",7),e.nI1(9,"relativeUrl"),e.EFF(10,"API - REST"),e.k0s(),e.DNE(11,Gt,1,1,"ng-template",8),e.k0s(),e.DNE(12,It,5,6,"li",5)(13,Bt,5,6,"li",9),e.k0s(),e.nrm(14,"div",10),e.k0s()()}if(2&o){const i=e.sdS(5);e.R7$(4),e.Y8G("animation",!1),e.R50("activeId",c.activeTab),e.R7$(2),e.Y8G("ngIf",c.showFaqTab),e.R7$(),e.Y8G("ngbNavItem",1),e.R7$(),e.Y8G("routerLink",e.eq3(10,w,e.bMT(9,8,"/docs/api/rest"))),e.R7$(4),e.Y8G("ngIf",c.showWebSocketTab),e.R7$(),e.Y8G("ngIf",c.showElectrsTab),e.R7$(),e.Y8G("ngbNavOutlet",i)}},dependencies:[F.bT,v.Wk,_.Um,_.X9,_.sy,_.Gx,_.Ri,_.WA,_.m_,jt,J.U],styles:["#main-tab-content[_ngcontent-%COMP%]{text-align:left;padding-top:1rem;scroll-behavior:smooth;margin-bottom:20px}#footer[_ngcontent-%COMP%]{clear:both}@media (max-width: 992px){.hide-on-mobile[_ngcontent-%COMP%]{display:none}}"]})}return a})();const O=(window||{}).__env||{};let T=[];T=O.BASE_MODULE&&"liquid"===O.BASE_MODULE?[{path:"",redirectTo:"api/rest",pathMatch:"full"},{path:"api/:type",component:E},{path:"api",redirectTo:"api/rest",pathMatch:"full"},{path:"**",redirectTo:"api/rest",pathMatch:"full"}]:[{path:"",pathMatch:"full",redirectTo:"faq"},{path:"api/:type",component:E},{path:"faq",data:{networks:["bitcoin"]},component:E},{path:"api",redirectTo:"api/rest"},{path:"**",redirectTo:"api/faq"}];let zt=(()=>{class a{static#e=this.\u0275fac=function(o){return new(o||a)};static#t=this.\u0275mod=e.$C({type:a});static#a=this.\u0275inj=e.G2t({imports:[v.iI.forChild(T)]})}return a})(),$t=(()=>{class a{static#e=this.\u0275fac=function(o){return new(o||a)};static#t=this.\u0275mod=e.$C({type:a});static#a=this.\u0275inj=e.G2t({imports:[F.MD,j.G,zt]})}return a})()}}]);